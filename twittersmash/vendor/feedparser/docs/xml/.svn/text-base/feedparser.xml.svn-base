<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"../docbook/dtd/docbookx.dtd"
[
<!ENTITY % entities_version SYSTEM "version.xml">
%entities_version;
<!ENTITY license SYSTEM "license.xml">
<!ENTITY feedparser "<application>Universal Feed Parser</application>">
<!ENTITY feedparser_version "4.2">
<!ENTITY feedparser_modulename "<filename class='headerfile'>feedparser</filename>">
<!ENTITY feedparser_filename "<filename>feedparser.py</filename>">
<!ENTITY ultraliberalfeedparser "<application>Ultra-liberal Feed Parser</application>">
<!ENTITY ultraliberalrssparser "<application>Ultra-liberal RSS Parser</application>">
<!ENTITY title "Documentation">
<!ENTITY feedparser_domain "feedparser.org">
<!ENTITY url_feedparser "http://&feedparser_domain;/">
<!ENTITY url_book "&url_feedparser;docs/">
<!ENTITY python "<application>Python</application>">
<!ENTITY prompt "<prompt>>>> </prompt>">
<!ENTITY continuationprompt "<prompt>...     </prompt>">
<!ENTITY xml "<acronym condition='Extensible Markup Language'>XML</acronym>">
<!ENTITY html "<acronym condition='HyperText Markup Language'>HTML</acronym>">
<!ENTITY html5 "&html; 5">
<!ENTITY xhtml "<acronym condition='Extensible HyperText Markup Language'>XHTML</acronym>">
<!ENTITY http "<acronym condition='Hypertext Transfer Protocol'>HTTP</acronym>">
<!ENTITY https "<acronym>HTTPS</acronym>">
<!ENTITY mime "<acronym>MIME</acronym>">
<!ENTITY css "<acronym condition='Cascading Style Sheets'>CSS</acronym>">
<!ENTITY svg "<acronym condition='Scalable Vector Graphics'>SVG</acronym>">
<!ENTITY mathml "<acronym condition='Mathematical Markup Language'>MathML</acronym>">
<!ENTITY rfc "<acronym condition='Request For Comments'>RFC</acronym>">
<!ENTITY rfc822 "&rfc; 822">
<!ENTITY rfc3339 "&rfc; 3339">
<!ENTITY ebcdic "<acronym>EBCDIC</acronym>">
<!ENTITY ascii "<acronym>ASCII</acronym>">
<!ENTITY bom "<acronym condition='Byte Order Mark'>BOM</acronym>">
<!ENTITY iso "<acronym>ISO</acronym>">
<!ENTITY uri "<acronym condition='Uniform Resource Identifier'>URI</acronym>">
<!ENTITY iri "<acronym condition='International Resource Identifier'>IRI</acronym>">
<!ENTITY url "<acronym condition='Uniform Resource Locator'>URL</acronym>">
<!ENTITY cdf "<acronym condition='Channel Definition Format'>CDF</acronym>">
<!ENTITY rss "<acronym condition='Rich Site Summary'>RSS</acronym>">
<!ENTITY atom "Atom">
<!ENTITY hotrss "Hot &rss;">
<!ENTITY w3cdtf "<acronym condition='W3C Date Time Format'>W3CDTF</acronym>">
<!ENTITY soap "<acronym condition='Simple Object Access Protocol'>SOAP</acronym>">
<!ENTITY xmlbase "&xml;:Base">
<!ENTITY xfn "<acronym condition='XHTML Friends Network'>XFN</acronym>">
<!ENTITY hCard "hCard">
<!ENTITY vCard "vCard">
<!ENTITY time "<filename class='headerfile'>time</filename>">
<!ENTITY urllib2 "<filename class='headerfile'>urllib2</filename>">
<!ENTITY parse "<function>parse</function>">
<!ENTITY etag "ETag">
<!ENTITY lastmodified "Last-Modified">
<!ENTITY useragent "User-Agent">
<!ENTITY referrer "Referer">
<!ENTITY windows "Windows">
<!ENTITY iewin "Internet Explorer for Windows">
<!ENTITY javascript "Javascript">
<!ENTITY xmlbaseattr "<sgmltag class='attribute'>xml:base</sgmltag>">
<!ENTITY itunes "<application>iTunes</application>">
<!ENTITY one "<constant>1</constant>">
<!ENTITY zero "<constant>0</constant>">
<!ENTITY contenttype "<literal>Content-Type</literal>">
<!ENTITY contentlocation "<literal>Content-Location</literal>">
<!ENTITY url_time "http://docs.python.org/lib/module-time.html">
<!ENTITY url_atomwiki "http://www.intertwingly.net/wiki/pie/">
<!ENTITY url_rss090 "http://www.purplepages.ie/RSS/netscape/rss0.90.html">
<!ENTITY url_rss091n "http://my.netscape.com/publish/formats/rss-spec-0.91.html">
<!ENTITY url_rss091u "http://backend.userland.com/rss091">
<!ENTITY url_rss092 "http://backend.userland.com/rss092">
<!ENTITY url_rss093 "http://backend.userland.com/rss093">
<!ENTITY url_rss20 "http://blogs.law.harvard.edu/tech/rss">
<!ENTITY url_rss10 "http://purl.org/rss/1.0/">
<!ENTITY url_atom01 "http://www.intertwingly.net/blog/1506.html">
<!ENTITY url_atom02 "http://diveintomark.org/public/2003/08/atom02spec.txt">
<!ENTITY url_atom03 "http://www.mnot.net/drafts/draft-nottingham-atom-format-02.html">
<!ENTITY url_atom10 "http://www.ietf.org/rfc/rfc4287">
<!ENTITY url_cdf "http://www.w3.org/TR/NOTE-CDFsubmit.html">
<!ENTITY url_hotrss "http://diveintomark.org/archives/2004/04/14/hot-rss">
<!ENTITY url_enclosure_problems "http://gonze.com/weblog/story/5-17-4">
<!ENTITY url_rss091differences "http://diveintomark.org/archives/2004/02/04/incompatible-rss#example3">
<!ENTITY url_bozo "http://www.tbray.org/ongoing/When/200x/2004/01/11/PostelPilgrim">
<!ENTITY url_rfc3066 "http://www.ietf.org/rfc/rfc3066.txt">
<!ENTITY url_rfc3023 "http://www.ietf.org/rfc/rfc3023.txt">
<!ENTITY url_rfc3339 "http://www.ietf.org/rfc/rfc3339.txt">
<!ENTITY url_xmlbase "http://www.w3.org/TR/xmlbase/">
<!ENTITY url_cloud "http://www.thetwowayweb.com/soapmeetsrss">
<!ENTITY url_conditionalget "http://fishbowl.pastiche.org/2002/10/21/http_conditional_get_for_rss_hackers">
<!ENTITY url_httpwebservices "http://diveintopython.org/http_web_services/">
<!ENTITY url_referrer_rfc2616 "http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.36">
<!ENTITY url_rfc822 "http://www.ietf.org/rfc/rfc822.txt">
<!ENTITY url_iso8601 "http://hydracen.com/dx/iso8601.htm">
<!ENTITY url_w3cdtf "http://www.w3.org/TR/NOTE-datetime">
<!ENTITY url_sf_feedparser "http://sourceforge.net/projects/feedparser/">
<!ENTITY url_howtoconsumersssafely "http://diveintomark.org/archives/2003/06/12/how_to_consume_rss_safely">

<!ENTITY url_example "&url_book;examples/">
<!ENTITY url_example_atom10 "&url_example;atom10.xml">
<!ENTITY url_example_atom03 "&url_example;atom03.xml">
<!ENTITY url_example_rss20 "&url_example;rss20.xml">
<!ENTITY url_example_rss20dc "&url_example;rss20dc.xml">
<!ENTITY url_example_rss10 "&url_example;rss10.rdf">
<!ENTITY url_example_prism "&url_example;prism.rdf">
<!ENTITY url_example_nonstandard "&url_example;nonstandard_prefix.rdf">
<!ENTITY url_example_temporary "&url_example;temporary.xml">
<!ENTITY url_example_permanent "&url_example;permanent.xml">
<!ENTITY url_example_gone "&url_example;gone.xml">
<!ENTITY url_example_basic_auth "&url_example;basic_auth.xml">
<!ENTITY url_example_digest_auth "&url_example;digest_auth.xml">
<!ENTITY url_example_basic_auth_inline "http://test:basic@&feedparser_domain;/docs/examples/basic_auth.xml">
<!ENTITY url_example_digest_auth_inline "http://test:digest@&feedparser_domain;/docs/examples/digest_auth.xml">
<!ENTITY url_example_base "&url_example;base.xml">
<!ENTITY url_example_http_base "&url_example;http_base.xml">
<!ENTITY url_example_no_base "&url_example;no_base.xml">
<!ENTITY url_example_hcard "&url_example;hcard.xml">
<!ENTITY url_example_xfn "&url_example;xfn.xml">
<!ENTITY url_example_relenclosure "&url_example;rel-enclosure.xml">
<!ENTITY url_example_reltag "&url_example;rel-tag.xml">
<!ENTITY url_tests_sanitize "&url_feedparser;tests/wellformed/sanitize/">
<!ENTITY url_pythontime "http://docs.python.org/lib/module-time.html">
<!ENTITY url_urllib2 "http://docs.python.org/lib/module-urllib2.html">
<!ENTITY url_pythonunicode "http://docs.python.org/tut/node5.html#SECTION005130000000000000000">
<!ENTITY url_sectionf "http://www.w3.org/TR/REC-xml/#sec-guessing-no-ext-info">
<!ENTITY url_wellformedness "http://www.imc.org/atom-syntax/mail-archive/msg05575.html">
<!ENTITY url_cjkcodecs "http://cjkpython.i18n.org/">
<!ENTITY url_xmlbase "http://www.w3.org/TR/xmlbase/">
<!ENTITY url_podcasting "http://en.wikipedia.org/wiki/Podcasting">
<!ENTITY url_microformats "http://microformats.org/">
<!ENTITY url_microformats_hcard "&url_microformats;wiki/hcard">
<!ENTITY url_microformats_reltag "&url_microformats;wiki/rel-tag">
<!ENTITY url_microformats_relenclosure "&url_microformats;wiki/rel-enclosure">
<!ENTITY url_xfn "&url_microformats;wiki/XFN">
<!ENTITY url_xfn_profile "http://gmpg.org/xfn/11">
<!ENTITY url_chardet "http://chardet.feedparser.org/">
<!ENTITY chardet_name "<application>Universal Encoding Detector</application>">
<!ENTITY chardet "<ulink url='&url_chardet;'>&chardet_name;</ulink>">
<!ENTITY url_beautifulsoup "http://www.crummy.com/software/BeautifulSoup/">
<!ENTITY beautifulsoup_name "Beautiful Soup">
<!ENTITY beautifulsoup "<ulink url='&url_beautifulsoup;'>&beautifulsoup_name;</ulink>">

<!ENTITY example_atom03 "&prompt;<userinput>d = feedparser.parse('<ulink url=&#34;&url_example_atom03;&#34;/>')</userinput>">
<!ENTITY example_atom10 "&prompt;<userinput>d = feedparser.parse('<ulink url=&#34;&url_example_atom10;&#34;/>')</userinput>">
<!ENTITY example_rss20 "&prompt;<userinput>d = feedparser.parse('<ulink url=&#34;&url_example_rss20;&#34;/>')</userinput>">
<!ENTITY example_rss20dc "&prompt;<userinput>d = feedparser.parse('<ulink url=&#34;&url_example_rss20dc;&#34;/>')</userinput>">
<!ENTITY example_rss10 "&prompt;<userinput>d = feedparser.parse('<ulink url=&#34;&url_example_rss10;&#34;/>')</userinput>">

<!ENTITY feed_disclaimer "<caution>
<title/>
<para>Even though many of these elements are required according to the specification, real-world feeds may be missing any element.  If an element is not present in the feed, it will not be present in the parsed results.  You should not rely on any particular element being present.</para>
</caution>">

<!ENTITY type_details "<para>Most likely values for <varname>type</varname>:</para>
<itemizedlist>
<listitem><para><constant>text/plain</constant></para></listitem>
<listitem><para><constant>text/html</constant></para></listitem>
<listitem><para><constant>application/xhtml+xml</constant></para></listitem>
</itemizedlist>
<para>For &atom; feeds, the content type is taken from the <sgmltag class='attribute'>type</sgmltag> attribute, which defaults to <constant>text/plain</constant> if not specified.  For &rss; feeds, the content type is auto-determined by inspecting the content, and defaults to <constant>text/html</constant>.  Note that this may cause silent data loss if the value contains plain text with angle brackets.  There is nothing I can do about this problem; it is a limitation of &rss;.</para>
<para>Future enhancement: some versions of &rss; clearly specify that certain values default to <constant>text/plain</constant>, and &feedparser; should respect this, but it doesn't yet.</para>">

<!ENTITY language_details "<para><varname>language</varname> is supposed to be a language code, as specified by <ulink url='&url_rfc3066;'>&rfc; 3066</ulink>, but publishers have been known to publish random values like <quote>English</quote> or <quote>German</quote>.  &feedparser; does not do any parsing or normalization of language codes.</para>
<para><varname>language</varname> may come from the element's <sgmltag class='attribute'>xml:lang</sgmltag> attribute, or it may inherit from a parent element's <sgmltag class='attribute'>xml:lang</sgmltag>, or the <literal>Content-Language</literal> &http; header.  If the feed does not specify a language, <varname>language</varname> will be <constant>None</constant>, the &python; null value.</para>">

<!ENTITY base_details "<para><varname>base</varname> is only useful in rare situations and can usually be ignored.  It is the original base &uri; for this value, as specified by the element's &xmlbaseattr; attribute, or a parent element's &xmlbaseattr;, or the appropriate &http; header, or the &uri; of the feed.  (See <xref linkend='advanced.base'/> for more details.)  By the time you see it, &feedparser; has already resolved relative links in all values where it makes sense to do so.  <emphasis>Clients should never need to manually resolve relative links.</emphasis></para>">

<!ENTITY all_versions "<para>Here is the complete list of known feed types and versions that may be returned in <varname>version</varname>:</para>
<variablelist>
<varlistentry>
<term><constant>rss090</constant></term>
<listitem><para><ulink url='&url_rss090;'>&rss; 0.90</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>rss091n</constant></term>
<listitem><para><ulink url='&url_rss091n;'>Netscape &rss; 0.91</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>rss091u</constant></term>
<listitem><para><ulink url='&url_rss091u;'>Userland &rss; 0.91</ulink> (<ulink url='&url_rss091differences;'>differences from Netscape &rss; 0.91</ulink>)</para></listitem>
</varlistentry>
<varlistentry>
<term><constant>rss10</constant></term>
<listitem><para><ulink url='&url_rss10;'>&rss; 1.0</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>rss092</constant></term>
<listitem><para><ulink url='&url_rss092;'>&rss; 0.92</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>rss093</constant></term>
<listitem><para><ulink url='&url_rss093;'>&rss; 0.93</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>rss094</constant></term>
<listitem><para>&rss; 0.94 (no accurate specification is known to exist)</para></listitem>
</varlistentry>
<varlistentry>
<term><constant>rss20</constant></term>
<listitem><para><ulink url='&url_rss20;'>&rss; 2.0</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>rss</constant></term>
<listitem><para>&rss; (unknown or unrecognized version)</para></listitem>
</varlistentry>
<varlistentry>
<term><constant>atom01</constant></term>
<listitem><para><ulink url='&url_atom01;'>&atom; 0.1</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>atom02</constant></term>
<listitem><para><ulink url='&url_atom02;'>&atom; 0.2</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>atom03</constant></term>
<listitem><para><ulink url='&url_atom03;'>&atom; 0.3</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>atom10</constant></term>
<listitem><para><ulink url='&url_atom10;'>&atom; 1.0</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>atom</constant></term>
<listitem><para>&atom; (unknown or unrecognized version)</para></listitem>
</varlistentry>
<varlistentry>
<term><constant>cdf</constant></term>
<listitem><para><ulink url='&url_cdf;'>&cdf;</ulink></para></listitem>
</varlistentry>
<varlistentry>
<term><constant>hotrss</constant></term>
<listitem><para><ulink url='&url_hotrss;'>&hotrss;</ulink></para></listitem>
</varlistentry>
</variablelist>
<para>If the feed type is completely unknown, <varname>version</varname> will be an empty string.</para>">

<!ENTITY sanitized "<para>If this contains &html; or &xhtml;, it is <link linkend='advanced.sanitization'>sanitized</link> by default.</para>">

<!ENTITY isrelativelink "<para>If this is a relative &uri;, it is <link linkend='advanced.base'>resolved according to a set of rules</link>.</para>">

<!ENTITY containsrelativelinks "<para>If this contains &html; or &xhtml;, certain (X)HTML elements within this value may contain relative &uri;s.  If so, they are <link linkend='advanced.base'>resolved according to a set of rules</link>.</para>">

<!ENTITY parsedformicroformats "<para>If this contains &html; or &xhtml;, it will be <link linkend='advanced.microformats'>parsed for microformats</link>.</para>">

<!ENTITY parsedasadate "<link linkend='advanced.date'>parsed as a date</link>">

<!ENTITY listofrelvalues "<para>&atom; 1.0 defines five standard link relationships and describes the process for registering others.  Here are the five standard <sgmltag class='attribute'>rel</sgmltag> values:</para>
<itemizedlist>
<listitem><para><constant>alternate</constant></para></listitem>
<listitem><para><constant>self</constant></para></listitem>
<listitem><para><constant>related</constant></para></listitem>
<listitem><para><constant>via</constant></para></listitem>
<listitem><para><constant>enclosure</constant></para></listitem>
</itemizedlist>">

<!ENTITY tagshistory "<para>Prior to version 4.0, &feedparser; exposed categories in <varname>feed.category</varname> (the primary category) and <varname>feed.categories</varname> (a list of tuples containing the domain and term of each category).  These uses are still supported for backward compatibility, but you will not see them in the parsed results unless you explicitly ask for them.</para>">

]>

<book lang="en">
<?dbhtml filename="index.html"?>
<title>&title;</title>
<bookinfo>
<title>&title;</title>
<authorgroup>
<author>
<firstname>Mark</firstname>
<surname>Pilgrim</surname>
</author>
</authorgroup>
<copyright>
<year>2004</year>
<year>2005</year>
<year>2006</year>
<year>2007</year>
<year>2008</year>
<holder>Mark Pilgrim</holder>
</copyright>
<pubdate>&fileversion;</pubdate>
<abstract>
<title/>
<para>This documentation claims to describe the behavior of &feedparser; &feedparser_version;.  It does not claim to describe the behavior of any other version.</para>
<para>This documentation lives at <ulink url="&url_book;"/>.  If you're reading it somewhere else, you may not have the latest version.</para>
</abstract>
<keywordset>
<keyword>RSS</keyword>
<keyword>Atom</keyword>
<keyword>CDF</keyword>
<keyword>XML</keyword>
<keyword>feed</keyword>
<keyword>parser</keyword>
<keyword>Python</keyword>
</keywordset>
<legalnotice>
<para>This documentation is provided by the author <quote>as is</quote> without any express or implied warranties.  See <xref linkend="license"/> for more details.</para>
</legalnotice>
</bookinfo>
<chapter id="basic">
<?dbhtml filename="basic.html"?>
<title>Basic Features</title>
<section id="introduction">
<title>Introduction</title>
<?dbhtml filename="introduction.html"?>
<abstract>
<title/>
<para>&feedparser; is a &python; module for downloading and parsing syndicated feeds.  It can handle &rss; 0.90, Netscape &rss; 0.91, Userland &rss; 0.91, &rss; 0.92, &rss; 0.93, &rss; 0.94, &rss; 1.0, &rss; 2.0, &atom; 0.3, &atom; 1.0, and &cdf; feeds.  It also parses several popular extension modules, including Dublin Core and Apple's &itunes; extensions.</para>
</abstract>
<para>To use &feedparser;, you will need &python; 2.1 or later.  &feedparser; is not meant to run standalone; it is a module for you to use as part of a larger &python; program.</para>
<para>&feedparser; is easy to use; the module is self-contained in a single file, &feedparser_filename;, and it has one primary public function, &parse;.  &parse; takes a number of arguments, but only one is required, and it can be a &url;, a local filename, or a raw string containing feed data in any format.</para>
<example id="example.parse.remote">
<title>Parsing a feed from a remote &url;</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>d['feed']['title']</userinput>
<computeroutput>u'Sample Feed'</computeroutput></screen>
</example>
<para>The following example assumes you are on &windows;, and that you have saved a feed at <filename>c:\incoming\atom10.xml</filename>.</para>
<note>
<title/>
<para>&feedparser; works on any platform that can run &python;; use the path syntax appropriate for your platform.</para>
</note>
<example id="example.parse.local">
<title>Parsing a feed from a local file</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse(r'c:\incoming\atom10.xml')</userinput>
&prompt;<userinput>d['feed']['title']</userinput>
<computeroutput>u'Sample Feed'</computeroutput></screen>
</example>
<para>&feedparser; can also parse a feed in memory.</para>
<example id="example.parse.string">
<title>Parsing a feed from a string</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>rawdata = """&lt;rss version="2.0">
&lt;channel>
&lt;title>Sample Feed&lt;/title>
&lt;/channel>
&lt;/rss>"""</userinput>
&prompt;<userinput>d = feedparser.parse(rawdata)</userinput>
&prompt;<userinput>d['feed']['title']</userinput>
<computeroutput>u'Sample Feed'</computeroutput></screen>
</example>
<para>Values are returned as &python; Unicode strings (except when they're not -- see <xref linkend="advanced.encoding"/> for all the gory details).</para>
<itemizedlist role="furtherreading">
<title>Elsewhere</title>
<listitem><para><ulink url="&url_pythonunicode;">Introduction to &python; Unicode strings</ulink></para></listitem>
</itemizedlist>
</section>
<section id="basic.rss">
<?dbhtml filename="common-rss-elements.html"?>
<title>Common &rss; Elements</title>
<abstract>
<title/>
<para>The most commonly used elements in &rss; feeds (regardless of version) are title, link, description, modified date, and entry ID.  The modified date comes from the <sgmltag>pubDate</sgmltag> element, and the entry ID comes from the <sgmltag>guid</sgmltag> element.</para>
</abstract>
<para>This sample &rss; feed is at <ulink url="&url_example_rss20;"/>.</para>
<informalexample>
<programlisting>&lt;?xml version="1.0" encoding="utf-8"?>
&lt;rss version="2.0">
&lt;channel>
  &lt;title>Sample Feed&lt;/title>
  &lt;description>For documentation &amp;lt;em&amp;gt;only&amp;lt;/em&amp;gt;&lt;/description>
  &lt;link>http://example.org/&lt;/link>
  &lt;pubDate>Sat, 07 Sep 2002 0:00:01 GMT&lt;/pubDate>
  &lt;!-- other elements omitted from this example -->
  &lt;item>
    &lt;title>First entry title&lt;/title>
    &lt;link>http://example.org/entry/3&lt;/link>
    &lt;description>Watch out for &amp;lt;span style="background-image:
url(javascript:window.location='http://example.org/')"&amp;gt;nasty
tricks&amp;lt;/span&amp;gt;&lt;/description>
    &lt;pubDate>Sat, 07 Sep 2002 0:00:01 GMT&lt;/pubDate>
    &lt;guid>http://example.org/entry/3&lt;/guid>
    &lt;!-- other elements omitted from this example -->
  &lt;/item>
&lt;/channel>
&lt;/rss></programlisting>
</informalexample>
<para>The <sgmltag>channel</sgmltag> elements are available in <varname>d.feed</varname>.</para>
<example id="example.rss.channel">
<title>Accessing Common Channel Elements</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_rss20;
&prompt;<userinput>d.feed.title</userinput>
<computeroutput>u'Sample Feed'</computeroutput>
&prompt;<userinput>d.feed.link</userinput>
<computeroutput>u'http://example.org/'</computeroutput>
&prompt;<userinput>d.feed.description</userinput>
<computeroutput>u'For documentation &lt;em&gt;only&lt;/em&gt;'</computeroutput>
&prompt;<userinput>d.feed.date</userinput>
<computeroutput>u'Sat, 07 Sep 2002 0:00:01 GMT'</computeroutput>
&prompt;<userinput>d.feed.date_parsed</userinput>
<computeroutput>(2002, 9, 7, 0, 0, 1, 5, 250, 0)</computeroutput></screen>
</example>
<para>The items are available in <varname>d.entries</varname>, which is a list.  You access items in the list in the same order in which they appear in the original feed, so the first item is available in <varname>d.entries[0]</varname>.</para>
<example id="example.rss.item">
<title>Accessing Common Item Elements</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_rss20;
&prompt;<userinput>d.entries[0].title</userinput>
<computeroutput>u'First item title'</computeroutput>
&prompt;<userinput>d.entries[0].link</userinput>
<computeroutput>u'http://example.org/item/1'</computeroutput>
&prompt;<userinput>d.entries[0].description</userinput>
<computeroutput>u'Watch out for &lt;span>nasty tricks&lt;/span>'</computeroutput>
&prompt;<userinput>d.entries[0].date</userinput>
<computeroutput>u'Thu, 05 Sep 2002 0:00:01 GMT'</computeroutput>
&prompt;<userinput>d.entries[0].date_parsed</userinput>
<computeroutput>(2002, 9, 5, 0, 0, 1, 3, 248, 0)</computeroutput>
&prompt;<userinput>d.entries[0].id</userinput>
<computeroutput>u'http://example.org/guid/1'</computeroutput></screen>
</example>
<tip>
<title/>
<para>You can also access data from &rss; feeds using &atom; terminology.  See <xref linkend="advanced.normalization"/> for details.</para>
</tip>
</section>
<section id="basic.atom">
<?dbhtml filename="common-atom-elements.html"?>
<title>Common &atom; Elements</title>
<abstract>
<title/>
<para>&atom; feeds generally contain more information than &rss; feeds (because more elements are required), but the most commonly used elements are still title, link, subtitle/description, various dates, and ID.</para>
</abstract>
<para>This sample &atom; feed is at <ulink url="&url_example_atom10;"/>.</para>
<informalexample>
<programlisting>&lt;?xml version="1.0" encoding="utf-8"?>
&lt;feed xmlns="http://www.w3.org/2005/Atom"
      xml:base="http://example.org/"
      xml:lang="en">
  &lt;title type="text">Sample Feed&lt;/title>
  &lt;subtitle type="html">
    For documentation &amp;lt;em&amp;gt;only&amp;lt;/em&amp;gt;
  &lt;/subtitle>
  &lt;link rel="alternate" href="/"/>
  &lt;link rel="self"
      type="application/atom+xml"
      href="http://www.example.org/atom10.xml"/>
  &lt;rights type="html">
      &amp;lt;p>Copyright 2005, Mark Pilgrim&amp;lt;/p>&amp;lt;
  &lt;/rights>
  &lt;id>tag:feedparser.org,2005-11-09:/docs/examples/atom10.xml&lt;/id>
  &lt;generator
      uri="http://example.org/generator/"
      version="4.0">
          Sample Toolkit
  &lt;/generator>
  &lt;updated>2005-11-09T11:56:34Z&lt;/updated>
  &lt;entry>
    &lt;title>First entry title&lt;/title>
    &lt;link rel="alternate"
        href="/entry/3"/>
    &lt;link rel="related"
        type="text/html"
        href="http://search.example.com/"/>
    &lt;link rel="via"
        type="text/html"
        href="http://toby.example.com/examples/atom10"/>
    &lt;link rel="enclosure"
        type="video/mpeg4"
        href="http://www.example.com/movie.mp4"
        length="42301"/>
    &lt;id>tag:feedparser.org,2005-11-09:/docs/examples/atom10.xml:3&lt;/id>
    &lt;published>2005-11-09T00:23:47Z&lt;/published>
    &lt;updated>2005-11-09T11:56:34Z&lt;/updated>
    &lt;summary type="text/plain" mode="escaped">Watch out for nasty tricks&lt;/summary>
    &lt;content type="application/xhtml+xml" mode="xml"
             xml:base="http://example.org/entry/3" xml:lang="en-US">
      &lt;div xmlns="http://www.w3.org/1999/xhtml">Watch out for
      &lt;span style="background: url(javascript:window.location='http://example.org/')">
      nasty tricks&lt;/span>&lt;/div>
    &lt;/content>
  &lt;/entry>
&lt;/feed></programlisting>
</informalexample>
<para>The <sgmltag>feed</sgmltag> elements are available in <varname>d.feed</varname>.</para>
<example id="example.atom.feed">
<title>Accessing Common Feed Elements</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>d.feed.title</userinput>
<computeroutput>u'Sample feed'</computeroutput>
&prompt;<userinput>d.feed.link</userinput>
<computeroutput>u'http://example.org/'</computeroutput>
&prompt;<userinput>d.feed.subtitle</userinput>
<computeroutput>u'For documentation &lt;em>only&lt;/em>'</computeroutput>
&prompt;<userinput>d.feed.updated</userinput>
<computeroutput>u'2005-11-09T11:56:34Z'</computeroutput>
&prompt;<userinput>d.feed.updated_parsed</userinput>
<computeroutput>(2005, 11, 9, 11, 56, 34, 2, 313, 0)</computeroutput>
&prompt;<userinput>d.feed.id</userinput>
<computeroutput>u'tag:feedparser.org,2005-11-09:/docs/examples/atom10.xml'</computeroutput></screen>
</example>
<para>Entries are available in <varname>d.entries</varname>, which is a list.  You access entries in the order in which they appear in the original feed, so the first entry is <varname>d.entries[0]</varname>.</para>
<example id="example.atom.entry">
<title>Accessing Common Entry Elements</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>d.entries[0].title</userinput>
<computeroutput>u'First entry title'</computeroutput>
&prompt;<userinput>d.entries[0].link</userinput>
<computeroutput>u'http://example.org/entry/3</computeroutput>
&prompt;<userinput>d.entries[0].id</userinput>
<computeroutput>u'tag:feedparser.org,2005-11-09:/docs/examples/atom10.xml:3'</computeroutput>
&prompt;<userinput>d.entries[0].published</userinput>
<computeroutput>u'2005-11-09T00:23:47Z'</computeroutput>
&prompt;<userinput>d.entries[0].published_parsed</userinput>
<computeroutput>(2005, 11, 9, 0, 23, 47, 2, 313, 0)</computeroutput>
&prompt;<userinput>d.entries[0].updated</userinput>
<computeroutput>u'2005-11-09T11:56:34Z'</computeroutput>
&prompt;<userinput>d.entries[0].updated_parsed</userinput>
<computeroutput>(2005, 11, 9, 11, 56, 34, 2, 313, 0)</computeroutput>
&prompt;<userinput>d.entries[0].summary</userinput>
<computeroutput>u'Watch out for nasty tricks'</computeroutput>
&prompt;<userinput>d.entries[0].content</userinput>
<computeroutput>[{'type': u'application/xhtml+xml',
 'base': u'http://example.org/entry/3',
 'language': u'en-US',
 'value': u'&lt;div>Watch out for &lt;span>nasty tricks&lt;/span>&lt;/div>'}]</computeroutput></screen>
</example>
<note>
<title/>
<para>The parsed <sgmltag>summary</sgmltag> and <sgmltag>content</sgmltag> are not the same as they appear in the original feed.  The original elements contained dangerous &html; markup which was sanitized.  See <xref linkend="advanced.sanitization"/> for details.</para>
</note>
<para>Because &atom; entries can have more than one <sgmltag>content</sgmltag> element, <varname>d.entries[0].content</varname> is a list of dictionaries.  Each dictionary contains metadata about a single <sgmltag>content</sgmltag> element.  The two most important values in the dictionary are the content type, in <varname>d.entries[0].content[0].type</varname>, and the actual content value, in <varname>d.entries[0].content[0].value</varname>.</para>
<para>You can get this level of detail on other &atom; elements too.</para>
</section>
<section id="basic.detail">
<?dbhtml filename="atom-detail.html"?>
<title>Getting Detailed Information on &atom; Elements</title>
<abstract>
<title/>
<para>Several &atom; elements share the &atom; content model: <sgmltag>title</sgmltag>, <sgmltag>subtitle</sgmltag>, <sgmltag>rights</sgmltag>, <sgmltag>summary</sgmltag>, and of course <sgmltag>content</sgmltag>.  (&atom; 0.3 also had an <sgmltag>info</sgmltag> element which shared this content model.)  &feedparser; captures all relevant metadata about these elements, most importantly the content type and the value itself.</para>
</abstract>
<example id="example.feed.detail">
<title>Detailed Information on Feed Elements</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>d.feed.title_detail</userinput>
<computeroutput>{'type': u'text/plain',
 'base': u'http://example.org/',
 'language': u'en',
 'value': u'Sample Feed'}</computeroutput>
&prompt;<userinput>d.feed.subtitle_detail</userinput>
<computeroutput>{'type': u'text/html',
 'base': u'http://example.org/',
 'language': u'en',
 'value': u'For documentation &lt;em>only&lt;/em>'}</computeroutput>
&prompt;<userinput>d.feed.rights_detail</userinput>
<computeroutput>{'type': u'text/html',
 'base': u'http://example.org/',
 'language': u'en',
 'value': u'&lt;p>Copyright 2004, Mark Pilgrim&lt;/p>'}</computeroutput>
&prompt;<userinput>d.entries[0].title_detail</userinput>
<computeroutput>{'type': 'text/plain',
 'base': u'http://example.org/',
 'language': u'en',
 'value': u'First entry title'}</computeroutput>
&prompt;<userinput>d.entries[0].summary_detail</userinput>
<computeroutput>{'type': u'text/plain',
 'base': u'http://example.org/',
 'language': u'en',
 'value': u'Watch out for nasty tricks'}</computeroutput>
&prompt;<userinput>len(d.entries[0].content)</userinput>
<computeroutput>1</computeroutput>
&prompt;<userinput>d.entries[0].content[0]</userinput>
<computeroutput>{'type': u'application/xhtml+xml',
 'base': u'http://example.org/entry/3',
 'language': u'en-US'
 'value': u'&lt;div>Watch out for &lt;span> nasty tricks&lt;/span>&lt;/div>'}</computeroutput></screen>
</example>
</section>

<section id="basic.rss.uncommon">
<?dbhtml filename="uncommon-rss.html"?>
<sectioninfo>
<abstract>
<title/>
<para>These elements are less common, but are useful for niche applications and may be present in any &rss; feed.</para>
</abstract>
</sectioninfo>
<title>Uncommon &rss; Elements</title>

<para>An &rss; feed can specify a small image which some aggregators display as a logo.</para>

<example id="example.image">
<title>Accessing feed image</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_rss20;
&prompt;<userinput>d.feed.image</userinput>
<computeroutput>{'title': u'Example banner',
 'href': u'http://example.org/banner.png',
 'width': 80,
 'height': 15,
 'link': u'http://example.org/'}</computeroutput></screen>
</example>

<para>Feeds and entries can be assigned to multiple categories, and in some versions of &rss;, categories can be associated with a <quote>domain</quote>.  Both are free-form strings.  For historical reasons, &feedparser; makes multiple categories available as a list of tuples, rather than a list of dictionaries.</para>

<example id="example.categories">
<title>Accessing multiple categories</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_rss20;
&prompt;<userinput>d.feed.categories</userinput>
<computeroutput>[(u'Syndic8', u'1024'),
 (u'dmoz', 'Top/Society/People/Personal_Homepages/P/')]</computeroutput></screen>
</example>

<para>Each item in an &rss; feed can have an <quote>enclosure</quote>, a delightful misnomer that is simply a link to an external file (usually a music or video file, but any type of file can be "enclosed").  Once rare, this element has recently gained popularity due to the rise of <ulink url="&url_podcasting;">podcasting</ulink>.  Some clients (such as Apple's &itunes;) may automatically download enclosures; others (such as the web-based Bloglines) may simply render each enclosure as a link.</para>
<para>The &rss; specification states that there can be at most one enclosure per item.  However, &atom; entries may contain more than one enclosure per entry, so &feedparser; captures all of them and makes them available as a list.</para>

<example id="example.enclosure">
<title>Accessing enclosures</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_rss20;
&prompt;<userinput>e = d.entries[0]</userinput>
&prompt;<userinput>len(e.enclosures)</userinput>
<computeroutput>1</computeroutput>
&prompt;<userinput>e.enclosures[0]</userinput>
<computeroutput>{'type': u'audio/mpeg',
 'length': u'1069871',
 'href': u'http://example.org/audio/demo.mp3'}</computeroutput></screen>
</example>

<para>No one is quite sure what a cloud is.</para>

<example id="example.cloud">
<title>Accessing feed cloud</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_rss20;
&prompt;<userinput>d.feed.cloud</userinput>
<computeroutput>{'domain': u'rpc.example.com',
 'port': u'80',
 'path': u'/RPC2', 
 'registerprocedure': u'pingMe',
 'protocol': u'soap'}</computeroutput></screen>
</example>

<note>
<title/>
<para>For more examples of accessing &rss; elements, see the annotated examples: <xref linkend="annotated.rss10"/>, <xref linkend="annotated.rss20"/>, and <xref linkend="annotated.rss20dc"/>.</para>
</note>

</section>

<section id="basic.atom.uncommon">
<?dbhtml filename="uncommon-atom.html"?>
<sectioninfo>
<abstract>
<title/>
<para>These elements are less common, but are useful for niche applications and may be present in any &atom; feed.</para>
</abstract>
</sectioninfo>
<title>Uncommon &atom; Elements</title>

<para>Besides an author, each &atom; feed or entry can have an arbitrary number of contributors.  &feedparser; makes these available as a list.</para>

<example id="example.contributors">
<title>Accessing contributors</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>e = d.entries[0]</userinput>
&prompt;<userinput>len(e.contributors)</userinput>
<computeroutput>2</computeroutput>
&prompt;<userinput>e.contributors[0]</userinput>
<computeroutput>{'name': u'Joe',
 'href': u'http://example.org/joe/',
 'email': u'joe@example.org'}</computeroutput>
&prompt;<userinput>e.contributors[1]</userinput>
<computeroutput>{'name': u'Sam',
 'href': u'http://example.org/sam/',
 'email': u'sam@example.org'}</computeroutput></screen>
</example>

<para>Besides an alternate link, each &atom; feed or entry can have an arbitrary number of other links.  Each link is distinguished by its <sgmltag class="attribute">type</sgmltag> attribute, which is a MIME-style content type, and its <sgmltag class="attribute">rel</sgmltag> attribute.</para>

<example id="example.links">
<title>Accessing multiple links</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>e = d.entries[0]</userinput>
&prompt;<userinput>len(e.links)</userinput>
<computeroutput>4</computeroutput>
&prompt;<userinput>e.links[0]</userinput>
<computeroutput>{'rel': u'alternate',
 'type': u'text/html',
 'href': u'http://example.org/entry/3'}</computeroutput>
&prompt;<userinput>e.links[1]</userinput>
<computeroutput>{'rel': u'related',
 'type': u'text/html',
 'href': u'http://search.example.com/'}</computeroutput>
&prompt;<userinput>e.links[2]</userinput>
<computeroutput>{'rel': u'via',
 'type': u'text/html',
 'href': u'http://toby.example.com/examples/atom10'}</computeroutput>
&prompt;<userinput>e.links[3]</userinput>
<computeroutput>{'rel': u'enclosure',
 'type': u'video/mpeg4',
 'href': u'http://www.example.com/movie.mp4',
 'length': u'42301'}</computeroutput></screen>
</example>

<note>
<title/>
<para>For more examples of accessing &atom; elements, see the annotated examples <xref linkend="annotated.atom10"/> and <xref linkend="annotated.atom03"/>.</para>
</note>

</section>

<section id="basic.existence">
<?dbhtml filename="basic-existence.html"?>
<sectioninfo>
<abstract>
<title/>
<para>Feeds in the real world may be missing elements, even elements that are required by the specification.  You should always test for the existence of an element before getting its value.  Never assume an element is present.</para>
</abstract>
</sectioninfo>
<title>Testing for Existence</title>
<para>Use standard &python; dictionary functions such as <function>has_key</function> to test whether an element exists.</para>
<example id="example.existence">
<title>Testing if elements are present</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>d.feed.has_key('title')</userinput>
<computeroutput>True</computeroutput>
&prompt;<userinput>d.feed.has_key('ttl')</userinput>
<computeroutput>False</computeroutput>
&prompt;<userinput>d.feed.get('title', 'No title')</userinput>
<computeroutput>u'Sample feed'</computeroutput>
&prompt;<userinput>d.feed.get('ttl', 60)</userinput>
<computeroutput>60</computeroutput></screen>
</example>
</section>
</chapter>

<chapter id="advanced">
<?dbhtml filename="advanced.html"?>
<title>Advanced Features</title>

<section id="advanced.date">
<?dbhtml filename="date-parsing.html"?>
<sectioninfo>
<abstract>
<title/>
<para>Different feed types and versions use wildly different date formats.  &feedparser; will attempt to auto-detect the date format used in any date element, and parse it into a standard &python; 9-tuple, as documented in <ulink url="&url_pythontime;">the &python; <filename>time</filename> module</ulink>.</para>
</abstract>
</sectioninfo>
<title>Date Parsing</title>
<para>The following elements are parsed as dates:</para>
<itemizedlist>
<listitem><para><xref linkend="reference.feed.updated"/> is parsed into <xref linkend="reference.feed.updated_parsed"/>.</para></listitem>
<listitem><para><xref linkend="reference.entry.published"/> is parsed into <xref linkend="reference.entry.published_parsed"/>.</para></listitem>
<listitem><para><xref linkend="reference.entry.updated"/> is parsed into <xref linkend="reference.entry.updated_parsed"/>.</para></listitem>
<listitem><para><xref linkend="reference.entry.created"/> is parsed into <xref linkend="reference.entry.created_parsed"/>.</para></listitem>
<listitem><para><xref linkend="reference.entry.expired"/> is parsed into <xref linkend="reference.entry.expired_parsed"/>.</para></listitem>
</itemizedlist>

<section id="advanced.date.history">
<title>History of Date Formats</title>

<para>Here is a brief history of feed date formats:</para>

<itemizedlist>
<listitem><para>&cdf; states that all date values must conform to &iso; 8601:1988.  &iso; 8601:1988 is not a freely available specification, but a brief (non-normative) description of the date formats it describes is available here: <ulink url="&url_iso8601;">ISO 8601:1988 Date/Time Representations</ulink>.</para></listitem>
<listitem><para>&rss; 0.90 has no date elements.</para></listitem>
<listitem><para>Netscape &rss; 0.91 does not specify a date format, but examples within the specification show &rfc822;-style dates with 4-digit years.</para></listitem>
<listitem><para>Userland &rss; 0.91 states, <quote>All date-times in &rss; conform to the Date and Time Specification of &rfc822;.</quote>  <ulink url="&url_rfc822;">&rfc822;</ulink> mandates 2-digit years; it does not allow 4-digit years.</para></listitem>
<listitem><para>&rss; 1.0 states that all date elements must conform to <ulink url="&url_w3cdtf;">&w3cdtf;</ulink>, which is a profile of &iso; 8601:1988.</para></listitem>
<listitem><para>&rss; 2.0 states, <quote>All date-times in &rss; conform to the Date and Time Specification of RFC 822, with the exception that the year may be expressed with two characters or four characters (four preferred).</quote></para></listitem>
<listitem><para>&atom; 0.3 states that all date elements must conform to <ulink url="&url_w3cdtf;">&w3cdtf;</ulink>.</para></listitem>
<listitem><para>&atom; 1.0 states that all date elements "MUST conform to the date-time production in <ulink url="&url_rfc3339;">&rfc3339;</ulink>.  In addition, an uppercase <literal>T</literal> character MUST be used to separate date and time, and an uppercase <literal>Z</literal> character MUST be present in the absence of a numeric time zone offset."</para></listitem>
</itemizedlist>
</section>

<section id="advanced.date.formats">
<title>Recognized Date Formats</title>

<para>Here is a representative list of the formats that &feedparser; can recognize in any date element:</para>

<table>
<title>Recognized Date Formats</title>
<tgroup cols="3">
<thead>
<row>
<entry>Description</entry>
<entry>Example</entry>
<entry>Parsed Value</entry>
</row>
</thead>
<tbody>
<row>
<entry>valid RFC 822 (2-digit year)</entry>
<entry><literal>Thu, 01 Jan 04 19:48:21 GMT</literal></entry>
<entry><literal>(2004, 1, 1, 19, 48, 21, 3, 1, 0)</literal></entry>
</row>
<row>
<entry>valid RFC 822 (4-digit year)</entry>
<entry><literal>Thu, 01 Jan 2004 19:48:21 GMT</literal></entry>
<entry><literal>(2004, 1, 1, 19, 48, 21, 3, 1, 0)</literal></entry>
</row>
<row>
<entry>invalid RFC 822 (no time)</entry>
<entry><literal>01 Jan 2004</literal></entry>
<entry><literal>(2004, 1, 1, 0, 0, 0, 3, 1, 0)</literal></entry>
</row>
<row>
<entry>invalid RFC 822 (no seconds)</entry>
<entry><literal>01 Jan 2004 00:00 GMT</literal></entry>
<entry><literal>(2004, 1, 1, 0, 0, 0, 3, 1, 0)</literal></entry>
</row>
<row>
<entry>valid W3CDTF (numeric timezone)</entry>
<entry><literal>2003-12-31T10:14:55-08:00</literal></entry>
<entry><literal>(2003, 12, 31, 18, 14, 55, 2, 365, 0)</literal></entry>
</row>
<row>
<entry>valid W3CDTF (UTC timezone)</entry>
<entry><literal>2003-12-31T10:14:55Z</literal></entry>
<entry><literal>(2003, 12, 31, 10, 14, 55, 2, 365, 0)</literal></entry>
</row>
<row>
<entry>valid W3CDTF (yyyy)</entry>
<entry><literal>2003</literal></entry>
<entry><literal>(2003, 1, 1, 0, 0, 0, 2, 1, 0)</literal></entry>
</row>
<row>
<entry>valid W3CDTF (yyyy-mm)</entry>
<entry><literal>2003-12</literal></entry>
<entry><literal>(2003, 12, 1, 0, 0, 0, 0, 335, 0)</literal></entry>
</row>
<row>
<entry>valid W3CDTF (yyyy-mm-dd)</entry>
<entry><literal>2003-12-31</literal></entry>
<entry><literal>(2003, 12, 31, 0, 0, 0, 2, 365, 0)</literal></entry>
</row>
<row>
<entry>valid ISO 8601 (yyyymmdd)</entry>
<entry><literal>20031231</literal></entry>
<entry><literal>(2003, 12, 31, 0, 0, 0, 2, 365, 0)</literal></entry>
</row>
<row>
<entry>valid ISO 8601 (-yy-mm)</entry>
<entry><literal>-03-12</literal></entry>
<entry><literal>(2003, 12, 1, 0, 0, 0, 0, 335, 0)</literal></entry>
</row>
<row>
<entry>valid ISO 8601 (-yymm)</entry>
<entry><literal>-0312</literal></entry>
<entry><literal>(2003, 12, 1, 0, 0, 0, 0, 335, 0)</literal></entry>
</row>
<row>
<entry>valid ISO 8601 (-yy-mm-dd)</entry>
<entry><literal>-03-12-31</literal></entry>
<entry><literal>(2003, 12, 31, 0, 0, 0, 2, 365, 0)</literal></entry>
</row>
<row>
<entry>valid ISO 8601 (yymmdd)</entry>
<entry><literal>031231</literal></entry>
<entry><literal>(2003, 12, 31, 0, 0, 0, 2, 365, 0)</literal></entry>
</row>
<row>
<entry>valid ISO 8601 (yyyy-o)</entry>
<entry><literal>2003-335</literal></entry>
<entry><literal>(2003, 12, 1, 0, 0, 0, 0, 335, 0)</literal></entry>
</row>
<row>
<entry>valid ISO 8601 (yyo)</entry>
<entry><literal>03335</literal></entry>
<entry><literal>(2003, 12, 1, 0, 0, 0, 0, 335, 0)</literal></entry>
</row>
<row>
<entry>valid asctime</entry>
<entry><literal>Sun Jan  4 16:29:06 PST 2004</literal></entry>
<entry><literal>(2004, 1, 5, 0, 29, 6, 0, 5, 0)</literal></entry>
</row>
<row>
<entry>bogus RFC 822 (invalid day/month)</entry>
<entry><literal>Thu, 31 Jun 2004 19:48:21 GMT</literal></entry>
<entry><literal>(2004, 7, 1, 19, 48, 21, 3, 183, 0)</literal></entry>
</row>
<row>
<entry>bogus RFC 822 (invalid month)</entry>
<entry><literal>Mon, 26 January 2004 16:31:00 EST</literal></entry>
<entry><literal>(2004, 1, 26, 21, 31, 0, 0, 26, 0)</literal></entry>
</row>
<row>
<entry>bogus RFC 822 (invalid timezone)</entry>
<entry><literal>Mon, 26 Jan 2004 16:31:00 ET</literal></entry>
<entry><literal>(2004, 1, 26, 21, 31, 0, 0, 26, 0)</literal></entry>
</row>
<row>
<entry>bogus W3CDTF (invalid hour)</entry>
<entry><literal>2003-12-31T25:14:55Z</literal></entry>
<entry><literal>(2004, 1, 1, 1, 14, 55, 3, 1, 0)</literal></entry>
</row>
<row>
<entry>bogus W3CDTF (invalid minute)</entry>
<entry><literal>2003-12-31T10:61:55Z</literal></entry>
<entry><literal>(2003, 12, 31, 11, 1, 55, 2, 365, 0)</literal></entry>
</row>
<row>
<entry>bogus W3CDTF (invalid second)</entry>
<entry><literal>2003-12-31T10:14:61Z</literal></entry>
<entry><literal>(2003, 12, 31, 10, 15, 1, 2, 365, 0)</literal></entry>
</row>
<row>
<entry>bogus (MSSQL)</entry>
<entry><literal>2004-07-08 23:56:58.0</literal></entry>
<entry><literal>(2004, 7, 8, 14, 56, 58, 3, 190, 0)</literal></entry>
</row>
<row>
<entry>bogus (MSSQL-ish, without fractional second)</entry>
<entry><literal>2004-07-08 23:56:58</literal></entry>
<entry><literal>(2004, 7, 8, 14, 56, 58, 3, 190, 0)</literal></entry>
</row>
<row>
<entry>bogus (Korean)</entry>
<entry><literal>2004-05-25 &#xc624; 11:23:17</literal></entry>
<entry><literal>(2004, 5, 25, 14, 23, 17, 1, 146, 0)</literal></entry>
</row>
<row>
<entry>bogus (Greek)</entry>
<entry><literal>&#x039a;&#x03c5;&#x03c1;, 11 &#x0399;&#x03bf;&#x03cd;&#x03bb; 2004 12:00:00 EST</literal></entry>
<entry><literal>(2004, 7, 11, 17, 0, 0, 6, 193, 0)</literal></entry>
</row>
<row>
<entry>bogus (Hungarian)</entry>
<entry><literal>j&#x00fa;lius-13T9:15-05:00</literal></entry>
<entry><literal>(2004, 7, 13, 14, 15, 0, 1, 195, 0)</literal></entry>
</row>
</tbody>
</tgroup>
</table>

<para>&feedparser; recognizes all character-based timezone abbreviations defined in &rfc822;.  In addition, &feedparser; recognizes the following invalid timezones:</para>

<itemizedlist>
<listitem><para><constant>AT</constant> is treated as <constant>AST</constant></para></listitem>
<listitem><para><constant>ET</constant> is treated as <constant>EST</constant></para></listitem>
<listitem><para><constant>CT</constant> is treated as <constant>CST</constant></para></listitem>
<listitem><para><constant>MT</constant> is treated as <constant>MST</constant></para></listitem>
<listitem><para><constant>PT</constant> is treated as <constant>PST</constant></para></listitem>
</itemizedlist>
</section>

<section id="advanced.date.register">
<title>Supporting Additional Date Formats</title>
<para>&feedparser; supports many different date formats, but there are probably many more in the wild that are still unsupported.  If you find other date formats, you can support them by registering them with <function>registerDateHandler</function>.  It takes a single argument, a callback function.  The callback function should take a single argument, a string, and return a single value, a 9-tuple &python; date in UTC.</para>

<example id="example.registerdatehandler">
<title>Registering a third-party date handler</title>
<programlisting language="python">import feedparser
import re

_my_date_pattern = re.compile( \
    r'(\d{,2})/(\d{,2})/(\d{4}) (\d{,2}):(\d{2}):(\d{2})')

def myDateHandler(aDateString):
    """parse a UTC date in MM/DD/YYYY HH:MM:SS format"""
    month, day, year, hour, minute, second = \
        _my_date_pattern.search(aDateString).groups()
    return (int(year), int(month), int(day), \
            int(hour), int(minute), int(second), 0, 0, 0)

feedparser.registerDateHandler(myDateHandler)
d = feedparser.parse(...)</programlisting>
</example>

<para>Your newly-registered date handler will be tried before all the other date handlers built into &feedparser;.  (More specifically, all date handlers are tried in "last in, first out" order; i.e. the last handler to be registered is the first one tried, and so on in reverse order of registration.)</para>

<para>If your date handler returns <constant>None</constant>, or anything other than a &python; 9-tuple date, or raises an exception of any kind, the error will be silently ignored and the other registered date handlers will be tried in order.  If no date handlers succeed, then the date is not parsed, and the <sgmltag>*_parsed</sgmltag> value will not be present in the results dictionary.  The original date string will still be available in the appropriate element in the results dictionary.</para>

<tip>
<title/>
<para>If you write a new date handler, you are encouraged (but not required) to <ulink url="&url_sf_feedparser;">submit a patch</ulink> so it can be integrated into the next version of &feedparser;.</para>
</tip>

</section>

</section>

<section id="advanced.sanitization">
<?dbhtml filename="html-sanitization.html"?>
<title>Sanitization</title>
<abstract>
<title/>
<para>Most feeds embed &html; markup within feed elements.  Some feeds even embed other types of markup, such as &svg; or &mathml;.  Since many feed aggregators use a web browser (or browser component) to display content, &feedparser; sanitizes embedded markup to remove things that could pose security risks.</para>
</abstract>
<para>These elements are sanitized by default:</para>
<itemizedlist>
<listitem><para><xref linkend="reference.feed.title"/></para></listitem>
<listitem><para><xref linkend="reference.feed.subtitle"/></para></listitem>
<listitem><para><xref linkend="reference.feed.info"/></para></listitem>
<listitem><para><xref linkend="reference.feed.rights"/></para></listitem>
<listitem><para><xref linkend="reference.entry.title"/></para></listitem>
<listitem><para><xref linkend="reference.entry.summary"/></para></listitem>
<listitem><para><xref linkend="reference.entry.content"/></para></listitem>
</itemizedlist>

<note>
<title/>
<para>The <ulink url="&url_tests_sanitize;">unit tests for &html; sanitizing</ulink> show many different examples of dangerous markup that &feedparser; sanitizes by default.</para>
</note>

<section id="advanced.sanitization.html">
<title>&html; Sanitization</title>
<para>The following &html; elements are allowed by default (all others are stripped):
<simplelist type="inline">
<member><sgmltag class="element">a</sgmltag></member>
<member><sgmltag class="element">abbr</sgmltag></member>
<member><sgmltag class="element">acronym</sgmltag></member>
<member><sgmltag class="element">address</sgmltag></member>
<member><sgmltag class="element">area</sgmltag></member>
<member><sgmltag class="element">article</sgmltag></member>
<member><sgmltag class="element">aside</sgmltag></member>
<member><sgmltag class="element">audio</sgmltag></member>
<member><sgmltag class="element">b</sgmltag></member>
<member><sgmltag class="element">big</sgmltag></member>
<member><sgmltag class="element">blockquote</sgmltag></member>
<member><sgmltag class="element">br</sgmltag></member>
<member><sgmltag class="element">button</sgmltag></member>
<member><sgmltag class="element">canvas</sgmltag></member>
<member><sgmltag class="element">caption</sgmltag></member>
<member><sgmltag class="element">center</sgmltag></member>
<member><sgmltag class="element">cite</sgmltag></member>
<member><sgmltag class="element">code</sgmltag></member>
<member><sgmltag class="element">col</sgmltag></member>
<member><sgmltag class="element">colgroup</sgmltag></member>
<member><sgmltag class="element">command</sgmltag></member>
<member><sgmltag class="element">datagrid</sgmltag></member>
<member><sgmltag class="element">datalist</sgmltag></member>
<member><sgmltag class="element">dd</sgmltag></member>
<member><sgmltag class="element">del</sgmltag></member>
<member><sgmltag class="element">details</sgmltag></member>
<member><sgmltag class="element">dfn</sgmltag></member>
<member><sgmltag class="element">dialog</sgmltag></member>
<member><sgmltag class="element">dir</sgmltag></member>
<member><sgmltag class="element">div</sgmltag></member>
<member><sgmltag class="element">dl</sgmltag></member>
<member><sgmltag class="element">dt</sgmltag></member>
<member><sgmltag class="element">em</sgmltag></member>
<member><sgmltag class="element">event-source</sgmltag></member>
<member><sgmltag class="element">fieldset</sgmltag></member>
<member><sgmltag class="element">figure</sgmltag></member>
<member><sgmltag class="element">footer</sgmltag></member>
<member><sgmltag class="element">font</sgmltag></member>
<member><sgmltag class="element">form</sgmltag></member>
<member><sgmltag class="element">header</sgmltag></member>
<member><sgmltag class="element">h1</sgmltag></member>
<member><sgmltag class="element">h2</sgmltag></member>
<member><sgmltag class="element">h3</sgmltag></member>
<member><sgmltag class="element">h4</sgmltag></member>
<member><sgmltag class="element">h5</sgmltag></member>
<member><sgmltag class="element">h6</sgmltag></member>
<member><sgmltag class="element">hr</sgmltag></member>
<member><sgmltag class="element">i</sgmltag></member>
<member><sgmltag class="element">img</sgmltag></member>
<member><sgmltag class="element">input</sgmltag></member>
<member><sgmltag class="element">ins</sgmltag></member>
<member><sgmltag class="element">keygen</sgmltag></member>
<member><sgmltag class="element">kbd</sgmltag></member>
<member><sgmltag class="element">label</sgmltag></member>
<member><sgmltag class="element">legend</sgmltag></member>
<member><sgmltag class="element">li</sgmltag></member>
<member><sgmltag class="element">m</sgmltag></member>
<member><sgmltag class="element">map</sgmltag></member>
<member><sgmltag class="element">menu</sgmltag></member>
<member><sgmltag class="element">meter</sgmltag></member>
<member><sgmltag class="element">multicol</sgmltag></member>
<member><sgmltag class="element">nav</sgmltag></member>
<member><sgmltag class="element">nextid</sgmltag></member>
<member><sgmltag class="element">noscript</sgmltag></member>
<member><sgmltag class="element">ol</sgmltag></member>
<member><sgmltag class="element">output</sgmltag></member>
<member><sgmltag class="element">optgroup</sgmltag></member>
<member><sgmltag class="element">option</sgmltag></member>
<member><sgmltag class="element">p</sgmltag></member>
<member><sgmltag class="element">pre</sgmltag></member>
<member><sgmltag class="element">progress</sgmltag></member>
<member><sgmltag class="element">q</sgmltag></member>
<member><sgmltag class="element">s</sgmltag></member>
<member><sgmltag class="element">samp</sgmltag></member>
<member><sgmltag class="element">section</sgmltag></member>
<member><sgmltag class="element">select</sgmltag></member>
<member><sgmltag class="element">small</sgmltag></member>
<member><sgmltag class="element">sound</sgmltag></member>
<member><sgmltag class="element">source</sgmltag></member>
<member><sgmltag class="element">spacer</sgmltag></member>
<member><sgmltag class="element">span</sgmltag></member>
<member><sgmltag class="element">strike</sgmltag></member>
<member><sgmltag class="element">strong</sgmltag></member>
<member><sgmltag class="element">sub</sgmltag></member>
<member><sgmltag class="element">sup</sgmltag></member>
<member><sgmltag class="element">table</sgmltag></member>
<member><sgmltag class="element">tbody</sgmltag></member>
<member><sgmltag class="element">td</sgmltag></member>
<member><sgmltag class="element">textarea</sgmltag></member>
<member><sgmltag class="element">time</sgmltag></member>
<member><sgmltag class="element">tfoot</sgmltag></member>
<member><sgmltag class="element">th</sgmltag></member>
<member><sgmltag class="element">thead</sgmltag></member>
<member><sgmltag class="element">tr</sgmltag></member>
<member><sgmltag class="element">tt</sgmltag></member>
<member><sgmltag class="element">u</sgmltag></member>
<member><sgmltag class="element">ul</sgmltag></member>
<member><sgmltag class="element">var</sgmltag></member>
<member><sgmltag class="element">video</sgmltag></member>
</simplelist>
</para>

<para>The following &html; attributes are allowed by default (all others are stripped):
<simplelist type="inline">
<member><sgmltag class="attribute">abbr</sgmltag></member>
<member><sgmltag class="attribute">accept</sgmltag></member>
<member><sgmltag class="attribute">accept-charset</sgmltag></member>
<member><sgmltag class="attribute">accesskey</sgmltag></member>
<member><sgmltag class="attribute">action</sgmltag></member>
<member><sgmltag class="attribute">align</sgmltag></member>
<member><sgmltag class="attribute">alt</sgmltag></member>
<member><sgmltag class="attribute">autoplay</sgmltag></member>
<member><sgmltag class="attribute">autocomplete</sgmltag></member>
<member><sgmltag class="attribute">autofocus</sgmltag></member>
<member><sgmltag class="attribute">axis</sgmltag></member>
<member><sgmltag class="attribute">background</sgmltag></member>
<member><sgmltag class="attribute">balance</sgmltag></member>
<member><sgmltag class="attribute">bgcolor</sgmltag></member>
<member><sgmltag class="attribute">bgproperties</sgmltag></member>
<member><sgmltag class="attribute">border</sgmltag></member>
<member><sgmltag class="attribute">bordercolor</sgmltag></member>
<member><sgmltag class="attribute">bordercolordark</sgmltag></member>
<member><sgmltag class="attribute">bordercolorlight</sgmltag></member>
<member><sgmltag class="attribute">bottompadding</sgmltag></member>
<member><sgmltag class="attribute">cellpadding</sgmltag></member>
<member><sgmltag class="attribute">cellspacing</sgmltag></member>
<member><sgmltag class="attribute">ch</sgmltag></member>
<member><sgmltag class="attribute">challenge</sgmltag></member>
<member><sgmltag class="attribute">char</sgmltag></member>
<member><sgmltag class="attribute">charoff</sgmltag></member>
<member><sgmltag class="attribute">choff</sgmltag></member>
<member><sgmltag class="attribute">charset</sgmltag></member>
<member><sgmltag class="attribute">checked</sgmltag></member>
<member><sgmltag class="attribute">cite</sgmltag></member>
<member><sgmltag class="attribute">class</sgmltag></member>
<member><sgmltag class="attribute">clear</sgmltag></member>
<member><sgmltag class="attribute">color</sgmltag></member>
<member><sgmltag class="attribute">cols</sgmltag></member>
<member><sgmltag class="attribute">colspan</sgmltag></member>
<member><sgmltag class="attribute">compact</sgmltag></member>
<member><sgmltag class="attribute">contenteditable</sgmltag></member>
<member><sgmltag class="attribute">coords</sgmltag></member>
<member><sgmltag class="attribute">data</sgmltag></member>
<member><sgmltag class="attribute">datafld</sgmltag></member>
<member><sgmltag class="attribute">datapagesize</sgmltag></member>
<member><sgmltag class="attribute">datasrc</sgmltag></member>
<member><sgmltag class="attribute">datetime</sgmltag></member>
<member><sgmltag class="attribute">default</sgmltag></member>
<member><sgmltag class="attribute">delay</sgmltag></member>
<member><sgmltag class="attribute">dir</sgmltag></member>
<member><sgmltag class="attribute">disabled</sgmltag></member>
<member><sgmltag class="attribute">draggable</sgmltag></member>
<member><sgmltag class="attribute">dynsrc</sgmltag></member>
<member><sgmltag class="attribute">enctype</sgmltag></member>
<member><sgmltag class="attribute">end</sgmltag></member>
<member><sgmltag class="attribute">face</sgmltag></member>
<member><sgmltag class="attribute">for</sgmltag></member>
<member><sgmltag class="attribute">form</sgmltag></member>
<member><sgmltag class="attribute">frame</sgmltag></member>
<member><sgmltag class="attribute">galleryimg</sgmltag></member>
<member><sgmltag class="attribute">gutter</sgmltag></member>
<member><sgmltag class="attribute">headers</sgmltag></member>
<member><sgmltag class="attribute">height</sgmltag></member>
<member><sgmltag class="attribute">hidefocus</sgmltag></member>
<member><sgmltag class="attribute">hidden</sgmltag></member>
<member><sgmltag class="attribute">high</sgmltag></member>
<member><sgmltag class="attribute">href</sgmltag></member>
<member><sgmltag class="attribute">hreflang</sgmltag></member>
<member><sgmltag class="attribute">hspace</sgmltag></member>
<member><sgmltag class="attribute">icon</sgmltag></member>
<member><sgmltag class="attribute">id</sgmltag></member>
<member><sgmltag class="attribute">inputmode</sgmltag></member>
<member><sgmltag class="attribute">ismap</sgmltag></member>
<member><sgmltag class="attribute">keytype</sgmltag></member>
<member><sgmltag class="attribute">label</sgmltag></member>
<member><sgmltag class="attribute">leftspacing</sgmltag></member>
<member><sgmltag class="attribute">lang</sgmltag></member>
<member><sgmltag class="attribute">list</sgmltag></member>
<member><sgmltag class="attribute">longdesc</sgmltag></member>
<member><sgmltag class="attribute">loop</sgmltag></member>
<member><sgmltag class="attribute">loopcount</sgmltag></member>
<member><sgmltag class="attribute">loopend</sgmltag></member>
<member><sgmltag class="attribute">loopstart</sgmltag></member>
<member><sgmltag class="attribute">low</sgmltag></member>
<member><sgmltag class="attribute">lowsrc</sgmltag></member>
<member><sgmltag class="attribute">max</sgmltag></member>
<member><sgmltag class="attribute">maxlength</sgmltag></member>
<member><sgmltag class="attribute">media</sgmltag></member>
<member><sgmltag class="attribute">method</sgmltag></member>
<member><sgmltag class="attribute">min</sgmltag></member>
<member><sgmltag class="attribute">multiple</sgmltag></member>
<member><sgmltag class="attribute">name</sgmltag></member>
<member><sgmltag class="attribute">nohref</sgmltag></member>
<member><sgmltag class="attribute">noshade</sgmltag></member>
<member><sgmltag class="attribute">nowrap</sgmltag></member>
<member><sgmltag class="attribute">open</sgmltag></member>
<member><sgmltag class="attribute">optimum</sgmltag></member>
<member><sgmltag class="attribute">pattern</sgmltag></member>
<member><sgmltag class="attribute">ping</sgmltag></member>
<member><sgmltag class="attribute">point-size</sgmltag></member>
<member><sgmltag class="attribute">prompt</sgmltag></member>
<member><sgmltag class="attribute">pqg</sgmltag></member>
<member><sgmltag class="attribute">radiogroup</sgmltag></member>
<member><sgmltag class="attribute">readonly</sgmltag></member>
<member><sgmltag class="attribute">rel</sgmltag></member>
<member><sgmltag class="attribute">repeat-max</sgmltag></member>
<member><sgmltag class="attribute">repeat-min</sgmltag></member>
<member><sgmltag class="attribute">replace</sgmltag></member>
<member><sgmltag class="attribute">required</sgmltag></member>
<member><sgmltag class="attribute">rev</sgmltag></member>
<member><sgmltag class="attribute">rightspacing</sgmltag></member>
<member><sgmltag class="attribute">rows</sgmltag></member>
<member><sgmltag class="attribute">rowspan</sgmltag></member>
<member><sgmltag class="attribute">rules</sgmltag></member>
<member><sgmltag class="attribute">scope</sgmltag></member>
<member><sgmltag class="attribute">selected</sgmltag></member>
<member><sgmltag class="attribute">shape</sgmltag></member>
<member><sgmltag class="attribute">size</sgmltag></member>
<member><sgmltag class="attribute">span</sgmltag></member>
<member><sgmltag class="attribute">src</sgmltag></member>
<member><sgmltag class="attribute">start</sgmltag></member>
<member><sgmltag class="attribute">step</sgmltag></member>
<member><sgmltag class="attribute">summary</sgmltag></member>
<member><sgmltag class="attribute">suppress</sgmltag></member>
<member><sgmltag class="attribute">tabindex</sgmltag></member>
<member><sgmltag class="attribute">target</sgmltag></member>
<member><sgmltag class="attribute">template</sgmltag></member>
<member><sgmltag class="attribute">title</sgmltag></member>
<member><sgmltag class="attribute">toppadding</sgmltag></member>
<member><sgmltag class="attribute">type</sgmltag></member>
<member><sgmltag class="attribute">unselectable</sgmltag></member>
<member><sgmltag class="attribute">usemap</sgmltag></member>
<member><sgmltag class="attribute">urn</sgmltag></member>
<member><sgmltag class="attribute">valign</sgmltag></member>
<member><sgmltag class="attribute">value</sgmltag></member>
<member><sgmltag class="attribute">variable</sgmltag></member>
<member><sgmltag class="attribute">volume</sgmltag></member>
<member><sgmltag class="attribute">vspace</sgmltag></member>
<member><sgmltag class="attribute">vrml</sgmltag></member>
<member><sgmltag class="attribute">width</sgmltag></member>
<member><sgmltag class="attribute">wrap</sgmltag></member>
<member><sgmltag class="attribute">xml:lang</sgmltag></member>
</simplelist>
</para>
</section>

<section id="advanced.sanitization.svg">
<title>&svg; Sanitization</title>
<para>The following SVG elements are allowed by default (all others are stripped):
<simplelist type="inline">
<member><sgmltag class="element">a</sgmltag></member>
<member><sgmltag class="element">animate</sgmltag></member>
<member><sgmltag class="element">animateColor</sgmltag></member>
<member><sgmltag class="element">animateMotion</sgmltag></member>
<member><sgmltag class="element">animateTransform</sgmltag></member>
<member><sgmltag class="element">circle</sgmltag></member>
<member><sgmltag class="element">defs</sgmltag></member>
<member><sgmltag class="element">desc</sgmltag></member>
<member><sgmltag class="element">ellipse</sgmltag></member>
<member><sgmltag class="element">foreignObject</sgmltag></member>
<member><sgmltag class="element">font-face</sgmltag></member>
<member><sgmltag class="element">font-face-name</sgmltag></member>
<member><sgmltag class="element">font-face-src</sgmltag></member>
<member><sgmltag class="element">g</sgmltag></member>
<member><sgmltag class="element">glyph</sgmltag></member>
<member><sgmltag class="element">hkern</sgmltag></member>
<member><sgmltag class="element"> linearGradient</sgmltag></member>
<member><sgmltag class="element">line</sgmltag></member>
<member><sgmltag class="element">marker</sgmltag></member>
<member><sgmltag class="element">metadata</sgmltag></member>
<member><sgmltag class="element">missing-glyph</sgmltag></member>
<member><sgmltag class="element">mpath</sgmltag></member>
<member><sgmltag class="element">path</sgmltag></member>
<member><sgmltag class="element">polygon</sgmltag></member>
<member><sgmltag class="element">polyline</sgmltag></member>
<member><sgmltag class="element">radialGradient</sgmltag></member>
<member><sgmltag class="element">rect</sgmltag></member>
<member><sgmltag class="element">set</sgmltag></member>
<member><sgmltag class="element">stop</sgmltag></member>
<member><sgmltag class="element">svg</sgmltag></member>
<member><sgmltag class="element">switch</sgmltag></member>
<member><sgmltag class="element">text</sgmltag></member>
<member><sgmltag class="element">title</sgmltag></member>
<member><sgmltag class="element">tspan</sgmltag></member>
<member><sgmltag class="element">use</sgmltag></member>
</simplelist>
</para>

<para>The following &svg; attributes are allowed by default (all others are stripped):
<simplelist type="inline">
<member><sgmltag class="attribute">accent-height</sgmltag></member>
<member><sgmltag class="attribute">accumulate</sgmltag></member>
<member><sgmltag class="attribute">additive</sgmltag></member>
<member><sgmltag class="attribute">alphabetic</sgmltag></member>
<member><sgmltag class="attribute">arabic-form</sgmltag></member>
<member><sgmltag class="attribute">ascent</sgmltag></member>
<member><sgmltag class="attribute">attributeName</sgmltag></member>
<member><sgmltag class="attribute">attributeType</sgmltag></member>
<member><sgmltag class="attribute">baseProfile</sgmltag></member>
<member><sgmltag class="attribute">bbox</sgmltag></member>
<member><sgmltag class="attribute">begin</sgmltag></member>
<member><sgmltag class="attribute">by</sgmltag></member>
<member><sgmltag class="attribute">calcMode</sgmltag></member>
<member><sgmltag class="attribute">cap-height</sgmltag></member>
<member><sgmltag class="attribute">class</sgmltag></member>
<member><sgmltag class="attribute">color</sgmltag></member>
<member><sgmltag class="attribute">color-rendering</sgmltag></member>
<member><sgmltag class="attribute">content</sgmltag></member>
<member><sgmltag class="attribute">cx</sgmltag></member>
<member><sgmltag class="attribute">cy</sgmltag></member>
<member><sgmltag class="attribute">d</sgmltag></member>
<member><sgmltag class="attribute">dx</sgmltag></member>
<member><sgmltag class="attribute">dy</sgmltag></member>
<member><sgmltag class="attribute">descent</sgmltag></member>
<member><sgmltag class="attribute">display</sgmltag></member>
<member><sgmltag class="attribute">dur</sgmltag></member>
<member><sgmltag class="attribute">end</sgmltag></member>
<member><sgmltag class="attribute">fill</sgmltag></member>
<member><sgmltag class="attribute">fill-opacity</sgmltag></member>
<member><sgmltag class="attribute">fill-rule</sgmltag></member>
<member><sgmltag class="attribute">font-family</sgmltag></member>
<member><sgmltag class="attribute">font-size</sgmltag></member>
<member><sgmltag class="attribute">font-stretch</sgmltag></member>
<member><sgmltag class="attribute">font-style</sgmltag></member>
<member><sgmltag class="attribute">font-variant</sgmltag></member>
<member><sgmltag class="attribute">font-weight</sgmltag></member>
<member><sgmltag class="attribute">from</sgmltag></member>
<member><sgmltag class="attribute">fx</sgmltag></member>
<member><sgmltag class="attribute">fy</sgmltag></member>
<member><sgmltag class="attribute">g1</sgmltag></member>
<member><sgmltag class="attribute">g2</sgmltag></member>
<member><sgmltag class="attribute">glyph-name</sgmltag></member>
<member><sgmltag class="attribute">gradientUnits</sgmltag></member>
<member><sgmltag class="attribute">hanging</sgmltag></member>
<member><sgmltag class="attribute">height</sgmltag></member>
<member><sgmltag class="attribute">horiz-adv-x</sgmltag></member>
<member><sgmltag class="attribute">horiz-origin-x</sgmltag></member>
<member><sgmltag class="attribute">id</sgmltag></member>
<member><sgmltag class="attribute">ideographic</sgmltag></member>
<member><sgmltag class="attribute">k</sgmltag></member>
<member><sgmltag class="attribute">keyPoints</sgmltag></member>
<member><sgmltag class="attribute">keySplines</sgmltag></member>
<member><sgmltag class="attribute">keyTimes</sgmltag></member>
<member><sgmltag class="attribute">lang</sgmltag></member>
<member><sgmltag class="attribute">mathematical</sgmltag></member>
<member><sgmltag class="attribute">marker-end</sgmltag></member>
<member><sgmltag class="attribute">marker-mid</sgmltag></member>
<member><sgmltag class="attribute">marker-start</sgmltag></member>
<member><sgmltag class="attribute">markerHeight</sgmltag></member>
<member><sgmltag class="attribute">markerUnits</sgmltag></member>
<member><sgmltag class="attribute">markerWidth</sgmltag></member>
<member><sgmltag class="attribute">max</sgmltag></member>
<member><sgmltag class="attribute">min</sgmltag></member>
<member><sgmltag class="attribute">name</sgmltag></member>
<member><sgmltag class="attribute">offset</sgmltag></member>
<member><sgmltag class="attribute">opacity</sgmltag></member>
<member><sgmltag class="attribute">orient</sgmltag></member>
<member><sgmltag class="attribute">origin</sgmltag></member>
<member><sgmltag class="attribute">overline-position</sgmltag></member>
<member><sgmltag class="attribute">overline-thickness</sgmltag></member>
<member><sgmltag class="attribute">panose-1</sgmltag></member>
<member><sgmltag class="attribute">path</sgmltag></member>
<member><sgmltag class="attribute">pathLength</sgmltag></member>
<member><sgmltag class="attribute">points</sgmltag></member>
<member><sgmltag class="attribute">preserveAspectRatio</sgmltag></member>
<member><sgmltag class="attribute">r</sgmltag></member>
<member><sgmltag class="attribute">refX</sgmltag></member>
<member><sgmltag class="attribute">refY</sgmltag></member>
<member><sgmltag class="attribute">repeatCount</sgmltag></member>
<member><sgmltag class="attribute">repeatDur</sgmltag></member>
<member><sgmltag class="attribute">requiredExtensions</sgmltag></member>
<member><sgmltag class="attribute">requiredFeatures</sgmltag></member>
<member><sgmltag class="attribute">restart</sgmltag></member>
<member><sgmltag class="attribute">rotate</sgmltag></member>
<member><sgmltag class="attribute">rx</sgmltag></member>
<member><sgmltag class="attribute">ry</sgmltag></member>
<member><sgmltag class="attribute">slope</sgmltag></member>
<member><sgmltag class="attribute">stemh</sgmltag></member>
<member><sgmltag class="attribute">stemv</sgmltag></member>
<member><sgmltag class="attribute">stop-color</sgmltag></member>
<member><sgmltag class="attribute">stop-opacity</sgmltag></member>
<member><sgmltag class="attribute">strikethrough-position</sgmltag></member>
<member><sgmltag class="attribute">strikethrough-thickness</sgmltag></member>
<member><sgmltag class="attribute">stroke</sgmltag></member>
<member><sgmltag class="attribute">stroke-dasharray</sgmltag></member>
<member><sgmltag class="attribute">stroke-dashoffset</sgmltag></member>
<member><sgmltag class="attribute">stroke-linecap</sgmltag></member>
<member><sgmltag class="attribute">stroke-linejoin</sgmltag></member>
<member><sgmltag class="attribute">stroke-miterlimit</sgmltag></member>
<member><sgmltag class="attribute">stroke-opacity</sgmltag></member>
<member><sgmltag class="attribute">stroke-width</sgmltag></member>
<member><sgmltag class="attribute">systemLanguage</sgmltag></member>
<member><sgmltag class="attribute">target</sgmltag></member>
<member><sgmltag class="attribute">text-anchor</sgmltag></member>
<member><sgmltag class="attribute">to</sgmltag></member>
<member><sgmltag class="attribute">transform</sgmltag></member>
<member><sgmltag class="attribute">type</sgmltag></member>
<member><sgmltag class="attribute">u1</sgmltag></member>
<member><sgmltag class="attribute">u2</sgmltag></member>
<member><sgmltag class="attribute">underline-position</sgmltag></member>
<member><sgmltag class="attribute">underline-thickness</sgmltag></member>
<member><sgmltag class="attribute">unicode</sgmltag></member>
<member><sgmltag class="attribute">unicode-range</sgmltag></member>
<member><sgmltag class="attribute">units-per-em</sgmltag></member>
<member><sgmltag class="attribute">values</sgmltag></member>
<member><sgmltag class="attribute">version</sgmltag></member>
<member><sgmltag class="attribute">viewBox</sgmltag></member>
<member><sgmltag class="attribute">visibility</sgmltag></member>
<member><sgmltag class="attribute">width</sgmltag></member>
<member><sgmltag class="attribute">widths</sgmltag></member>
<member><sgmltag class="attribute">x</sgmltag></member>
<member><sgmltag class="attribute">x-height</sgmltag></member>
<member><sgmltag class="attribute">x1</sgmltag></member>
<member><sgmltag class="attribute">x2</sgmltag></member>
<member><sgmltag class="attribute">xlink:actuate</sgmltag></member>
<member><sgmltag class="attribute">xlink:arcrole</sgmltag></member>
<member><sgmltag class="attribute">xlink:href</sgmltag></member>
<member><sgmltag class="attribute">xlink:role</sgmltag></member>
<member><sgmltag class="attribute">xlink:show</sgmltag></member>
<member><sgmltag class="attribute">xlink:title</sgmltag></member>
<member><sgmltag class="attribute">xlink:type</sgmltag></member>
<member><sgmltag class="attribute">xml:base</sgmltag></member>
<member><sgmltag class="attribute">xml:lang</sgmltag></member>
<member><sgmltag class="attribute">xml:space</sgmltag></member>
<member><sgmltag class="attribute">xmlns</sgmltag></member>
<member><sgmltag class="attribute">xmlns:xlink</sgmltag></member>
<member><sgmltag class="attribute">y</sgmltag></member>
<member><sgmltag class="attribute">y1</sgmltag></member>
<member><sgmltag class="attribute">y2</sgmltag></member>
<member><sgmltag class="attribute">zoomAndPan</sgmltag></member>
</simplelist>
</para>
</section>

<section id="advanced.sanitization.mathml">
<title>&mathml; Sanitization</title>
<para>The following &mathml; elements are allowed by default (all others are stripped):
<simplelist type="inline">
<member><sgmltag class="element">annotation</sgmltag></member>
<member><sgmltag class="element">annotation-xml</sgmltag></member>
<member><sgmltag class="element">maction</sgmltag></member>
<member><sgmltag class="element">math</sgmltag></member>
<member><sgmltag class="element">merror</sgmltag></member>
<member><sgmltag class="element">mfenced</sgmltag></member>
<member><sgmltag class="element">mfrac</sgmltag></member>
<member><sgmltag class="element">mi</sgmltag></member>
<member><sgmltag class="element">mmultiscripts</sgmltag></member>
<member><sgmltag class="element">mn</sgmltag></member>
<member><sgmltag class="element">mo</sgmltag></member>
<member><sgmltag class="element">mover</sgmltag></member>
<member><sgmltag class="element">mpadded</sgmltag></member>
<member><sgmltag class="element">mphantom</sgmltag></member>
<member><sgmltag class="element">mprescripts</sgmltag></member>
<member><sgmltag class="element">mroot</sgmltag></member>
<member><sgmltag class="element">mrow</sgmltag></member>
<member><sgmltag class="element">mspace</sgmltag></member>
<member><sgmltag class="element">msqrt</sgmltag></member>
<member><sgmltag class="element">mstyle</sgmltag></member>
<member><sgmltag class="element">msub</sgmltag></member>
<member><sgmltag class="element">msubsup</sgmltag></member>
<member><sgmltag class="element">msup</sgmltag></member>
<member><sgmltag class="element">mtable</sgmltag></member>
<member><sgmltag class="element">mtd</sgmltag></member>
<member><sgmltag class="element">mtext</sgmltag></member>
<member><sgmltag class="element">mtr</sgmltag></member>
<member><sgmltag class="element">munder</sgmltag></member>
<member><sgmltag class="element">munderover</sgmltag></member>
<member><sgmltag class="element">none</sgmltag></member>
<member><sgmltag class="element">semantics</sgmltag></member>
</simplelist>
</para>

<para>The following &mathml; attributes are allowed by default (all others are stripped):
<simplelist type="inline">
<member><sgmltag class="attribute">actiontype</sgmltag></member>
<member><sgmltag class="attribute">align</sgmltag></member>
<member><sgmltag class="attribute">columnalign</sgmltag></member>
<member><sgmltag class="attribute">columnalign</sgmltag></member>
<member><sgmltag class="attribute">columnalign</sgmltag></member>
<member><sgmltag class="attribute">close</sgmltag></member>
<member><sgmltag class="attribute">columnlines</sgmltag></member>
<member><sgmltag class="attribute">columnspacing</sgmltag></member>
<member><sgmltag class="attribute">columnspan</sgmltag></member>
<member><sgmltag class="attribute">depth</sgmltag></member>
<member><sgmltag class="attribute">display</sgmltag></member>
<member><sgmltag class="attribute">displaystyle</sgmltag></member>
<member><sgmltag class="attribute">encoding</sgmltag></member>
<member><sgmltag class="attribute">equalcolumns</sgmltag></member>
<member><sgmltag class="attribute">equalrows</sgmltag></member>
<member><sgmltag class="attribute">fence</sgmltag></member>
<member><sgmltag class="attribute">fontstyle</sgmltag></member>
<member><sgmltag class="attribute">fontweight</sgmltag></member>
<member><sgmltag class="attribute">frame</sgmltag></member>
<member><sgmltag class="attribute">height</sgmltag></member>
<member><sgmltag class="attribute">linethickness</sgmltag></member>
<member><sgmltag class="attribute">lspace</sgmltag></member>
<member><sgmltag class="attribute">mathbackground</sgmltag></member>
<member><sgmltag class="attribute">mathcolor</sgmltag></member>
<member><sgmltag class="attribute">mathvariant</sgmltag></member>
<member><sgmltag class="attribute">mathvariant</sgmltag></member>
<member><sgmltag class="attribute">maxsize</sgmltag></member>
<member><sgmltag class="attribute">minsize</sgmltag></member>
<member><sgmltag class="attribute">open</sgmltag></member>
<member><sgmltag class="attribute">other</sgmltag></member>
<member><sgmltag class="attribute">rowalign</sgmltag></member>
<member><sgmltag class="attribute">rowalign</sgmltag></member>
<member><sgmltag class="attribute">rowalign</sgmltag></member>
<member><sgmltag class="attribute">rowlines</sgmltag></member>
<member><sgmltag class="attribute">rowspacing</sgmltag></member>
<member><sgmltag class="attribute">rowspan</sgmltag></member>
<member><sgmltag class="attribute">rspace</sgmltag></member>
<member><sgmltag class="attribute">scriptlevel</sgmltag></member>
<member><sgmltag class="attribute">selection</sgmltag></member>
<member><sgmltag class="attribute">separator</sgmltag></member>
<member><sgmltag class="attribute">separators</sgmltag></member>
<member><sgmltag class="attribute">stretchy</sgmltag></member>
<member><sgmltag class="attribute">width</sgmltag></member>
<member><sgmltag class="attribute">width</sgmltag></member>
<member><sgmltag class="attribute">xlink:href</sgmltag></member>
<member><sgmltag class="attribute">xlink:show</sgmltag></member>
<member><sgmltag class="attribute">xlink:type</sgmltag></member>
<member><sgmltag class="attribute">xmlns</sgmltag></member>
<member><sgmltag class="attribute">xmlns:xlink</sgmltag></member>
</simplelist>
</para>
</section>

<section id="advanced.sanitization.css">
<title>&css; Sanitization</title>
<para>The following &css; properties are allowed by default in <sgmltag class="attribute">style</sgmltag> attributes (all others are stripped):
<simplelist type="inline">
<member><sgmltag>azimuth</sgmltag></member>
<member><sgmltag>background-color</sgmltag></member>
<member><sgmltag>border-bottom-color</sgmltag></member>
<member><sgmltag>border-collapse</sgmltag></member>
<member><sgmltag>border-color</sgmltag></member>
<member><sgmltag>border-left-color</sgmltag></member>
<member><sgmltag>border-right-color</sgmltag></member>
<member><sgmltag>border-top-color</sgmltag></member>
<member><sgmltag>clear</sgmltag></member>
<member><sgmltag>color</sgmltag></member>
<member><sgmltag>cursor</sgmltag></member>
<member><sgmltag>direction</sgmltag></member>
<member><sgmltag>display</sgmltag></member>
<member><sgmltag>elevation</sgmltag></member>
<member><sgmltag>float</sgmltag></member>
<member><sgmltag>font</sgmltag></member>
<member><sgmltag>font-family</sgmltag></member>
<member><sgmltag>font-size</sgmltag></member>
<member><sgmltag>font-style</sgmltag></member>
<member><sgmltag>font-variant</sgmltag></member>
<member><sgmltag>font-weight</sgmltag></member>
<member><sgmltag>height</sgmltag></member>
<member><sgmltag>letter-spacing</sgmltag></member>
<member><sgmltag>line-height</sgmltag></member>
<member><sgmltag>overflow</sgmltag></member>
<member><sgmltag>pause</sgmltag></member>
<member><sgmltag>pause-after</sgmltag></member>
<member><sgmltag>pause-before</sgmltag></member>
<member><sgmltag>pitch</sgmltag></member>
<member><sgmltag>pitch-range</sgmltag></member>
<member><sgmltag>richness</sgmltag></member>
<member><sgmltag>speak</sgmltag></member>
<member><sgmltag>speak-header</sgmltag></member>
<member><sgmltag>speak-numeral</sgmltag></member>
<member><sgmltag>speak-punctuation</sgmltag></member>
<member><sgmltag>speech-rate</sgmltag></member>
<member><sgmltag>stress</sgmltag></member>
<member><sgmltag>text-align</sgmltag></member>
<member><sgmltag>text-decoration</sgmltag></member>
<member><sgmltag>text-indent</sgmltag></member>
<member><sgmltag>unicode-bidi</sgmltag></member>
<member><sgmltag>vertical-align</sgmltag></member>
<member><sgmltag>voice-family</sgmltag></member>
<member><sgmltag>volume</sgmltag></member>
<member><sgmltag>white-space</sgmltag></member>
<member><sgmltag>width</sgmltag></member>
</simplelist>
</para>

<note>
<title/>
<para>Not all possible CSS values are allowed for these properties.  The allowable values are restricted by a whitelist and a regular expression that allows color values and lengths.  &uri;s are not allowed, to prevent <ulink url="&url_howtoconsumersssafely;">platypus attacks</ulink>.  See the <classname>_HTMLSanitizer</classname> class for more details.</para>
</note>

</section>

<section id="advanced.sanitization.why">
<title>Whitelist, Don't Blacklist</title>
<para>I am often asked why &feedparser; is so hard-assed about &html; and &css; sanitizing.  To illustrate the problem, here is an incomplete list of potentially dangerous &html; tags and attributes:</para>
<itemizedlist>
<listitem><para><sgmltag class="element">script</sgmltag>, which can contain malicious script</para></listitem>
<listitem><para><sgmltag class="element">applet</sgmltag>, <sgmltag class="element">embed</sgmltag>, and <sgmltag class="element">object</sgmltag>, which can automatically download and execute malicious code</para></listitem>
<listitem><para><sgmltag class="element">meta</sgmltag>, which can contain malicious redirects</para></listitem>
<listitem><para><sgmltag class="attribute">onload</sgmltag>, <sgmltag class="attribute">onunload</sgmltag>, and all other <sgmltag class="attribute">on*</sgmltag> attributes, which can contain malicious script</para></listitem>
<listitem><para><sgmltag class="element">style</sgmltag>, <sgmltag class="element">link</sgmltag>, and the <sgmltag class="attribute">style</sgmltag> attribute, which can contain malicious script</para></listitem>
</itemizedlist>

<para><emphasis><sgmltag class="attribute">style</sgmltag>?</emphasis>  Yes, <sgmltag class="attribute">style</sgmltag>.  &css; definitions can contain executable code.</para>

<example id="example.javascript">
<title>Embedding &javascript; in &css;</title>
<para>This sample is taken from <ulink url="&url_example_rss20;"/>:</para>
<programlisting>
&lt;description>Watch out for
&amp;lt;span style="background: url(javascript:window.location='http://example.org/')"&amp;gt;
nasty tricks&amp;lt;/span&amp;gt;&lt;/description></programlisting>
<para>This sample is more advanced, and does not contain the keyword <literal>javascript:</literal> that many naive &html; sanitizers scan for:</para>
<programlisting>&lt;description>Watch out for
&amp;lt;span style="any: expression(window.location='http://example.org/')"&amp;gt;
nasty tricks&amp;lt;/span&amp;gt;&lt;/description></programlisting>
<para>&iewin; will execute the &javascript; in both of these examples.</para>
</example>
<para>Now consider that in &html;, attribute values may be entity-encoded in several different ways.</para>
<example id="example.javascript.encoded">
<title>Embedding encoded &javascript; in &css;</title>
<para>To a browser, this:</para>
<programlisting>&lt;span style="any: expression(window.location='http://example.org/')"&gt;</programlisting>
<para>is the same as this (without the line breaks):</para>
<programlisting>&lt;span style="&amp;#97;&amp;#110;&amp;#121;&amp;#58;&amp;#32;&amp;#101;&amp;#120;&amp;#112;&amp;#114;&amp;#101;
&amp;#115;&amp;#115;&amp;#105;&amp;#111;&amp;#110;&amp;#40;&amp;#119;&amp;#105;&amp;#110;&amp;#100;&amp;#111;&amp;#119;
&amp;#46;&amp;#108;&amp;#111;&amp;#99;&amp;#97;&amp;#116;&amp;#105;&amp;#111;&amp;#110;&amp;#61;&amp;#39;&amp;#104;
&amp;#116;&amp;#116;&amp;#112;&amp;#58;&amp;#47;&amp;#47;&amp;#101;&amp;#120;&amp;#97;&amp;#109;&amp;#112;&amp;#108;
&amp;#101;&amp;#46;&amp;#111;&amp;#114;&amp;#103;&amp;#47;&amp;#39;&amp;#41;"&gt;</programlisting>
<para>which is the same as this (without the line breaks):</para>
<programlisting>&lt;span style="&amp;#x61;&amp;#x6e;&amp;#x79;&amp;#x3a;&amp;#x20;&amp;#x65;&amp;#x78;&amp;#x70;&amp;#x72;
&amp;#x65;&amp;#x73;&amp;#x73;&amp;#x69;&amp;#x6f;&amp;#x6e;&amp;#x28;&amp;#x77;&amp;#x69;&amp;#x6e;
&amp;#x64;&amp;#x6f;&amp;#x77;&amp;#x2e;&amp;#x6c;&amp;#x6f;&amp;#x63;&amp;#x61;&amp;#x74;&amp;#x69;
&amp;#x6f;&amp;#x6e;&amp;#x3d;&amp;#x27;&amp;#x68;&amp;#x74;&amp;#x74;&amp;#x70;&amp;#x3a;&amp;#x2f;
&amp;#x2f;&amp;#x65;&amp;#x78;&amp;#x61;&amp;#x6d;&amp;#x70;&amp;#x6c;&amp;#x65;&amp;#x2e;&amp;#x6f;
&amp;#x72;&amp;#x67;&amp;#x2f;&amp;#x27;&amp;#x29;"&gt;</programlisting>
<para>And so on, plus several other variations, plus every combination of every variation.</para>
</example>
<para>The more I investigate, the more cases I find where &iewin; will treat seemingly innocuous markup as code and blithely execute it.  This is why &feedparser; uses a whitelist and not a blacklist.   I am reasonably confident that none of the elements or attributes on the whitelist are security risks.  I am not at all confident about elements or attributes that I have not explicitly investigated.  And I have no confidence at all in my ability to detect strings within attribute values that &iewin; will treat as executable code.</para>
<itemizedlist role="furtherreading">
<title>Elsewhere</title>
<listitem><para><ulink url="&url_howtoconsumersssafely;">How to consume &rss; safely</ulink> explains the platypus attack.</para></listitem>
</itemizedlist>
</section>

</section>

<section id="advanced.normalization">
<?dbhtml filename="content-normalization.html"?>
<sectioninfo>
<abstract>
<title/>
<para>&feedparser; can parse many different types of feeds: &atom;, &cdf;, and nine different versions of &rss;.  You should not be forced to learn the differences between these formats.  &feedparser; does its best to ensure that you can treat all feeds the same way, regardless of format or version.</para>
</abstract>
</sectioninfo>
<title>Content Normalization</title>
<para>You can access the basic elements of an &atom; feed using &rss; terminology.</para>
<example id="example.atom.as.rss">
<title>Accessing an &atom; feed as an &rss; feed</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>d['channel']['title']</userinput>
<computeroutput>u'Sample Feed'</computeroutput>
&prompt;<userinput>d['channel']['link']</userinput>
<computeroutput>u'http://example.org/'</computeroutput>
&prompt;<userinput>d['channel']['description']</userinput>
<computeroutput>u'For documentation &lt;em&gt;only&lt;/em&gt;</computeroutput>
&prompt;<userinput>len(d['items'])</userinput>
<computeroutput>1</computeroutput>
&prompt;<userinput>e = d['items'][0]</userinput>
&prompt;<userinput>e['title']</userinput>
<computeroutput>u'First entry title'</computeroutput>
&prompt;<userinput>e['link']</userinput>
<computeroutput>u'http://example.org/entry/3'</computeroutput>
&prompt;<userinput>e['description']</userinput>
<computeroutput>u'Watch out for nasty tricks'</computeroutput>
&prompt;<userinput>e['author']</userinput>
<computeroutput>u'Mark Pilgrim (mark@example.org)'</computeroutput></screen>
</example>
<para>The same thing works in reverse: you can access &rss; feeds as if they were &atom; feeds.</para>
<example id="example.rss.as.atom">
<title>Accessing an &rss; feed as an &atom; feed</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_rss20;
&prompt;<userinput>d.feed.subtitle_detail</userinput>
<computeroutput>{'type': 'text/html',
 'base': '&url_example_rss20;',
 'language': None,
 'value': u'For documentation &lt;em&gt;only&lt;/em&gt;'}</computeroutput>
&prompt;<userinput>len(d.entries)</userinput>
<computeroutput>1</computeroutput>
&prompt;<userinput>e = d.entries[0]</userinput>
&prompt;<userinput>e.links</userinput>
<computeroutput>[{'rel': 'alternate',
  'type': 'text/html',
  'href': u'http://example.org/item/1'}]</computeroutput>
&prompt;<userinput>e.summary_detail</userinput>
<computeroutput>{'type': 'text/html',
 'base': '&url_example_rss20;',
 'language': u'en',
 'value': u'Watch out for &lt;span&gt;nasty tricks&lt;/span&gt;'}</computeroutput>
&prompt;<userinput>e.updated_parsed</userinput>
<computeroutput>(2002, 9, 5, 0, 0, 1, 3, 248, 0)</computeroutput></screen>
</example>
<note>
<title/>
<para>For more examples of how &feedparser; normalizes content from different formats, see <xref linkend="annotated"/>.</para>
</note>
</section>

<section id="advanced.microformats">
<?dbhtml filename="microformats.html"?>
<sectioninfo>
<abstract>
<title/>
<para>An emerging trend in feed syndication is the inclusion of <ulink url="&url_microformats;">microformats</ulink>.  Besides the semantics defined by individual feed formats, publishers can add additional semantics using <sgmltag class="attribute">rel</sgmltag> and <sgmltag class="attribute">class</sgmltag> attributes in embedded &html; content.</para>
</abstract>
</sectioninfo>
<title>Microformats</title>

<note>
<title/>
<para>To parse microformats. &feedparser; relies on a third-party library called &beautifulsoup;, which is distributed separately.  If &beautifulsoup_name; is not installed, &feedparser; will silently skip microformats parsing.</para>
</note>

<para>The following elements are parsed for microformats:</para>
<itemizedlist>
<listitem><para><xref linkend="reference.entry.summary_detail.value"/></para></listitem>
<listitem><para><xref linkend="reference.entry.content.value"/></para></listitem>
</itemizedlist>

<section id="advanced.microformats.relenclosure">
<title>rel=enclosure</title>
<para>The <ulink url="&url_microformats_relenclosure;"><literal>rel=enclosure</literal></ulink> microformat provides a way for embedded &html; content to specify that a certain link should be treated as an <link linkend="reference.entry.enclosures">enclosure</link>.  &feedparser; looks for links within embedded markup that meet any of the following conditions:</para>

<itemizedlist>
<listitem><para><literal>rel</literal> attribute contains <literal>enclosure</literal> (note: <literal>rel</literal> attributes can contain a list of space-separated values)</para></listitem>
<listitem><para><literal>type</literal> attribute starts with <literal>audio/</literal></para></listitem>
<listitem><para><literal>type</literal> attribute starts with <literal>video/</literal></para></listitem>
<listitem><para><literal>type</literal> attribute starts with <literal>application/</literal> but does not end with <literal>xml</literal></para></listitem>
<listitem><para><literal>href</literal> attribute ends with one of the following file extensions: 
<simplelist type="inline">
<member><filename>.zip</filename></member>
<member><filename>.rar</filename></member>
<member><filename>.exe</filename></member>
<member><filename>.gz</filename></member>
<member><filename>.tar</filename></member>
<member><filename>.tgz</filename></member>
<member><filename>.tbz2</filename></member>
<member><filename>.bz2</filename></member>
<member><filename>.z</filename></member>
<member><filename>.7z</filename></member>
<member><filename>.dmg</filename></member>
<member><filename>.img</filename></member>
<member><filename>.sit</filename></member>
<member><filename>.sitx</filename></member>
<member><filename>.hqx</filename></member>
<member><filename>.deb</filename></member>
<member><filename>.rpm</filename></member>
<member><filename>.bz2</filename></member>
<member><filename>.jar</filename></member>
<member><filename>.rar</filename></member>
<member><filename>.iso</filename></member>
<member><filename>.bin</filename></member>
<member><filename>.msi</filename></member>
<member><filename>.mp2</filename></member>
<member><filename>.mp3</filename></member>
<member><filename>.ogg</filename></member>
<member><filename>.ogm</filename></member>
<member><filename>.mp4</filename></member>
<member><filename>.m4v</filename></member>
<member><filename>.m4a</filename></member>
<member><filename>.avi</filename></member>
<member><filename>.wma</filename></member>
<member><filename>.wmv</filename></member>
</simplelist>
</para></listitem>
</itemizedlist>

<para>When &feedparser; finds a link that satisfies any of these conditions, it adds it to <xref linkend="reference.entry.enclosures"/>.</para>

<example id="example.relenclosure">
<title>Parsing embedded enclosures</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_relenclosure;">&url_example_relenclosure;</ulink>')</userinput>
&prompt;<userinput>d.entries[0].enclosures</userinput>
<computeroutput>[{u'href': u'http://example.com/movie.mp4', 'title': u'awesome movie'}]</computeroutput></screen>
</example>

</section>

<section id="advanced.microformats.reltag">
<title>rel=tag</title>

<para>The <ulink url="&url_microformats_reltag;">rel=tag</ulink> microformat allows you to define <link linkend="reference.entry.tags">tags</link> within embedded &html; content.  &feedparser; looks for these attribute values in embedded markup and maps them to <xref linkend="reference.entry.tags"/>.</para>

<example id="example.reltag">
<title>Parsing embedded tags</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_reltag;">&url_example_reltag;</ulink>')</userinput>
&prompt;<userinput>d.entries[0].tags</userinput>
<computeroutput>[{'term': u'tech', 'scheme': u'http://del.icio.us/tag/', 'label': u'Technology'}]</computeroutput></screen>
</example>

</section>

<section id="advanced.microformats.xfn">
<title>&xfn;</title>

<para>The <ulink url="&url_xfn;">&xfn;</ulink> microformat allows you to define human relationships between &uri;s.  For example, you could link from your weblog to your spouse's weblog with the <constant>rel="spouse"</constant> relation.  It is intended primarily for "blogrolls" or other static lists of links, but the relations can occur anywhere in &html; content.  If found, &feedparser; will return the &xfn; information in <xref linkend="reference.entry.xfn"/>.</para>

<para>&feedparser; supports all of the relationships listed in the <ulink url="&url_xfn_profile;">&xfn; 1.1 profile</ulink>, as well as the following variations:</para>

<itemizedlist>
<listitem><para><constant>coworker</constant> in addition to <constant>co-worker</constant></para></listitem>
<listitem><para><constant>coresident</constant> in addition to <constant>co-resident</constant></para></listitem>
<listitem><para><constant>relative</constant> in addition to <constant>kin</constant></para></listitem>
<listitem><para><constant>brother</constant> and <constant>sister</constant> in addition to <constant>sibling</constant></para></listitem>
<listitem><para><constant>husband</constant> and <constant>wife</constant> in addition to <constant>spouse</constant></para></listitem>
</itemizedlist>

<example id="example.xfn">
<title>Parsing &xfn; relationships</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_xfn;">&url_example_xfn;</ulink>')</userinput>
&prompt;<userinput>person = d.entries[0].xfn[0]</userinput>
&prompt;<userinput>person.name</userinput>
<computeroutput>u'John Doe'</computeroutput>
&prompt;<userinput>person.href</userinput>
<computeroutput>u'http://example.com/johndoe'</computeroutput>
&prompt;<userinput>person.relationships</userinput>
<computeroutput>[u'coworker', u'friend']</computeroutput></screen>
</example>

</section>

<section id="advanced.microformats.hcard">
<title>&hCard;</title>
<para>The <ulink url="&url_microformats_hcard;">&hCard;</ulink> microformat allows you to embed address book information within &html; content.  If &feedparser; finds an &hCard; within supported elements, it converts it into an RFC 2426-compliant &vCard; and returns it in <xref linkend="reference.entry.vcard"/>.</para>

<example id="example.hcard">
<title>Converting embedded &hCard; markup into a &vCard;</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_hcard;">&url_example_hcard;</ulink>')</userinput>
&prompt;<userinput>print d.entries[0].vcard</userinput>
<computeroutput>BEGIN:vCard
VERSION:3.0
FN:Frank Dawson
N:Dawson;Frank
ADR;TYPE=work,postal,parcel:;;6544 Battleford Drive;Raleigh;NC;27613-3502;U
 .S.A.
TEL;TYPE=WORK,VOICE,MSG:+1-919-676-9515
TEL;TYPE=WORK,FAX:+1-919-676-9564
EMAIL;TYPE=internet,pref:Frank_Dawson at Lotus.com
EMAIL;TYPE=internet:fdawson at earthlink.net
ORG:Lotus Development Corporation
URL:http://home.earthlink.net/~fdawson
END:vCard
BEGIN:vCard
VERSION:3.0
FN:Tim Howes
N:Howes;Tim
ADR;TYPE=work:;;501 E. Middlefield Rd.;Mountain View;CA;94043;U.S.A.
TEL;TYPE=WORK,VOICE,MSG:+1-415-937-3419
TEL;TYPE=WORK,FAX:+1-415-528-4164
EMAIL;TYPE=internet:howes at netscape.com
ORG:Netscape Communications Corp.
END:vCard</computeroutput></screen>
</example>

<note>
<title/>
<para>There are a growing number of microformats, and &feedparser; does not parse all of them.  However, both the <sgmltag class="attribute">rel</sgmltag> and <sgmltag class="attribute">class</sgmltag> attributes survive <link linkend="advanced.sanitization">&html; sanitizing</link>, so applications built on &feedparser; that wish to parse additional microformat content are free to do so.</para>
</note>

<itemizedlist role="furtherreading">
<title>Elsewhere</title>
<listitem><para><ulink url="&url_microformats;">Microformats.org</ulink></para></listitem>
<listitem><para><ulink url="&url_microformats_relenclosure;"><literal>rel=enclosure</literal> specification</ulink></para></listitem>
<listitem><para><ulink url="&url_microformats_reltag;"><literal>rel=tag</literal> specification</ulink></para></listitem>
<listitem><para><ulink url="&url_xfn;">&xfn; specification</ulink></para></listitem>
<listitem><para><ulink url="&url_microformats_hcard;">&hCard; specification</ulink></para></listitem>
</itemizedlist>

</section>
</section>

<section id="advanced.namespaces">
<?dbhtml filename="namespace-handling.html"?>
<sectioninfo>
<abstract>
<title/>
<para>&feedparser; attempts to expose all possible data in feeds, including elements in extension namespaces.</para>
</abstract>
</sectioninfo>
<title>Namespace Handling</title>
<para>Some common namespaced elements are mapped to core elements.  For further information about these mappings, see <xref linkend="reference"/>.</para>
<para>Other namespaced elements are available as <varname><replaceable>prefix</replaceable>_<replaceable>element</replaceable></varname>.</para>
<para>The namespaces defined in the feed are available in the parsed results as <varname>namespaces</varname>, a dictionary of <literal>{prefix: namespaceURI}</literal>.  If the feed defines a default namespace, it is listed as <varname>namespaces['']</varname>.</para>

<example id="example.namespace">
<title>Accessing namespaced elements</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_prism;">&url_example_prism;</ulink>')</userinput>
&prompt;<userinput>d.feed.prism_issn</userinput>
<computeroutput>u'0028-0836'</computeroutput>
&prompt;<userinput>d.namespaces</userinput>
<computeroutput>{'': u'http://purl.org/rss/1.0/',
 'prism': u'http://prismstandard.org/namespaces/1.2/basic/',
 'rdf': u'http://www.w3.org/1999/02/22-rdf-syntax-ns#'}</computeroutput></screen>
</example>

<para>The prefix used to construct the variable name is not guaranteed to be the same as the prefix of the namespaced element in the original feed.  If &feedparser; recognizes the namespace, it will use the namespace's preferred prefix to construct the variable name.  It will also list the namespace in the <varname>namespaces</varname> dictionary using the namespace's preferred prefix.</para>

<para>In the previous example, the namespace (<literal>http://prismstandard.org/namespaces/1.2/basic/</literal>) was defined with the namespace's preferred prefix (<literal>prism</literal>), so the <sgmltag>prism:issn</sgmltag> element was accessible as the variable <varname>d.feed.prism_issn</varname>.  However, if the namespace is defined with a non-standard prefix, &feedparser; will still construct the variable name using the preferred prefix, <emphasis>not</emphasis> the actual prefix that is used in the feed.</para>

<para>This will become clear with an example.</para>

<example id="example.namespace.nonstandard">
<title>Accessing namespaced elements with non-standard prefixes</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_nonstandard;">&url_example_nonstandard;</ulink>')</userinput>
&prompt;<userinput>d.feed.prism_issn</userinput>
<computeroutput>u'0028-0836'</computeroutput>
&prompt;<userinput>d.feed.foo_issn</userinput>
<computeroutput role="traceback">Traceback (most recent call last):
  File "&lt;stdin>", line 1, in ?
  File "feedparser.py", line 158, in __getattr__
    raise AttributeError, "object has no attribute '%s'" % key
AttributeError: object has no attribute 'foo_issn'</computeroutput>
&prompt;<userinput>d.namespaces</userinput>
<computeroutput>{'': u'http://purl.org/rss/1.0/',
 'prism': u'http://prismstandard.org/namespaces/1.2/basic/',
 'rdf': u'http://www.w3.org/1999/02/22-rdf-syntax-ns#'}</computeroutput></screen>
</example>

<para>This is the complete list of namespaces that &feedparser; recognizes and uses to construct the variable names for data in these namespaces:</para>

<table>
<title>Recognized Namespaces</title>
<tgroup cols="2">
<thead>
<row>
<entry>Prefix</entry>
<entry>Namespace</entry>
</row>
</thead>
<tbody>
<row>
<entry><literal>admin</literal></entry>
<entry><literal>http://webns.net/mvcb/</literal></entry>
</row>
<row>
<entry><literal>ag</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/aggregation/</literal></entry>
</row>
<row>
<entry><literal>annotate</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/annotate/</literal></entry>
</row>
<row>
<entry><literal>audio</literal></entry>
<entry><literal>http://media.tangent.org/rss/1.0/</literal></entry>
</row>
<row>
<entry><literal>blogChannel</literal></entry>
<entry><literal>http://backend.userland.com/blogChannelModule</literal></entry>
</row>
<row>
<entry><literal>cc</literal></entry>
<entry><literal>http://web.resource.org/cc/</literal></entry>
</row>
<row>
<entry><literal>creativeCommons</literal></entry>
<entry><literal>http://backend.userland.com/creativeCommonsRssModule</literal></entry>
</row>
<row>
<entry><literal>co</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/company</literal></entry>
</row>
<row>
<entry><literal>content</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/content/</literal></entry>
</row>
<row>
<entry><literal>cp</literal></entry>
<entry><literal>http://my.theinfo.org/changed/1.0/rss/</literal></entry>
</row>
<row>
<entry><literal>dc</literal></entry>
<entry><literal>http://purl.org/dc/elements/1.1/</literal></entry>
</row>
<row>
<entry><literal>dcterms</literal></entry>
<entry><literal>http://purl.org/dc/terms/</literal></entry>
</row>
<row>
<entry><literal>email</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/email/</literal></entry>
</row>
<row>
<entry><literal>ev</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/event/</literal></entry>
</row>
<row>
<entry><literal>feedburner</literal></entry>
<entry><literal>http://rssnamespace.org/feedburner/ext/1.0</literal></entry>
</row>
<row>
<entry><literal>fm</literal></entry>
<entry><literal>http://freshmeat.net/rss/fm/</literal></entry>
</row>
<row>
<entry><literal>foaf</literal></entry>
<entry><literal>http://xmlns.com/foaf/0.1/</literal></entry>
</row>
<row>
<entry><literal>geo</literal></entry>
<entry><literal>http://www.w3.org/2003/01/geo/wgs84_pos#</literal></entry>
</row>
<row>
<entry><literal>icbm</literal></entry>
<entry><literal>http://postneo.com/icbm/</literal></entry>
</row>
<row>
<entry><literal>image</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/image/</literal></entry>
</row>
<row>
<entry><literal>itunes</literal></entry>
<entry><literal>http://www.itunes.com/DTDs/PodCast-1.0.dtd</literal></entry>
</row>
<row>
<entry><literal>itunes</literal></entry>
<entry><literal>http://example.com/DTDs/PodCast-1.0.dtd</literal></entry>
</row>
<row>
<entry><literal>l</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/link/</literal></entry>
</row>
<row>
<entry><literal>media</literal></entry>
<entry><literal>http://search.yahoo.com/mrss</literal></entry>
</row>
<row>
<entry><literal>pingback</literal></entry>
<entry><literal>http://madskills.com/public/xml/rss/module/pingback/</literal></entry>
</row>
<row>
<entry><literal>prism</literal></entry>
<entry><literal>http://prismstandard.org/namespaces/1.2/basic/</literal></entry>
</row>
<row>
<entry><literal>rdf</literal></entry>
<entry><literal>http://www.w3.org/1999/02/22-rdf-syntax-ns#</literal></entry>
</row>
<row>
<entry><literal>rdfs</literal></entry>
<entry><literal>http://www.w3.org/2000/01/rdf-schema#</literal></entry>
</row>
<row>
<entry><literal>ref</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/reference/</literal></entry>
</row>
<row>
<entry><literal>reqv</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/richequiv/</literal></entry>
</row>
<row>
<entry><literal>search</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/search/</literal></entry>
</row>
<row>
<entry><literal>slash</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/slash/</literal></entry>
</row>
<row>
<entry><literal>soap</literal></entry>
<entry><literal>http://schemas.xmlsoap.org/soap/envelope/</literal></entry>
</row>
<row>
<entry><literal>ss</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/servicestatus/</literal></entry>
</row>
<row>
<entry><literal>str</literal></entry>
<entry><literal>http://hacks.benhammersley.com/rss/streaming/</literal></entry>
</row>
<row>
<entry><literal>sub</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/subscription/</literal></entry>
</row>
<row>
<entry><literal>sy</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/syndication/</literal></entry>
</row>
<row>
<entry><literal>szf</literal></entry>
<entry><literal>http://schemas.pocketsoap.com/rss/myDescModule/</literal></entry>
</row>
<row>
<entry><literal>taxo</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/taxonomy/</literal></entry>
</row>
<row>
<entry><literal>thr</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/threading/</literal></entry>
</row>
<row>
<entry><literal>ti</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/textinput/</literal></entry>
</row>
<row>
<entry><literal>trackback</literal></entry>
<entry><literal>http://madskills.com/public/xml/rss/module/trackback/</literal></entry>
</row>
<row>
<entry><literal>wfw</literal></entry>
<entry><literal>http://wellformedweb.org/CommentAPI/</literal></entry>
</row>
<row>
<entry><literal>wiki</literal></entry>
<entry><literal>http://purl.org/rss/1.0/modules/wiki/</literal></entry>
</row>
<row>
<entry><literal>xhtml</literal></entry>
<entry><literal>http://www.w3.org/1999/xhtml</literal></entry>
</row>
<row>
<entry><literal>xlink</literal></entry>
<entry><literal>http://www.w3.org/1999/xlink</literal></entry>
</row>
<row>
<entry><literal>xml</literal></entry>
<entry><literal>http://www.w3.org/XML/1998/namespace</literal></entry>
</row>
</tbody>
</tgroup>
</table>

<para/>

<note>
<title/>
<para>&feedparser; treats namespaces as case-insensitive to match the behavior of certain versions of &itunes;.</para>
</note>

<caution>
<title/>
<para>Data from namespaced elements is not <link linkend='advanced.sanitization'>sanitized</link> (even if it contains &html; markup).</para>
</caution>

</section>

<section id="advanced.base">
<?dbhtml filename="resolving-relative-links.html"?>
<sectioninfo>
<abstract>
<title/>
<para>Many feed elements and attributes are &uri;s.  &feedparser; resolves relative &uri;s according to the <ulink url="&url_xmlbase;">&xmlbase;</ulink> specification.  We'll see how that works in a minute, but first let's talk about which values are treated as &uri;s.</para>
</abstract>
</sectioninfo>
<title>Relative Link Resolution</title>

<section id="advanced.base.which">
<title>Which Values Are &uri;s</title>
<para>These feed elements are treated as &uri;s, and resolved if they are relative:</para>
<itemizedlist>
<listitem><para><xref linkend="reference.feed.link"/></para></listitem>
<listitem><para><xref linkend="reference.feed.links.href"/></para></listitem>
<listitem><para><xref linkend="reference.feed.generator_detail.href"/></para></listitem>
<listitem><para><xref linkend="reference.feed.id"/></para></listitem>
<listitem><para><xref linkend="reference.feed.image.href"/></para></listitem>
<listitem><para><xref linkend="reference.feed.image.link"/></para></listitem>
<listitem><para><xref linkend="reference.feed.textinput.link"/></para></listitem>
<listitem><para><xref linkend="reference.feed.author_detail.href"/></para></listitem>
<listitem><para><xref linkend="reference.feed.publisher_detail.href"/></para></listitem>
<listitem><para><xref linkend="reference.feed.contributors.href"/></para></listitem>
<listitem><para><xref linkend="reference.feed.docs"/></para></listitem>
<listitem><para><xref linkend="reference.feed.license"/></para></listitem>
<listitem><para><xref linkend="reference.entry.link"/></para></listitem>
<listitem><para><xref linkend="reference.entry.links.href"/></para></listitem>
<listitem><para><xref linkend="reference.entry.id"/></para></listitem>
<listitem><para><xref linkend="reference.entry.author_detail.href"/></para></listitem>
<listitem><para><xref linkend="reference.entry.publisher_detail.href"/></para></listitem>
<listitem><para><xref linkend="reference.entry.contributors.href"/></para></listitem>
<listitem><para><xref linkend="reference.entry.enclosures.href"/></para></listitem>
<listitem><para><xref linkend="reference.entry.source.author_detail.href"/></para></listitem>
<listitem><para><xref linkend="reference.entry.source.contributors.href"/></para></listitem>
<listitem><para><xref linkend="reference.entry.source.links.href"/></para></listitem>
<listitem><para><xref linkend="reference.entry.comments"/></para></listitem>
<listitem><para><xref linkend="reference.entry.license"/></para></listitem>
</itemizedlist>

<para>In addition, several feed elements may contain &html; or &xhtml; markup.  Certain elements and attributes in &html; can be relative &uri;s, and &feedparser; will resolve these &uri;s according to the same rules as the feed elements listed above.</para>

<para>These feed elements may contain &html; or &xhtml; markup.  In &atom; feeds, whether these elements are treated as &html; depends on the value of the <sgmltag class="attribute">type</sgmltag> attribute.  In &rss; feeds, these values are always treated as &html;.</para>

<itemizedlist>
<listitem><para><xref linkend="reference.feed.title"/> (<xref linkend="reference.feed.title_detail.value"/>)</para></listitem>
<listitem><para><xref linkend="reference.feed.subtitle"/> (<xref linkend="reference.feed.subtitle_detail.value"/>))</para></listitem>
<listitem><para><xref linkend="reference.feed.info"/> (<xref linkend="reference.feed.info_detail.value"/>)</para></listitem>
<listitem><para><xref linkend="reference.feed.rights"/> (<xref linkend="reference.feed.rights_detail.value"/>)</para></listitem>
<listitem><para><xref linkend="reference.entry.title"/> (<xref linkend="reference.entry.title_detail.value"/>)</para></listitem>
<listitem><para><xref linkend="reference.entry.summary"/> (<xref linkend="reference.entry.summary_detail.value"/>)</para></listitem>
<listitem><para><xref linkend="reference.entry.content.value"/></para></listitem>
</itemizedlist>

<para>When any of these feed elements contains &html; or &xhtml; markup, the following &html; elements are treated as &uri;s and are resolved if they are relative:</para>

<itemizedlist>
<listitem><para><sgmltag>&lt;a href="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;applet codebase="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;area href="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;blockquote cite="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;body background="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;del cite="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;form action="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;frame longdesc="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;frame src="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;iframe longdesc="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;iframe src="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;head profile="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;img longdesc="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;img src="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;img usemap="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;input src="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;input usemap="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;ins cite="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;link href="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;object classid="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;object codebase="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;object data="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;object usemap="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;q cite="..."&gt;</sgmltag></para></listitem>
<listitem><para><sgmltag>&lt;script src="..."&gt;</sgmltag></para></listitem>
</itemizedlist>

</section>

<section id="advanced.base.how">
<title>How Relative &uri;s Are Resolved</title>
<para>&feedparser; resolves relative &uri;s according to the <ulink url="&url_xmlbase;">&xmlbase;</ulink> specification.  This defines a hierarchical inheritance system, where one element can define the base &uri; for itself and all of its child elements, using an <sgmltag class="attribute">xml:base</sgmltag> attribute.  A child element can then override its parent's base &uri; by redeclaring <sgmltag class="attribute">xml:base</sgmltag> to a different value.</para>

<para>If no <sgmltag class="attribute">xml:base</sgmltag> is specified, the feed has a default base &uri; defined in the &contentlocation; &http; header.</para>

<para>If no &contentlocation; &http; header is present, the &url; used to retrieve the feed itself is the default base &uri; for all relative links within the feed.  If the feed was retrieved via an &http; redirect (any &http; 3xx status code), then the final &url; of the feed is the default base &uri;.</para>

<para>For example, an &xmlbaseattr; on the root-level element sets the base &uri; for all &uri;s in the feed.</para>

<example>
<title>&xmlbaseattr; on the root-level element</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse("<ulink url="&url_example_base;">&url_example_base;</ulink>")</userinput>
&prompt;<userinput>d.feed.link</userinput>
<computeroutput>u'http://example.org/index.html'</computeroutput>
&prompt;<userinput>d.feed.generator_detail.href</userinput>
<computeroutput>u'http://example.org/generator/'</computeroutput></screen>
</example>

<para>An &xmlbaseattr; attribute on an <sgmltag>&lt;entry&gt;</sgmltag> overrides the &xmlbaseattr; on the parent <sgmltag>&lt;feed&gt;</sgmltag>.</para>

<example>
<title>Overriding &xmlbaseattr; on an <sgmltag>&lt;entry&gt;</sgmltag></title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse("<ulink url="&url_example_base;">&url_example_base;</ulink>")</userinput>
&prompt;<userinput>d.entries[0].link</userinput>
<computeroutput>u'http://example.org/archives/000001.html'</computeroutput>
&prompt;<userinput>d.entries[0].author_detail.href</userinput>
<computeroutput>u'http://example.org/about/'</computeroutput></screen>
</example>

<para>An &xmlbaseattr; on <sgmltag>&lt;content&gt;</sgmltag> overrides the &xmlbaseattr; on the parent <sgmltag>&lt;entry&gt;</sgmltag>.  In addition, whatever the base &uri; is for the <sgmltag>&lt;content&gt;</sgmltag> element (whether defined directly on the <sgmltag>&lt;content&gt;</sgmltag> element, or inherited from the parent element) is used as the base &uri; for the embedded &html; or &xhtml; markup within the <sgmltag>content</sgmltag>.</para>

<example>
<title>Relative links within embedded &html;</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse("<ulink url="&url_example_base;">&url_example_base;</ulink>")</userinput>
&prompt;<userinput>d.entries[0].content[0].value</userinput>
<computeroutput>u'&lt;p id="anchor1">&lt;a href="http://example.org/archives/000001.html#anchor2">skip to anchor 2&lt;/a>&lt;/p>
 &lt;p>Some content&lt;/p>
 &lt;p id="anchor2">This is anchor 2&lt;/p>'</computeroutput></screen>
</example>

<para>The &xmlbaseattr; affects other attributes in the element in which it is declared.</para>

<example>
<title>&xmlbaseattr; and sibling attributes</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse("<ulink url="&url_example_base;">&url_example_base;</ulink>")</userinput>
&prompt;<userinput>d.entries[0].links[1].rel</userinput>
<computeroutput>u'service.edit'</computeroutput>
&prompt;<userinput>d.entries[0].links[1].href</userinput>
<computeroutput>u'http://example.com/api/client/37'</computeroutput></screen>
</example>

<para>If no &xmlbaseattr; is specified on the root-level element, the default base &uri; is given in the &contentlocation; &http; header.  This can still be overridden by any child element that declares an &xmlbaseattr; attribute.</para>

<example>
<title>&contentlocation; &http; header</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse("<ulink url="&url_example_http_base;">&url_example_http_base;</ulink>")</userinput>
&prompt;<userinput>d.feed.link</userinput>
<computeroutput>u'http://example.org/index.html'</computeroutput>
&prompt;<userinput>d.entries[0].link</userinput>
<computeroutput>u'http://example.org/archives/000001.html'</computeroutput></screen>
</example>

<para>Finally, if no root-level &xmlbaseattr; is declared, and no &contentlocation; &http; header is present, the &url; of the feed itself is the default base &uri;.  Again, this can still be overridden by any element that declares an &xmlbaseattr; attribute.</para>

<example>
<title>Feed &url; as default base &uri;</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse("<ulink url="&url_example_no_base;">&url_example_no_base;</ulink>")</userinput>
&prompt;<userinput>d.feed.link</userinput>
<computeroutput>u'&url_example;index.html</computeroutput>
&prompt;<userinput>d.entries[0].link</userinput>
<computeroutput>u'http://example.org/archives/000001.html'</computeroutput></screen>
</example>

</section>

<section id="advanced.base.disable">
<title>Disabling Relative &uri;s Resolution</title>
<para>Though not recommended, it is possible to disable &feedparser;'s relative &uri; resolution by setting <literal>feedparser.RESOLVE_RELATIVE_URIS</literal> to &zero;.</para>

<example id="example.base.disable">
<title>How to disable relative &uri; resolution</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_base;">&url_example_base;</ulink>')</userinput>
&prompt;<userinput>d.entries[0].content[0].base</userinput>
<computeroutput>u'http://example.org/archives/000001.html'</computeroutput>
&prompt;<userinput>print d.entries[0].content[0].value</userinput>
<computeroutput>&lt;p id="anchor1">&lt;a href="http://example.org/archives/000001.html#anchor2">skip to anchor 2&lt;/a>&lt;/p>
      &lt;p>Some content&lt;/p>
      &lt;p id="anchor2">This is anchor 2&lt;/p></computeroutput>
&prompt;<userinput>feedparser.RESOLVE_RELATIVE_URIS = 0</userinput>
&prompt;<userinput>d2 = feedparser.parse('<ulink url="&url_example_base;">&url_example_base;</ulink>')</userinput>
&prompt;<userinput>d2.entries[0].content[0].base</userinput>
<computeroutput>u'http://example.org/archives/000001.html'</computeroutput>
&prompt;<userinput>print d2.entries[0].content[0].value</userinput>
<computeroutput>&lt;p id="anchor1">&lt;a href="#anchor2">skip to anchor 2&lt;/a>&lt;/p>
      &lt;p>Some content&lt;/p>
      &lt;p id="anchor2">This is anchor 2&lt;/p></computeroutput></screen>
</example>
</section>
</section>

<!--
<section id="advanced.lang">
<?dbhtml filename="language-detection.html"?>
<sectioninfo>
<abstract>
<title/>
<para>xxx</para>
</abstract>
</sectioninfo>
<title>Language Detection</title>
<para>xxx</para>
</section>
-->

<section id="advanced.version">
<?dbhtml filename="version-detection.html"?>
<sectioninfo>
<abstract>
<title/>
<para>&feedparser; attempts to autodetect the type and version of the feeds it parses.  There are many subtle and not-so-subtle differences between the different versions of &rss;, and applications may choose to handle different feed types in different ways.</para>
</abstract>
</sectioninfo>
<title>Feed Type and Version Detection</title>
<example id="example.version">
<title>Accessing feed version</title>
<screen>&example_atom10;
&prompt;<userinput>d.version</userinput>
<computeroutput>'atom10'</computeroutput>
&example_atom03;
&prompt;<userinput>d.version</userinput>
<computeroutput>'atom03'</computeroutput>
&example_rss20;
&prompt;<userinput>d.version</userinput>
<computeroutput>'rss20'</computeroutput>
&example_rss20dc;
&prompt;<userinput>d.version</userinput>
<computeroutput>'rss20'</computeroutput>
&example_rss10;
&prompt;<userinput>d.version</userinput>
<computeroutput>'rss10'</computeroutput></screen>
</example>
&all_versions;
</section>

<section id="advanced.encoding">
<?dbhtml filename="character-encoding.html"?>
<title>Character Encoding Detection</title>
<tip>
<title/>
<para>Feeds may be published in any character encoding.  &python; supports only a few character encodings by default.  To support the maximum number of character encodings (and be able to parse the maximum number of feeds), you should install <filename>cjkcodecs</filename> and <filename>iconv_codec</filename>.  Both are available at <ulink url="&url_cjkcodecs;"/>.</para>
</tip>

<abstract>
<title/>
<para><ulink url="&url_rfc3023;">RFC 3023</ulink> defines the interaction between &xml; and &http; as it relates to character encoding.  &xml; and &http; have different ways of specifying character encoding and different defaults in case no encoding is specified, and determining which value takes precedence depends on a variety of factors.</para>
</abstract>

<section id="advanced.encoding.intro">
<title>Introduction to Character Encoding</title>
<para>In &xml;, the character encoding is optional and may be given in the &xml; declaration in the first line of the document, like this:</para>

<informalexample>
<programlisting>&lt;xml version="1.0" encoding="utf-8"?></programlisting>
</informalexample>

<para>If no encoding is given, &xml; supports the use of a Byte Order Mark to identify the document as some flavor of UTF-32, UTF-16, or UTF-8.  <ulink url="&url_sectionf;">Section F of the &xml; specification</ulink> outlines the process for determining the character encoding based on unique properties of the Byte Order Mark in the first two to four bytes of the document.</para>

<para>If no encoding is specified and no Byte Order Mark is present, &xml; defaults to UTF-8.</para>

<para>&http; uses &mime; to define a method of specifying the character encoding, as part of the &contenttype; &http; header, which looks like this:</para>

<informalexample>
<programlisting>Content-Type: text/html; charset="utf-8"</programlisting>
</informalexample>

<para>If no charset is specified, &http; defaults to <literal>iso-8859-1</literal>, but only for <literal>text/*</literal> media types. For other media types, the default encoding is undefined, which is where &rfc; 3023 comes in.</para>

<para>According to &rfc; 3023, if the media type given in the &contenttype; &http; header is <literal>application/xml</literal>, <literal>application/xml-dtd</literal>, <literal>application/xml-external-parsed-entity</literal>, or any one of the subtypes of <literal>application/xml</literal> such as <literal>application/atom+xml</literal> or <literal>application/rss+xml</literal> or even <literal>application/rdf+xml</literal>, then the encoding is</para>

<orderedlist>
<listitem><para>the encoding given in the <varname>charset</varname> parameter of the &contenttype; &http; header, or</para></listitem>
<listitem><para>the encoding given in the <sgmltag class="attribute">encoding</sgmltag> attribute of the &xml; declaration within the document, or</para></listitem>
<listitem><para><literal>utf-8</literal>.</para></listitem>
</orderedlist>

<para>On the other hand, if the media type given in the &contenttype; &http; header is <literal>text/xml</literal>, <literal>text/xml-external-parsed-entity</literal>, or a subtype like <literal>text/AnythingAtAll+xml</literal>, then the encoding attribute of the &xml; declaration within the document is ignored completely, and the encoding is</para>

<orderedlist>
<listitem><para>the encoding given in the charset parameter of the &contenttype; &http; header, or</para></listitem>
<listitem><para><literal>us-ascii</literal>.</para></listitem>
</orderedlist>
</section>

<section id="advanced.encoding.override">
<title>Handling Incorrectly-Declared Encodings</title>

<para>&feedparser; initially uses the rules specified in &rfc; 3023 to determine the character encoding of the feed.  If parsing succeeds, then that's that.  If parsing fails, &feedparser; sets the <varname>bozo</varname> bit to &one; and sets <varname>bozo_exception</varname> to <constant>feedparser.CharacterEncodingOverride</constant>.  Then it tries to reparse the feed with the following character encodings:</para>

<orderedlist>
<listitem><para>the encoding specified in the &xml; declaration</para></listitem>
<listitem><para>the encoding sniffed from the first four bytes of the document (as per <ulink url="&url_sectionf;">Section F</ulink>)</para></listitem>
<listitem><para>the encoding auto-detected by the &chardet;, if installed</para></listitem>
<listitem><para><literal>utf-8</literal></para></listitem>
<listitem><para><literal>windows-1252</literal></para></listitem>
</orderedlist>

<para>If the character encoding can not be determined, &feedparser; sets the <varname>bozo</varname> bit to &one; and sets <varname>bozo_exception</varname> to <constant>feedparser.CharacterEncodingUnknown</constant>.  In this case, parsed values will be strings, not Unicode strings.</para>
</section>

<section id="advanced.encoding.nonxml">
<title>Handling Incorrectly-Declared Media Types</title>

<para>&rfc; 3023 only applies when the feed is served over &http; with a &contenttype; that declares the feed to be some kind of &xml;.  However, some web servers are severely misconfigured and serve feeds with a &contenttype; of <literal>text/plain</literal>, <literal>application/octet-stream</literal>, or some completely bogus media type.</para>

<para>&feedparser; will attempt to parse such feeds, but it will set the <varname>bozo</varname> bit to &one; and set <varname>bozo_exception</varname> to <constant>feedparser.NonXMLContentType</constant>.</para>

<itemizedlist role="furtherreading">
<title>Elsewhere</title>
<listitem><para><ulink url="&url_rfc3023;">RFC 3023</ulink></para></listitem>
<listitem><para><ulink url="&url_sectionf;">Section F of the &xml; specification</ulink></para></listitem>
<listitem><para><ulink url="&url_wellformedness;">On the well-formedness of &xml; documents served as <literal>text/plain</literal></ulink></para></listitem>
<listitem><para><ulink url="&url_cjkcodecs;">CJKCodecs and iconv_codec</ulink></para></listitem>
</itemizedlist>

</section>

</section>

<section id="advanced.bozo">
<?dbhtml filename="bozo.html"?>
<sectioninfo>
<abstract>
<title/>
<para>&feedparser; can parse feeds whether they are well-formed &xml; or not.  However, since some applications may wish to reject or warn users about non-well-formed feeds, &feedparser; sets the <varname>bozo</varname> bit when it detects that a feed is not well-formed.  Thanks to <ulink url="&url_bozo;">Tim Bray</ulink> for suggesting this terminology.</para>
</abstract>
</sectioninfo>
<title>Bozo Detection</title>
<example id="example.bozo">
<title>Detecting a non-well-formed feed</title>
<screen>
&example_atom10;
&prompt;<userinput>d.bozo</userinput>
<computeroutput>0</computeroutput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_feedparser;tests/illformed/rss/aaa_illformed.xml"/>')</userinput>
&prompt;<userinput>d.bozo</userinput>
<computeroutput>1</computeroutput>
&prompt;<userinput>d.bozo_exception</userinput>
<computeroutput>&lt;xml.sax._exceptions.SAXParseException instance at 0x00BAAA08></computeroutput>
&prompt;<userinput>exc = d.bozo_exception</userinput>
&prompt;<userinput>exc.getMessage()</userinput>
<computeroutput>"expected '>'\n"</computeroutput>
&prompt;<userinput>exc.getLineNumber()</userinput>
<computeroutput>6</computeroutput></screen>
</example>
<para>There are many reasons an &xml; document could be non-well-formed besides this example (incomplete end tags)  See <xref linkend="advanced.encoding"/> for some other ways to trip the bozo bit.</para>
</section>

</chapter>

<chapter id="http">
<?dbhtml filename="http.html"?>
<title>&http; Features</title>
<section id="http.etag">
<?dbhtml filename="http-etag.html"?>
<sectioninfo>
<abstract>
<title/>
<para>ETags and &lastmodified; headers are two ways that feed publishers can save bandwidth, but they only work if clients take advantage of them.  &feedparser; gives you the ability to take advantage of these features, but you must use them properly.</para>
</abstract>
</sectioninfo>
<title>&etag; and &lastmodified; Headers</title>
<para>The basic concept is that a feed publisher may provide a special &http; header, called an &etag;, when it publishes a feed.  You should send this &etag; back to the server on subsequent requests.  If the feed has not changed since the last time you requested it, the server will return a special &http; status code (<constant>304</constant>) and no feed data.</para>
<example id="example.etags">
<title>Using ETags to reduce bandwidth</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>d.etag</userinput>
<computeroutput>'"6c132-941-ad7e3080"'</computeroutput>
&prompt;<userinput>d2 = feedparser.parse('<ulink url="&url_example_atom10;"/>', etag=d.etag)</userinput>
&prompt;<userinput>d2.status</userinput>
<computeroutput>304</computeroutput>
&prompt;<userinput>d2.feed</userinput>
<computeroutput>{}</computeroutput>
&prompt;<userinput>d2.entries</userinput>
<computeroutput>[]</computeroutput>
&prompt;<userinput>d2.debug_message</userinput>
<computeroutput>'The feed has not changed since you last checked, so
the server sent no data.  This is a feature, not a bug!'</computeroutput></screen>
</example>

<para>There is a related concept which accomplishes the same thing, but slightly differently.  In this case, the server publishes the last-modified date of the feed in the &http; header.  You can send this back to the server on subsequent requests, and if the feed has not changed, the server will return &http; status code <constant>304</constant> and no feed data.</para>

<example id="example.lastmodified">
<title>Using Last-Modified headers to reduce bandwidth</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom10;
&prompt;<userinput>d.modified</userinput>
<computeroutput>(2004, 6, 11, 23, 0, 34, 4, 163, 0)</computeroutput>
&prompt;<userinput>d2 = feedparser.parse('<ulink url="&url_example_atom10;"/>', modified=d.modified)</userinput>
&prompt;<userinput>d2.status</userinput>
<computeroutput>304</computeroutput>
&prompt;<userinput>d2.feed</userinput>
<computeroutput>{}</computeroutput>
&prompt;<userinput>d2.entries</userinput>
<computeroutput>[]</computeroutput>
&prompt;<userinput>d2.debug_message</userinput>
<computeroutput>'The feed has not changed since you last checked, so
the server sent no data.  This is a feature, not a bug!'</computeroutput></screen>
</example>

<para>Clients should support both &etag; and &lastmodified; headers, as some servers support one but not the other.</para>

<important>
<title/>
<para>If you do not support &etag; and &lastmodified; headers, you will repeatedly download feeds that have not changed.  This wastes your bandwidth and the publisher's bandwidth, and the publisher may ban you from accessing their server.</para>
</important>

<itemizedlist role="furtherreading">
<title>Elsewhere</title>
<listitem><para><ulink url="&url_conditionalget;">&http; Conditional Get For &rss; Hackers</ulink></para></listitem>
<listitem><para><ulink url="&url_httpwebservices;">&http; Web Services</ulink></para></listitem>
</itemizedlist>
</section>

<section id="http.useragent">
<?dbhtml filename="http-useragent.html"?>
<sectioninfo>
<abstract>
<title/>
<para>&feedparser; sends a default &useragent; string when it requests a feed from a web server.</para>
</abstract>
</sectioninfo>
<title>&useragent; and &referrer; Headers</title>

<informalexample>
<para>The default &useragent; string looks like this:</para>
<programlisting>UniversalFeedParser/&feedparser_version; +http://feedparser.org/</programlisting>
</informalexample>

<para>If you are embedding &feedparser; in a larger application, you should change the &useragent; to your application name and &url;.</para>

<example id="example.useragent">
<title>Customizing the &useragent;</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_atom10;"/>', \</userinput>
<prompt>... </prompt>    <userinput>    agent='MyApp/1.0 +http://example.com/')</userinput></screen>
</example>

<para>You can also set the &useragent; once, globally, and then call the <function>parse</function> function normally.</para>

<example id="example.useragent.permanent">
<title>Customizing the &useragent; permanently</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>feedparser.USER_AGENT = "MyApp/1.0 +http://example.com/"</userinput>
&example_atom10;</screen>
</example>

<para>&feedparser; also lets you set the referrer when you download a feed from a web server.  This is discouraged, because it is a violation of <ulink url="&url_referrer_rfc2616;">RFC 2616</ulink>.  The default behavior is to send a blank referrer, and you should never need to override this.</para>

<example id="example.referrer">
<title>Customizing the referrer</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_atom10;"/>', \</userinput>
<prompt>... </prompt>    <userinput>referrer='http://example.com/')</userinput></screen>
</example>

</section>

<section id="http.redirect">
<?dbhtml filename="http-redirect.html"?>
<sectioninfo>
<abstract>
<title/>
<para>When you download a feed from a remote web server, &feedparser; exposes the &http; status code.  You need to understand the different codes, including permanent and temporary redirects, and feeds that have been marked <quote>gone</quote>.</para>
</abstract>
</sectioninfo>
<title>&http; Redirects</title>
<para>When a feed has temporarily moved to a new location, the web server will return a <constant>302</constant> status code.  &feedparser; makes this available in <varname>d.status</varname>.</para>
<para>There is nothing special you need to do with temporary redirects; by the time you learn about it, &feedparser; has already followed the redirect to the new location (available in <varname>d.href</varname>), downloaded the feed, and parsed it.  Since the redirect is temporary, you should continue requesting the original &url; the next time you want to parse the feed.</para>

<example id="example.redirect.temporary">
<title>Noticing temporary redirects</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_temporary;"/>')</userinput>
&prompt;<userinput>d.status</userinput>
<computeroutput>302</computeroutput>
&prompt;<userinput>d.href</userinput>
<computeroutput>'&url_example_atom10;'</computeroutput>
&prompt;<userinput>d.feed.title</userinput>
<computeroutput>u'Sample Feed'</computeroutput></screen>
</example>

<para>When a feed has permanently moved to a new location, the web server will return a <constant>301</constant> status code.  Again, &feedparser; makes this available in <varname>d.status</varname>.</para>

<para>If you are polling a feed on a regular basis, it is very important to check the status code (<varname>d.status</varname>) every time you download.  If the feed has been permanently redirected, you should update your database or configuration file with the new address (<varname>d.href</varname>).  Repeatedly requesting the original address of a feed that has been permanently redirected is very rude, and may get you banned from the server.</para>

<example id="example.redirect.permanent">
<title>Noticing permanent redirects</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_permanent;"/>')</userinput>
&prompt;<userinput>d.status</userinput>
<computeroutput>301</computeroutput>
&prompt;<userinput>d.href</userinput>
<computeroutput>'&url_example_atom10;'</computeroutput>
&prompt;<userinput>d.feed.title</userinput>
<computeroutput>u'Sample Feed'</computeroutput></screen>
</example>

<para>When a feed has been permanently deleted, the web server will return a <constant>410</constant> status code.  If you ever receive a <constant>410</constant>, you should stop polling the feed and inform the end user that the feed is gone for good.</para>

<para>Repeatedly requesting a feed that has been marked as <quote>gone</quote> is very rude, and may get you banned from the server.</para>

<example id="example.redirect.gone">
<title>Noticing feeds marked <quote>gone</quote></title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_gone;"/>')</userinput>
&prompt;<userinput>d.status</userinput>
<computeroutput>410</computeroutput></screen>
</example>

</section>

<section id="http.auth">
<?dbhtml filename="http-authentication.html"?>
<sectioninfo>
<abstract>
<title/>
<para>&feedparser; supports downloading and parsing password-protected feeds that are protected by &http; authentication.  Both basic and digest authentication are supported.</para>
</abstract>
</sectioninfo>
<title>Password-Protected Feeds</title>
<para>The easiest way is to embed the username and password in the feed &url; itself.</para>
<example id="example.auth.inline">
<title>Downloading a feed protected by basic authentication (the easy way)</title>
<para>In this example, the username is <literal>test</literal> and the password is <literal>basic</literal>.</para>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_basic_auth;">&url_example_basic_auth_inline;</ulink>')</userinput>
&prompt;<userinput>d.feed.title</userinput>
<computeroutput>u'Sample Feed'</computeroutput></screen>
</example>
<para>The same technique works for digest authentication.  (Technically, &feedparser; will attempt basic authentication first, but if that fails and the server indicates that it requires digest authentication, &feedparser; will automatically re-request the feed with the appropriate digest authentication headers.  <emphasis>This means that this technique will send your password to the server in an easily decryptable form.</emphasis>)</para>
<example id="example.auth.inline.digest">
<title>Downloading a feed protected by digest authentication (the easy but horribly insecure way)</title>
<para>In this example, the username is <literal>test</literal> and the password is <literal>digest</literal>.</para>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_digest_auth;">&url_example_digest_auth_inline;</ulink>')</userinput>
&prompt;<userinput>d.feed.title</userinput>
<computeroutput>u'Sample Feed'</computeroutput></screen>
</example>

<para>You can also construct a <classname>HTTPBasicAuthHandler</classname> that contains the password information, then pass that as a handler to the <function>parse</function> function.  <classname>HTTPBasicAuthHandler</classname> is part of the standard <ulink url="&url_urllib2;">&urllib2;</ulink> module.</para>
<example id="example.auth.basic">
<title>Downloading a feed protected by &http; basic authentication (the hard way)</title>
<programlisting language="python">import urllib2, feedparser

# Construct the authentication handler
auth = urllib2.HTTPBasicAuthHandler()

# Add password information: realm, host, user, password.
# A single handler can contain passwords for multiple sites;
# urllib2 will sort out which passwords get sent to which sites
# based on the realm and host of the URL you're retrieving
auth.add_password('BasicTest', '&feedparser_domain;', 'test', 'basic')

# Pass the authentication handler to the feed parser.
# handlers is a list because there might be more than one
# type of handler (urllib2 defines lots of different ones,
# and you can build your own)
d = feedparser.parse('<ulink url="&url_example_basic_auth;">&url_example_basic_auth;</ulink>', \
                     handlers=[auth])</programlisting>
</example>

<para>Digest authentication is handled in much the same way, by constructing an <classname>HTTPDigestAuthHandler</classname> and populating it with the necessary realm, host, user, and password information.  This is more secure than <link linkend="example.auth.inline.digest">stuffing the username and password in the URL</link>, since the password will be encrypted before being sent to the server.</para>

<example id="example.auth.digest">
<title>Downloading a feed protected by &http; digest authentication (the secure way)</title>
<programlisting language="python">import urllib2, feedparser

auth = urllib2.HTTPDigestAuthHandler()
auth.add_password('DigestTest', '&feedparser_domain;', 'test', 'digest')
d = feedparser.parse('<ulink url="&url_example_digest_auth;">&url_example_digest_auth;</ulink>', \
                     handlers=[auth])</programlisting>
</example>

<caution id="caution.urllib2.buggy.as.all.hell">
<title/>
<para>Prior to &python; 2.3.3, &urllib2; did not properly support digest authentication.  Mac OS X 10.3 <quote>Panther</quote> ships with &python; 2.3.  Users of previous versions of Mac OS X will need to upgrade to the latest version of &python; in order to use digest authentication.</para>
</caution>

<para>The examples so far have assumed that you know in advance that the feed is password-protected.  But what if you don't know?</para>

<para>If you try to download a password-protected feed without sending all the proper password information, the server will return an &http; status code <constant>401</constant>.  &feedparser; makes this status code available in <varname>d.status</varname>.</para>

<para>Details on the authentication scheme are in <varname>d.headers['www-authenticate']</varname>.  &feedparser; does not do any further parsing on this field; you will need to parse it yourself.  Everything before the first space is the type of authentication (probably <constant>Basic</constant> or <constant>Digest</constant>), which controls which type of handler you'll need to construct.  The realm name is given as <literal>realm="foo"</literal> -- so <literal>foo</literal> would be your first argument to <methodname>auth.add_password</methodname>.  Other information in the <literal>www-authenticate</literal> header is probably safe to ignore; the &urllib2; module will handle it for you.</para>

<example id="example.auth.required">
<title>Determining that a feed is password-protected</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_digest_auth;">&url_example_digest_auth;</ulink>')</userinput>
&prompt;<userinput>d.status</userinput>
<computeroutput>401</computeroutput>
&prompt;<userinput>d.headers['www-authenticate']</userinput>
<computeroutput>'Basic realm="Use test/basic"'</computeroutput>
&prompt;<userinput>d = feedparser.parse('<ulink url="&url_example_digest_auth;">&url_example_digest_auth;</ulink>')</userinput>
&prompt;<userinput>d.status</userinput>
<computeroutput>401</computeroutput>
&prompt;<userinput>d.headers['www-authenticate']</userinput>
<computeroutput>'Digest realm="DigestTest",
 nonce="+LV/uLLdAwA=5d77397291261b9ef256b034e19bcb94f5b7992a",
 algorithm=MD5,
 qop="auth"'</computeroutput></screen>
</example>

</section>

<section id="http.other">
<?dbhtml filename="http-other.html"?>
<sectioninfo>
<abstract>
<title/>
<para>When you download a feed from a remote web server, &feedparser; exposes the complete set of &http; headers as a dictionary.</para>
</abstract>
</sectioninfo>
<title>Other &http; Headers</title>

<example id="example.http.headers">
<title>Accessing other &http; headers</title>
<screen>&prompt;<userinput>import feedparser</userinput>
&example_atom03;
&prompt;<userinput>d.headers</userinput>
<computeroutput>{'date': 'Fri, 11 Jun 2004 23:57:50 GMT',
 'server': 'Apache/2.0.49 (Debian GNU/Linux)',
 'last-modified': 'Fri, 11 Jun 2004 23:00:34 GMT',
 'etag': '"6c132-941-ad7e3080"',
 'accept-ranges': 'bytes',
 'vary': 'Accept-Encoding,User-Agent',
 'content-encoding': 'gzip',
 'content-length': '883',
 'connection': 'close',
 'content-type': 'application/xml'}</computeroutput></screen>
</example>

</section>
</chapter>

<chapter id="commandline">
<?dbhtml filename="command-line.html"?>
<title>Command Line</title>

<section id="commandline.basic">
<?dbhtml filename="command-line-basic.html"?>
<sectioninfo>
<abstract>
<title/>
<para>TODO</para>
</abstract>
</sectioninfo>
<title>Basic Command Line Usage</title>
<para>TODO</para>

</section>

<section id="commandline.arguments">
<?dbhtml filename="command-line-arguments.html"?>
<sectioninfo>
<abstract>
<title/>
<para>TODO</para>
</abstract>
</sectioninfo>
<title>Optional Arguments</title>
<para>TODO</para>

<example id="example.commandline.help">
<title>Available options</title>
<screen><prompt>mark@atlantis$ </prompt><userinput>./feedparser.py --help</userinput>
<computeroutput>usage: feedparser.py [options] url_or_filename_or_-

options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -A AGENT, --user-agent=AGENT
                        User-Agent for HTTP URLs
  -e URL, --referer=URL, --referrer=URL
                        Referrer for HTTP URLs
  -t TAG, --etag=TAG    ETag/If-None-Match for HTTP URLs
  -m DATE, --last-modified=DATE
                        Last-modified/If-Modified-Since for HTTP URLs (any supported date format)
  -f FORMAT, --format=FORMAT
                        output results in FORMAT (text, pprint)
  -v, --verbose         write debugging information to stderr
</computeroutput></screen>
</example>

</section>

<section id="commandline.outputformats">
<?dbhtml filename="command-line-output-formats.html"?>
<sectioninfo>
<abstract>
<title/>
<para>TODO</para>
</abstract>
</sectioninfo>
<title>Output Formats</title>
<para>TODO</para>
</section>

</chapter>

<chapter id="annotated">
<?dbhtml filename="annotated-examples.html"?>
<title>Annotated Examples</title>

<section id="annotated.atom10">
<?dbhtml filename="annotated-atom10.html"?>
<sectioninfo>
<abstract>
<title/>
<para>This is a sample &atom; 1.0 feed, annotated with links that show how each value can be accessed once the feed is parsed.</para>
</abstract>
</sectioninfo>
<title>&atom; 1.0</title>
&feed_disclaimer;
<example id="example.annotated.atom10">
<title>Annotated &atom; 1.0 feed</title>
<programlisting>
&lt;?xml version="1.0" encoding="<link linkend="reference.encoding">utf-8</link>"?>
&lt;feed xmlns="<link linkend="reference.version">http://www.w3.org/2005/Atom</link>"
      xml:base="<link linkend="advanced.base">http://example.org/</link>"
      xml:lang="<link linkend="reference.feed.title_detail.language">en</link>">
  &lt;title type="<link linkend="reference.feed.title_detail.type">text</link>">
    <link linkend="reference.feed.title">Sample Feed</link>
  &lt;/title>
  &lt;subtitle type="<link linkend="reference.feed.subtitle_detail.type">html</link>">
    <link linkend="reference.feed.subtitle">For documentation &amp;lt;em&amp;gt;only&amp;lt;/em&amp;gt;</link>
  &lt;/subtitle>
  &lt;link rel="<link linkend="reference.feed.links.rel">alternate</link>"
        type="<link linkend="reference.feed.links.type">html</link>"
        href="<link linkend="reference.feed.links.href">/</link>"/>
  &lt;link rel="<link linkend="reference.feed.links.rel">self</link>"
        type="<link linkend="reference.feed.links.type">application/atom+xml</link>"
        href="<link linkend="reference.feed.links.href">http://www.example.org/atom10.xml</link>"/>
  &lt;rights type="<link linkend="reference.feed.rights_detail.type">html</link>">
        <link linkend="reference.feed.rights">&amp;lt;p>Copyright 2005, Mark Pilgrim&amp;lt;/p></link>
  &lt;/rights>
  &lt;generator uri="<link linkend="reference.feed.generator_detail.href">http://example.org/generator/</link>"
             version="<link linkend="reference.feed.generator_detail.version">4.0</link>">
    <link linkend="reference.feed.generator">Sample Toolkit</link>
  &lt;/generator>
  &lt;id><link linkend="reference.feed.id">tag:feedparser.org,2005-11-09:/docs/examples/atom10.xml</link>&lt;/id>
  &lt;updated><link linkend="reference.feed.updated">2005-11-09T11:56:34Z</link>&lt;/updated>
  &lt;entry>
    &lt;title><link linkend="reference.entry.title">First entry title</link>&lt;/title>
    &lt;link rel="<link linkend="reference.entry.links.type">alternate</link>"
          href="<link linkend="reference.entry.links.href">/entry/3</link>"/>
    &lt;link rel="<link linkend="reference.entry.links.type">related</link>"
          type="<link linkend="reference.entry.links.type">text/html</link>"
          href="<link linkend="reference.entry.links.href">http://search.example.com/</link>"/>
    &lt;link rel="<link linkend="reference.entry.links.type">via</link>"
          type="<link linkend="reference.entry.links.type">text/html</link>"
          href="<link linkend="reference.entry.links.href">http://toby.example.com/examples/atom10</link>"/>
    &lt;link rel="<link linkend="reference.entry.enclosures">enclosure</link>"
          type="<link linkend="reference.entry.enclosures.type">video/mpeg4</link>"
          href="<link linkend="reference.entry.enclosures.href">http://www.example.com/movie.mp4</link>"
          length="<link linkend="reference.entry.enclosures.length">42301</link>"/>
    &lt;id><link linkend="reference.entry.id">tag:feedparser.org,2005-11-09:/docs/examples/atom10.xml:3</link>&lt;/id>
    &lt;published><link linkend="reference.entry.published">2005-11-09T00:23:47Z</link>&lt;/published>
    &lt;updated><link linkend="reference.entry.updated">2005-11-09T11:56:34Z</link>&lt;/updated>
    &lt;author>
      &lt;name><link linkend="reference.entry.author_detail.name">Mark Pilgrim</link>&lt;/name>
      &lt;uri><link linkend="reference.entry.author_detail.href">http://diveintomark.org/</link>&lt;/uri>
      &lt;email><link linkend="reference.entry.author_detail.email">mark@example.org</link>&lt;/email>
    &lt;/author>
    &lt;contributor>
      &lt;name><link linkend="reference.entry.contributors.name">Joe</link>&lt;/name>
      &lt;url><link linkend="reference.entry.contributors.href">http://example.org/joe/</link>&lt;/url>
      &lt;email><link linkend="reference.entry.contributors.email">joe@example.org</link>&lt;/email>
    &lt;/contributor>
    &lt;contributor>
      &lt;name><link linkend="reference.entry.contributors.name">Sam</link>&lt;/name>
      &lt;url><link linkend="reference.entry.contributors.href">http://example.org/sam/</link>&lt;/url>
      &lt;email><link linkend="reference.entry.contributors.email">sam@example.org</link>&lt;/email>
    &lt;/contributor>
    &lt;summary type="<link linkend="reference.entry.summary_detail.type">text</link>">
      <link linkend="reference.entry.summary">Watch out for nasty tricks</link>
    &lt;/summary>
    &lt;content type="<link linkend="reference.entry.content.type">xhtml</link>"
              xml:base="<link linkend="reference.entry.content.base">http://example.org/entry/3</link>"
              xml:lang="<link linkend="reference.entry.content.language">en-US</link>">
<link linkend="reference.entry.content.value">      &lt;div xmlns="http://www.w3.org/1999/xhtml">Watch out for
      &lt;span style="background-image: url(javascript:window.location='http://example.org/')">
      nasty tricks&lt;/span>&lt;/div></link>
    &lt;/content>
  &lt;/entry>
&lt;/feed></programlisting>
</example>
</section>

<section id="annotated.atom03">
<?dbhtml filename="annotated-atom03.html"?>
<sectioninfo>
<abstract>
<title/>
<para>This is a sample &atom; 0.3 feed, annotated with links that show how each value can be accessed once the feed is parsed.</para>
</abstract>
</sectioninfo>
<title>&atom; 0.3</title>
&feed_disclaimer;
<example id="example.annotated.atom03">
<title>Annotated &atom; 0.3 feed</title>
<programlisting>&lt;?xml version="1.0" encoding="<link linkend="reference.encoding">utf-8</link>"?>
&lt;feed version="<link linkend="reference.version">0.3</link>"
      xmlns="http://purl.org/atom/ns#"
      xml:base="http://example.org/"
      xml:lang="en">
  &lt;title type="<link linkend="reference.feed.title_detail.type">text/plain</link>"
         mode="escaped">
    <link linkend="reference.feed.title">Sample Feed</link>
  &lt;/title>
  &lt;tagline type="<link linkend="reference.feed.subtitle_detail.type">text/html</link>"
           mode="escaped">
    <link linkend="reference.feed.subtitle">For documentation &amp;lt;em&amp;gt;only&amp;lt;/em&amp;gt;</link>
  &lt;/tagline>
  &lt;link rel="<link linkend="reference.feed.links.rel">alternate</link>"
        type="<link linkend="reference.feed.links.type">text/html</link>"
        href="<link linkend="reference.feed.links.href">/</link>"/>
  &lt;copyright type="<link linkend="reference.feed.rights_detail.type">text/html</link>"
             mode="escaped">
    <link linkend="reference.feed.rights">&amp;lt;p>Copyright 2004, Mark Pilgrim&amp;lt;/p>&amp;lt;</link>
  &lt;/copyright>
  &lt;generator url="<link linkend="reference.feed.generator_detail.href">http://example.org/generator/</link>"
             version="<link linkend="reference.feed.generator_detail.version">3.0</link>">
    <link linkend="reference.feed.generator">Sample Toolkit</link>
  &lt;/generator>
  &lt;id><link linkend="reference.feed.id">tag:feedparser.org,2004-04-20:/docs/examples/atom03.xml</link>&lt;/id>
  &lt;modified><link linkend="reference.feed.updated">2004-04-20T11:56:34Z</link>&lt;/modified>
  &lt;info type="<link linkend="reference.feed.info_detail.type">application/xhtml+xml</link>"
        mode="xml">
    <link linkend="reference.feed.info">&lt;div xmlns="http://www.w3.org/1999/xhtml">&lt;p>This is an Atom syndication feed.&lt;/p>&lt;/div></link>
  &lt;/info>
  &lt;entry>
    &lt;title><link linkend="reference.entry.title">First entry title</link>&lt;/title>
    &lt;link rel="<link linkend="reference.entry.links.rel">alternate</link>"
          type="<link linkend="reference.entry.links.type">text/html</link>"
          href="<link linkend="reference.entry.links.href">/entry/3</link>"/>
    &lt;link rel="<link linkend="reference.entry.links.rel">service.edit</link>"
          type="<link linkend="reference.entry.links.type">application/atom+xml</link>"
          title="<link linkend="reference.entry.links.title">Atom API entrypoint to edit this entry</link>"
          href="<link linkend="reference.entry.links.href">/api/edit/3</link>"/>
    &lt;link rel="<link linkend="reference.entry.links.rel">service.post</link>"
          type="<link linkend="reference.entry.links.type">application/atom+xml</link>"
          title="<link linkend="reference.entry.links.title">Atom API entrypoint to add comments to this entry</link>"
          href="<link linkend="reference.entry.links.href">/api/comment/3</link>"/>
    &lt;id><link linkend="reference.entry.id">tag:feedparser.org,2004-04-20:/docs/examples/atom03.xml:3</link>&lt;/id>
    &lt;created><link linkend="reference.entry.created">2004-04-19T07:45:00Z</link>&lt;/created>
    &lt;issued><link linkend="reference.entry.published">2004-04-20T00:23:47Z</link>&lt;/issued>
    &lt;modified><link linkend="reference.entry.updated">2004-04-20T11:56:34Z</link>&lt;/modified>
    &lt;author>
      &lt;name><link linkend="reference.entry.author_detail.name">Mark Pilgrim</link>&lt;/name>
      &lt;url><link linkend="reference.entry.author_detail.href">http://diveintomark.org/</link>&lt;/url>
      &lt;email><link linkend="reference.entry.author_detail.email">mark@example.org</link>&lt;/email>
    &lt;/author>
    &lt;contributor>
      &lt;name><link linkend="reference.entry.contributors.name">Joe</link>&lt;/name>
      &lt;url><link linkend="reference.entry.contributors.href">http://example.org/joe/</link>&lt;/url>
      &lt;email><link linkend="reference.entry.contributors.email">joe@example.org</link>&lt;/email>
    &lt;/contributor>
    &lt;contributor>
      &lt;name><link linkend="reference.entry.contributors.name">Sam</link>&lt;/name>
      &lt;url><link linkend="reference.entry.contributors.href">http://example.org/sam/</link>&lt;/url>
      &lt;email><link linkend="reference.entry.contributors.email">sam@example.org</link>&lt;/email>
    &lt;/contributor>
    &lt;summary type="<link linkend="reference.entry.summary_detail.type">text/plain</link>"
             mode="escaped">
      <link linkend="reference.entry.summary">Watch out for nasty tricks</link>
    &lt;/summary>
    &lt;content type="<link linkend="reference.entry.content.type">application/xhtml+xml</link>"
              mode="xml"
              xml:base="<link linkend="reference.entry.content.base">http://example.org/entry/3</link>"
              xml:lang="<link linkend="reference.entry.content.language">en-US</link>">
<link linkend="reference.entry.content.value">      &lt;div xmlns="http://www.w3.org/1999/xhtml">Watch out for
      &lt;span style="background-image: url(javascript:window.location='http://example.org/')">
      nasty tricks&lt;/span>&lt;/div></link>
    &lt;/content>
  &lt;/entry>
&lt;/feed></programlisting>
</example>
</section>

<section id="annotated.rss20">
<?dbhtml filename="annotated-rss20.html"?>
<sectioninfo>
<abstract>
<title/>
<para>This is a sample &rss; 2.0 feed, annotated with links that show how each value can be accessed once the feed is parsed.</para>
</abstract>
</sectioninfo>
<title>&rss; 2.0</title>
&feed_disclaimer;
<example id="example.annotated.rss20">
<title>Annotated &rss; 2.0 feed</title>
<programlisting>&lt;?xml version="1.0" encoding="<link linkend="reference.encoding">utf-8</link>"?>
&lt;rss version="<link linkend="reference.version">2.0</link>">
&lt;channel>
  &lt;title><link linkend="reference.feed.title">Sample Feed</link>&lt;/title>
  &lt;description><link linkend="reference.feed.subtitle">For documentation &amp;lt;em&amp;gt;only&amp;lt;/em&amp;gt;</link>&lt;/description>
  &lt;link><link linkend="reference.feed.link">http://example.org/</link>&lt;/link>
  &lt;language><link linkend="reference.feed.language">en</link>&lt;/language>
  &lt;copyright><link linkend="reference.feed.rights">Copyright 2004, Mark Pilgrim</link>&lt;/copyright>
  &lt;managingEditor><link linkend="reference.feed.author">editor@example.org</link>&lt;/managingEditor>
  &lt;webMaster><link linkend="reference.feed.publisher">webmaster@example.org</link>&lt;/webMaster>
  &lt;pubDate><link linkend="reference.feed.updated">Sat, 07 Sep 2002 0:00:01 GMT</link>&lt;/pubDate>
  &lt;category><link linkend="reference.feed.tags.term">Examples</link>&lt;/category>
  &lt;generator><link linkend="reference.feed.generator">Sample Toolkit</link>&lt;/generator>
  &lt;docs><link linkend="reference.feed.docs">http://feedvalidator.org/docs/rss2.html</link>&lt;/docs>
  &lt;cloud domain="<link linkend="reference.feed.cloud.domain">rpc.example.com</link>"
         port="<link linkend="reference.feed.cloud.port">80</link>"
         path="<link linkend="reference.feed.cloud.path">/RPC2</link>"
         registerProcedure="<link linkend="reference.feed.cloud.registerProcedure">pingMe</link>"
         protocol="<link linkend="reference.feed.cloud.protocol">soap</link>"/>
  &lt;ttl><link linkend="reference.feed.ttl">60</link>&lt;/ttl>
  &lt;image>
    &lt;url><link linkend="reference.feed.image.href">http://example.org/banner.png</link>&lt;/url>
    &lt;title><link linkend="reference.feed.image.title">Example banner</link>&lt;/title>
    &lt;link><link linkend="reference.feed.image.link">http://example.org/</link>&lt;/link>
    &lt;width><link linkend="reference.feed.image.width">80</link>&lt;/width>
    &lt;height><link linkend="reference.feed.image.height">15</link>&lt;/height>
  &lt;/image>
  &lt;textInput>
    &lt;title><link linkend="reference.feed.textinput.title">Search</link>&lt;/title>
    &lt;description><link linkend="reference.feed.textinput.description">Search this site:</link>&lt;/description>
    &lt;name><link linkend="reference.feed.textinput.name">q</link>&lt;/name>
    &lt;link><link linkend="reference.feed.textinput.link">http://example.org/mt/mt-search.cgi</link>&lt;/link>
  &lt;/textInput>
  &lt;item>
    &lt;title><link linkend="reference.entry.title">First item title</link>&lt;/title>
    &lt;link><link linkend="reference.entry.link">http://example.org/item/1</link>&lt;/link>
    &lt;description>
<link linkend="reference.entry.summary">      Watch out for
      &amp;lt;span style="background: url(javascript:window.location='http://example.org/')"&amp;gt;
      nasty tricks&amp;lt;/span&amp;gt;</link>
    &lt;/description>
    &lt;author><link linkend="reference.entry.author">mark@example.org</link>&lt;/author>
    &lt;category><link linkend="reference.entry.tags.term">Miscellaneous</link>&lt;/category>
    &lt;comments><link linkend="reference.entry.comments">http://example.org/comments/1</link>&lt;/comments>
    &lt;enclosure url="<link linkend="reference.entry.enclosures.href">http://example.org/audio/demo.mp3</link>" length="<link linkend="reference.entry.enclosures.length">1069871</link>" type="<link linkend="reference.entry.enclosures.type">audio/mpeg</link>"/>
    &lt;guid><link linkend="reference.entry.id">http://example.org/guid/1</link>&lt;/guid>
    &lt;pubDate><link linkend="reference.entry.updated">Thu, 05 Sep 2002 0:00:01 GMT</link>&lt;/pubDate>
  &lt;/item>
&lt;/channel>
&lt;/rss></programlisting>
</example>
</section>

<section id="annotated.rss20dc">
<?dbhtml filename="annotated-rss20-dc.html"?>
<sectioninfo>
<abstract>
<title/>
<para>This is a sample &rss; 2.0 feed that uses several allowable extension modules in namespaces.  The feed is annotated with links that show how each value can be accessed once the feed is parsed.</para>
</abstract>
</sectioninfo>
<title>RSS 2.0 with Namespaces</title>
&feed_disclaimer;
<example id="example.annotated.rss20dc">
<title>Annotated &rss; 2.0 feed with namespaces</title>
<programlisting>&lt;?xml version="1.0" encoding="<link linkend="reference.encoding">utf-8</link>"?>
&lt;rss version="<link linkend="reference.version">2.0</link>"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:admin="http://webns.net/mvcb/"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
&lt;channel>
  &lt;title><link linkend="reference.feed.title">Sample Feed</link>&lt;/title>
  &lt;link><link linkend="reference.feed.link">http://example.org/</link>&lt;/link>
  &lt;description><link linkend="reference.feed.subtitle">For documentation only</link>&lt;/description>
  &lt;dc:language><link linkend="reference.feed.language">en-us</link>&lt;/dc:language>
  &lt;dc:creator><link linkend="reference.feed.author_detail.name">Mark Pilgrim</link> (<link linkend="reference.feed.author_detail.email">mark@example.org</link>)&lt;/dc:creator>
  &lt;dc:rights><link linkend="reference.feed.rights">Copyright 2004 Mark Pilgrim</link>&lt;/dc:rights>
  &lt;dc:date><link linkend="reference.feed.updated">2004-06-04T17:40:33-05:00</link>&lt;/dc:date>
  &lt;admin:generatorAgent rdf:resource="<link linkend="reference.feed.generator_detail.href">http://www.exampletoolkit.org/</link>"/>
  &lt;admin:errorReportsTo rdf:resource="<link linkend="reference.feed.errorreportsto">mailto:mark@example.org</link>"/>

  &lt;item>
    &lt;title><link linkend="reference.entry.title">First of all</link>&lt;/title>
    &lt;link><link linkend="reference.entry.link">http://example.org/archives/2002/09/04.html#first_of_all</link>&lt;/link>
    &lt;guid isPermaLink="false"><link linkend="reference.entry.id">1983@example.org</link>&lt;/guid>
    &lt;description>
      <link linkend="reference.entry.summary">Americans are fat. Smokers are stupid. People who don't speak Perl are irrelevant.</link>
    &lt;/description>
    &lt;dc:subject><link linkend="reference.entry.tags.term">Quotes</link>&lt;/dc:subject>
    &lt;dc:date><link linkend="reference.entry.updated">2002-09-04T13:54:20-05:00</link>&lt;/dc:date>
    &lt;content:encoded>&lt;![CDATA[
<link linkend="reference.entry.content.value">      &lt;cite>Ian Hickson&lt;/cite>: &lt;q>&lt;a href="http://ln.hixie.ch/?start=1030823786&amp;amp;count=1?>
      Americans are fat. Smokers are stupid. People who don't speak Perl are irrelevant.
      &lt;/a>&lt;/q></link>
      ]]&gt;
    &lt;/content:encoded>
  &lt;/item>
&lt;/channel>
&lt;/rss></programlisting>
</example>
</section>

<section id="annotated.rss10">
<?dbhtml filename="annotated-rss10.html"?>
<sectioninfo>
<abstract>
<title/>
<para>This is a sample &rss; 1.0 feed, annotated with links that show how each value can be accessed once the feed is parsed.</para>
</abstract>
</sectioninfo>
<title>&rss; 1.0</title>
&feed_disclaimer;
<example id="example.annotated.rss10">
<title>Annotated &rss; 1.0 feed</title>
<programlisting>&lt;?xml version="1.0" encoding="<link linkend="reference.encoding">utf-8</link>"?>
&lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:admin="http://webns.net/mvcb/"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:cc="http://web.resource.org/cc/"
  xmlns="<link linkend="reference.version">http://purl.org/rss/1.0/</link>">
&lt;channel rdf:about="http://www.example.org/index.rdf">
  &lt;title><link linkend="reference.feed.title">Sample Feed</link>&lt;/title>
  &lt;link><link linkend="reference.feed.link">http://www.example.org/</link>&lt;/link>
  &lt;description><link linkend="reference.feed.subtitle">For documentation only</link>&lt;/description>
  &lt;dc:language><link linkend="reference.feed.language">en</link>&lt;/dc:language>
  &lt;cc:license rdf:resource="<link linkend="reference.feed.license">http://web.resource.org/cc/PublicDomain</link>"/>
  &lt;dc:creator><link linkend="reference.feed.author_detail.name">Mark Pilgrim</link> (<link linkend="reference.feed.author_detail.email">mark@example.org</link>)&lt;/dc:creator>
  &lt;dc:date><link linkend="reference.feed.updated">2004-06-04T17:40:33-05:00</link>&lt;/dc:date>
  &lt;admin:generatorAgent rdf:resource="<link linkend="reference.feed.generator_detail.href">http://www.exampletoolkit.org/</link>"/>
  &lt;admin:errorReportsTo rdf:resource="<link linkend="reference.feed.errorreportsto">mailto:mark@example.org</link>"/>
  &lt;items>
    &lt;rdf:Seq>
      &lt;rdf:li rdf:resource="http://www.example.org/1" />
    &lt;/rdf:Seq>
  &lt;/items>
&lt;/channel>
&lt;item rdf:about="<link linkend="reference.entry.id">http://www.example.org/1</link>">
  &lt;title><link linkend="reference.entry.title">First of all</link>&lt;/title>
  &lt;link><link linkend="reference.entry.link">http://example.org/archives/2002/09/04.html#first_of_all</link>&lt;/link>
  &lt;description>
    <link linkend="reference.entry.summary">Americans are fat. Smokers are stupid. People who don't speak Perl are irrelevant.</link>
  &lt;/description>
  &lt;dc:subject><link linkend="reference.entry.tags.term">Quotes</link>&lt;/dc:subject>
  &lt;dc:date><link linkend="reference.entry.updated">2004-05-30T14:23:54-06:00</link>&lt;/dc:date>
  &lt;content:encoded>&lt;![CDATA[
<link linkend="reference.entry.content">    &lt;cite>Ian Hickson&lt;/cite>: &lt;q>&lt;a href="http://ln.hixie.ch/?start=1030823786&amp;count=1">
    Americans are fat. Smokers are stupid. People who don't speak Perl are irrelevant.
    &lt;/a>&lt;/q>]]&gt;</link>
  &lt;/content:encoded>
&lt;/item>
&lt;/rdf:RDF></programlisting>
</example>
</section>

</chapter>

<chapter id="history">
<?dbhtml filename="history.html"?>
<title>Revision history</title>
<section id="changes.42">
<?dbhtml filename="changes-42.html"?>
<title>Changes in version 4.2</title>
<abstract>
<title/>
<para>&feedparser; 4.2 was released on &fileversion;.</para>
</abstract>
<itemizedlist>
<listitem><para>Support for <link linkend="advanced.microformats">parsing microformats</link>, including <link linkend="advanced.microformats.relenclosure">rel=enclosure</link>, <link linkend="advanced.microformats.reltag">rel=tag</link>, <link linkend="advanced.microformats.xfn">&xfn;</link>, and <link linkend="advanced.microformats.hcard">&hCard;</link>.</para></listitem>
<listitem><para>Updated the whitelist of <link linkend="advanced.sanitization.html">acceptable HTML elements and attributes</link> based on the latest draft of the &html5; specification.</para></listitem>
<listitem><para>Support for <xref linkend="advanced.sanitization.css"/>.  (Previous versions of &feedparser; simply stripped all inline styles.)  Many thanks to Sam Ruby for implementing this, despite my insistence that it was impossible.</para></listitem>
<listitem><para>Support for <xref linkend="advanced.sanitization.svg"/>.</para></listitem>
<listitem><para>Support for <xref linkend="advanced.sanitization.mathml"/>.  Many thanks to Jacques Distler for patiently debugging this feature.</para></listitem>
<listitem><para>&iri; support for every element that can contain a &uri;.</para></listitem>
<listitem><para>Ability to <link linkend="advanced.base.disable">disable relative &uri; resolution</link>.</para></listitem>
<!--TODO<listitem><para>Ability to <link linkend="advanced.sanitization.disable">disable &html; sanitizing</link>.</para></listitem>-->
<listitem><para><link linkend="commandline">Command-line arguments and alternate serializers</link>, for manipulating &feedparser; from shell scripts or other non-Python sources.</para></listitem>
<listitem><para>More robust parsing of author email addresses, misencoded win-1252 content, <literal>rel=self</literal> links, and better detection of HTML content in elements with ambiguous content types.</para></listitem>
</itemizedlist>
</section>
<section id="changes.41">
<?dbhtml filename="changes-41.html"?>
<title>Changes in version 4.1</title>
<abstract>
<title/>
<para>&feedparser; 4.1 was released on January 11, 2006.</para>
</abstract>
<itemizedlist>
<listitem><para>Support for the &chardet; to autodetect character encoding of feeds that declare their encoding incorrectly or don't declare it at all.  See <xref linkend="advanced.encoding"/> for details of when this gets called.</para></listitem>
<listitem><para>&feedparser; no longer sets a default socket timeout (bug <ulink url="http://sourceforge.net/tracker/index.php?func=detail&amp;aid=1392140&amp;group_id=112328&amp;atid=661937">1392140</ulink>).  If you were relying on this feature, you will need to call <literal>socket.setdefaulttimeout(TIMEOUT_IN_SECONDS)</literal> yourself.</para></listitem>
</itemizedlist>
</section>
<section id="changes.402">
<?dbhtml filename="changes-402.html"?>
<title>Changes in version 4.0.2</title>
<abstract>
<title/>
<para>&feedparser; 4.0.2 was released on December 24, 2005.</para>
</abstract>
<itemizedlist>
<listitem><para>cleared <varname>_debug</varname> flag.</para></listitem>
</itemizedlist>
</section>
<section id="changes.401">
<?dbhtml filename="changes-401.html"?>
<title>Changes in version 4.0.1</title>
<abstract>
<title/>
<para>&feedparser; 4.0.1 was released on December 24, 2005.</para>
</abstract>
<itemizedlist>
<listitem><para>bug fixes for &python; 2.1 compatibility.</para></listitem>
</itemizedlist>
</section>
<section id="changes.40">
<?dbhtml filename="changes-40.html"?>
<title>Changes in version 4.0</title>
<abstract>
<title/>
<para>&feedparser; 4.0 was released on December 23, 2005.</para>
</abstract>
<itemizedlist>
<listitem><para>Support for <xref linkend="annotated.atom10"/>.</para></listitem>
<listitem><para>Support for &itunes; extensions.</para></listitem>
<listitem><para>Support for <literal>dc:contributor</literal>.</para></listitem>
<listitem><para>&feedparser; now captures the feed's <xref linkend="reference.namespaces"/>.  See <xref linkend="advanced.namespaces"/> for details.</para></listitem>
<listitem><para>Lots of things have been renamed to match Atom 1.0 terminology.  <literal>issued</literal> is now <xref linkend="reference.entry.published"/>, <literal>modified</literal> is now <xref linkend="reference.entry.updated"/>, and <literal>url</literal> is now <literal>href</literal> everywhere.  You can still access these elements with the old names, so you shouldn't need to change any existing code, but don't be surprised if you can't find them during debugging.</para></listitem>
<listitem><para><literal>category</literal> and <literal>categories</literal> have been replaced by <literal>tags</literal>, see <xref linkend="reference.feed.tags"/> and <xref linkend="reference.entry.tags"/>.  The old names still work.</para></listitem>
<listitem><para><literal>mode</literal> is gone from all detail and content dictionaries.  It was never terribly useful, since &feedparser; unescapes content automatically.</para></listitem>
<listitem><para><xref linkend="reference.entry.source"/> is now a dictionary of feed metadata as per section 4.2.11 of RFC 4287.  &feedparser; no longer supports the &rss; 2.0's <literal>source</literal> element.</para></listitem>
<listitem><para>Content in unknown namespaces is no longer discarded (<ulink url="http://sourceforge.net/tracker/index.php?func=detail&amp;aid=993305&amp;group_id=112328&amp;atid=661937">bug 993305</ulink>)</para></listitem>
<listitem><para>Lots of other bug fixes.</para></listitem>
</itemizedlist>
</section>
<section id="changes.33">
<?dbhtml filename="changes-33.html"?>
<title>Changes in version 3.3</title>
<abstract>
<title/>
<para>&feedparser; 3.3 was released on July 15, 2004.</para>
</abstract>
<itemizedlist>
<listitem><para>optimized &ebcdic; to &ascii; conversion</para></listitem>
<listitem><para>fixed obscure problem tracking <sgmltag>xml:base</sgmltag> and <sgmltag>xml:lang</sgmltag> if element declares it, child doesn't, first grandchild redeclares it, and second grandchild doesn't</para></listitem>
<listitem><para>refactored date parsing</para></listitem>
<listitem><para>defined public <function>registerDateHandler</function> so callers can add support for additional date formats at runtime</para></listitem>
<listitem><para>added support for OnBlog, Nate, MSSQL, Greek, and Hungarian dates (ytrewq1)</para></listitem>
<listitem><para>added <function>zopeCompatibilityHack()</function> which turns <classname>FeedParserDict</classname> into a regular dictionary, required for <application>Zope</application> compatibility, and also makes command-line debugging easier because pprint module formats real dictionaries better than dictionary-like objects</para></listitem>
<listitem><para>added <classname>NonXMLContentType</classname> exception, which is stored in <varname>bozo_exception</varname> when a feed is served with a non-&xml; media type such as <constant>'text/plain'</constant></para></listitem>
<listitem><para>respect <constant>Content-Language</constant> as default language if no <sgmltag>xml:lang</sgmltag> is present</para></listitem>
<listitem><para><varname>cloud</varname> dict is now <classname>FeedParserDict</classname></para></listitem>
<listitem><para>generator dict is now <classname>FeedParserDict</classname></para></listitem>
<listitem><para>better tracking of <sgmltag>xml:lang</sgmltag>, including support for <literal>xml:lang=''</literal> to unset the current language</para></listitem>
<listitem><para>recognize &rss; 1.0 feeds even when &rss; 1.0 namespace is not the default namespace</para></listitem>
<listitem><para>don't overwrite final status on redirects (scenarios: redirecting to a &uri; that returns <constant>304</constant>, redirecting to a &uri; that redirects to another &uri; with a different type of redirect)</para></listitem>
<listitem><para>add support for <constant>HTTP 303</constant> redirects</para></listitem>
</itemizedlist>
</section>
<section id="changes.32">
<?dbhtml filename="changes-32.html"?>
<title>Changes in version 3.2</title>
<abstract>
<title/>
<para>&feedparser; 3.2 was released on July 3, 2004.</para>
</abstract>
<itemizedlist>
<listitem><para>use <filename class='headerfile'>cjkcodecs</filename> and <filename class='headerfile'>iconv_codec</filename> if available</para></listitem>
<listitem><para>always convert feed to UTF-8 before passing to &xml; parser</para></listitem>
<listitem><para>completely revamped logic for determining character encoding and attempting &xml; parsing (much faster)</para></listitem>
<listitem><para>increased default timeout to 20 seconds</para></listitem>
<listitem><para>test for presence of <constant>Location</constant> header on redirects</para></listitem>
<listitem><para>added tests for many alternate character encodings</para></listitem>
<listitem><para>support various &ebcdic; encodings</para></listitem>
<listitem><para>support UTF-16BE and UTF16-LE with or without a &bom;</para></listitem>
<listitem><para>support UTF-8 with a &bom;</para></listitem>
<listitem><para>support UTF-32BE and UTF-32LE with or without a &bom;</para></listitem>
<listitem><para>fixed crashing bug if no &xml; parsers are available</para></listitem>
<listitem><para>added support for <literal>'Content-encoding: deflate'</literal></para></listitem>
<listitem><para>send blank <literal>'Accept-encoding: '</literal> header if neither <filename class='headerfile'>gzip</filename> nor <filename class='headerfile'>zlib</filename> modules are available</para></listitem>
</itemizedlist>
</section>
<section id="changes.31">
<?dbhtml filename="changes-31.html"?>
<title>Changes in version 3.1</title>
<abstract>
<title/>
<para>&feedparser; 3.1 was released on June 28, 2004.</para>
</abstract>
<itemizedlist>
<listitem><para>added and passed tests for converting &html; entities to Unicode equivalents in illformed feeds (aaronsw)</para></listitem>
<listitem><para>added and passed tests for converting character entities to Unicode equivalents in illformed feeds (aaronsw)</para></listitem>
<listitem><para>test for valid parsers when setting <constant>XML_AVAILABLE</constant></para></listitem>
<listitem><para>make version and encoding available when server returns a <constant>304</constant></para></listitem>
<listitem><para>add <varname>handlers</varname> parameter to pass arbitrary <filename class='headerfile'>urllib2</filename> handlers (like digest auth or proxy support)</para></listitem>
<listitem><para>add code to parse username/password out of url and send as basic authentication</para></listitem>
<listitem><para>expose downloading-related exceptions in <varname>bozo_exception</varname> (aaronsw)</para></listitem>
<listitem><para>added <methodname>__contains__</methodname> method to <classname>FeedParserDict</classname> (aaronsw)</para></listitem>
<listitem><para>added <varname>publisher_detail</varname> (aaronsw)</para></listitem>
</itemizedlist>
</section>
<section id="changes.301">
<?dbhtml filename="changes-301.html"?>
<title>Changes in version 3.0.1</title>
<abstract>
<title/>
<para>&feedparser; 3.0.1 was released on June 21, 2004.</para>
</abstract>
<itemizedlist>
<listitem><para>default to <constant>us-ascii</constant> for all <literal>text/*</literal> content types</para></listitem>
<listitem><para>recover from malformed <constant>content-type</constant> header parameter with no equals sign (<literal>"text/xml; charset:iso-8859-1"</literal>)</para></listitem>
<listitem><para>docs: added <filename>reference-feed.html</filename> and <filename>reference-entry.html</filename> (bug #977723)</para></listitem>
<listitem><para>docs: fixed <varname>entry[i]</varname> in documentation (should be <varname>entries[i]</varname>) (bug #977722)</para></listitem>
<listitem><para>docs: added note about Unicode string usage (bug #977716)</para></listitem>
<listitem><para>docs: added <filename>basic-existence.html</filename> (bug #977704)</para></listitem>
<listitem><para>docs: fixed description of feed title (bug #977685)</para></listitem>
<listitem><para>docs: fixed typo in annotated &rss; 1.0 feed (bug #977682)</para></listitem>
</itemizedlist>
</section>
<section id="changes.30.and.friends">
<?dbhtml filename="changes-30.html"?>
<title>Changes in version 3.0 and the 26 betas that preceded it</title>
<abstract>
<title/>
<para>This got a little out of hand.</para>
</abstract>

<bridgehead id="changes.30" renderas="sect3">Changes in version 3.0</bridgehead>
<para>&feedparser; 3.0 was released on June 21, 2004.</para>
<itemizedlist>
<listitem><para>don't try <constant>iso-8859-1</constant> (can't distinguish between <constant>iso-8859-1</constant> and <constant>windows-1252</constant> anyway, and most incorrectly marked feeds are <constant>windows-1252</constant>)</para></listitem>
<listitem><para>fixed regression that could cause the same encoding to be tried twice (even if it failed the first time)</para></listitem>
</itemizedlist>

<bridgehead id="changes.30fc3" renderas="sect3">Changes in version 3.0fc3</bridgehead>
<para>&feedparser; 3.0fc3 was released on June 18, 2004.</para>
<itemizedlist>
<listitem><para>fixed bug in <function>_changeEncodingDeclaration</function> that failed to parse UTF-16 encoded feeds</para></listitem>
<listitem><para>made <varname>source</varname> into a FeedParserDict</para></listitem>
<listitem><para>duplicate <literal>admin:generatorAgent/@rdf:resource</literal> in <varname>generator_detail.url</varname></para></listitem>
<listitem><para>added support for <sgmltag>image</sgmltag></para></listitem>
<listitem><para>refactored <function>parse()</function> fallback logic to try other encodings if SAX parsing fails (previously it would only try other encodings if re-encoding failed)</para></listitem>
<listitem><para>remove <function>unichr</function> madness in <methodname>normalize_attrs</methodname> now that we're properly tracking encoding in and out of <classname>BaseHTMLProcessor</classname></para></listitem>
<listitem><para>set <varname>feed.language</varname> from root-level <sgmltag class='attribute'>xml:lang</sgmltag></para></listitem>
<listitem><para>set <varname>entry.id</varname> from <sgmltag class='attribute'>rdf:about</sgmltag></para></listitem>
<listitem><para>send <constant>Accept</constant> header</para></listitem>
</itemizedlist>

<bridgehead id="changes.30fc2" renderas="sect3">Changes in version 3.0fc2</bridgehead>
<para>&feedparser; 3.0fc2 was released on May 10, 2004.</para>
<itemizedlist>
<listitem><para>added and passed Sam's <literal>amp</literal> tests</para></listitem>
<listitem><para>added and passed my <sgmltag>blink</sgmltag> tag tests</para></listitem>
</itemizedlist>

<bridgehead id="changes.30fc1" renderas="sect3">Changes in version 3.0fc1</bridgehead>
<para>&feedparser; 3.0fc1 was released on April 23, 2004.</para>
<itemizedlist>
<listitem><para>made <varname>results.entries[0].links[0]</varname> and <varname>results.entries[0].enclosures[0]</varname> into <classname>FeedParserDict</classname></para></listitem>
<listitem><para>fixed typo that could cause the same encoding to be tried twice (even if it failed the first time)</para></listitem>
<listitem><para>fixed DOCTYPE stripping when DOCTYPE contained entity declarations</para></listitem>
<listitem><para>better <sgmltag>textinput</sgmltag> and <sgmltag>image</sgmltag> tracking in illformed &rss; 1.0 feeds</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b23" renderas="sect3">Changes in version 3.0b23</bridgehead>
<para>&feedparser; 3.0b23 was released on April 21, 2004.</para>
<itemizedlist>
<listitem><para>fixed <constant>UnicodeDecodeError</constant> for feeds that contain high-bit characters in attributes in embedded &html; in description (thanks Thijs van de Vossen)</para></listitem>
<listitem><para>moved <varname>guid</varname>, <varname>date</varname>, and <varname>date_parsed</varname> to mapped keys in <classname>FeedParserDict</classname></para></listitem>
<listitem><para>tweaked <methodname>FeedParserDict.has_key</methodname> to return <constant>True</constant> if asking about a mapped key</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b22" renderas="sect3">Changes in version 3.0b22</bridgehead>
<para>&feedparser; 3.0b22 was released on April 19, 2004.</para>
<itemizedlist>
<listitem><para>changed <varname>channel</varname> to <varname>feed</varname>, <varname>item</varname> to <varname>entries</varname> in <varname>results</varname> dict</para></listitem>
<listitem><para>changed <varname>results</varname> dict to allow getting values with <varname>results.key</varname> as well as <varname>results[key]</varname></para></listitem>
<listitem><para>work around embedded illformed &html; with half a DOCTYPE</para></listitem>
<listitem><para>work around malformed <constant>Content-Type</constant> header</para></listitem>
<listitem><para>if character encoding is wrong, try several common ones before falling back to regexes (if this works, <varname>bozo_exception</varname> is set to <constant>CharacterEncodingOverride</constant></para></listitem>
<listitem><para>fixed character encoding issues in <classname>BaseHTMLProcessor</classname> by tracking encoding and converting from Unicode to raw strings before feeding data to <classname>sgmllib.SGMLParser</classname></para></listitem>
<listitem><para>convert each value in results to Unicode (if possible), even if using regex-based parsing</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b21" renderas="sect3">Changes in version 3.0b21</bridgehead>
<para>&feedparser; 3.0b21 was released on April 14, 2004.</para>
<itemizedlist>
<listitem><para>added Hot RSS support</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b20" renderas="sect3">Changes in version 3.0b20</bridgehead>
<para>&feedparser; 3.0b20 was released on April 7, 2004.</para>
<itemizedlist>
<listitem><para>added &cdf; support</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b19" renderas="sect3">Changes in version 3.0b19</bridgehead>
<para>&feedparser; 3.0b19 was released on March 15, 2004.</para>
<itemizedlist>
<listitem><para>fixed bug exploding author information when author name was in parentheses</para></listitem>
<listitem><para>removed ultra-problematic <filename class='headerfile'>mxTidy</filename> support</para></listitem>
<listitem><para>patch to workaround crash in PyXML/expat when encountering invalid entities (MarkMoraes)</para></listitem>
<listitem><para>support for <sgmltag>textinput</sgmltag>/<sgmltag>textInput</sgmltag></para></listitem>
</itemizedlist>

<bridgehead id="changes.30b18" renderas="sect3">Changes in version 3.0b18</bridgehead>
<para>&feedparser; 3.0b18 was released on February 17, 2004.</para>
<itemizedlist>
<listitem><para>always map <sgmltag>description</sgmltag> to <varname>summary_detail</varname> (Andrei)</para></listitem>
<listitem><para>use <filename class='headerfile'>libxml2</filename> (if available)</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b17" renderas="sect3">Changes in version 3.0b17</bridgehead>
<para>&feedparser; 3.0b17 was released on February 13, 2004.</para>
<itemizedlist>
<listitem><para>determine character encoding as per <ulink url="&url_rfc3023;">RFC 3023</ulink></para></listitem>
</itemizedlist>

<bridgehead id="changes.30b16" renderas="sect3">Changes in version 3.0b16</bridgehead>
<para>&feedparser; 3.0b16 was released on February 12, 2004.</para>
<itemizedlist>
<listitem><para>fixed support for &rss; 0.90 (broken in b15)</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b15" renderas="sect3">Changes in version 3.0b15</bridgehead>
<para>&feedparser; 3.0b15 was released on February 11, 2004.</para>
<itemizedlist>
<listitem><para>fixed bug resolving relative links in <sgmltag>wfw:commentRSS</sgmltag></para></listitem>
<listitem><para>fixed bug capturing author and contributor &uri;</para></listitem>
<listitem><para>fixed bug resolving relative links in author and contributor &uri;</para></listitem>
<listitem><para>fixed bug resolving relative links in generator &uri;</para></listitem>
<listitem><para>added support for recognizing &rss; 1.0</para></listitem>
<listitem><para>passed Simon Fell's namespace tests, and included them permanently in the test suite with his permission</para></listitem>
<listitem><para>fixed namespace handling under &python; 2.1</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b14" renderas="sect3">Changes in version 3.0b14</bridgehead>
<para>&feedparser; 3.0b14 was released on February 8, 2004.</para>
<itemizedlist>
<listitem><para>fixed CDATA handling in non-wellformed feeds under &python; 2.1</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b13" renderas="sect3">Changes in version 3.0b13</bridgehead>
<para>&feedparser; 3.0b13 was released on February 8, 2004.</para>
<itemizedlist>
<listitem><para>better handling of empty &html; tags (<sgmltag>br</sgmltag>, <sgmltag>hr</sgmltag>, <sgmltag>img</sgmltag>, etc.) in embedded markup, in either &html; or &xhtml; form (<sgmltag>&lt;br></sgmltag>, <sgmltag>&lt;br/></sgmltag>, <sgmltag>&lt;br /></sgmltag>)</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b12" renderas="sect3">Changes in version 3.0b12</bridgehead>
<para>&feedparser; 3.0b12 was released on February 6, 2004.</para>
<itemizedlist>
<listitem><para>fiddled with <function>decodeEntities</function> (still not right)</para></listitem>
<listitem><para>added support to &atom; 0.2 <sgmltag>subtitle</sgmltag></para></listitem>
<listitem><para>added support for &atom; content model in <sgmltag>copyright</sgmltag></para></listitem>
<listitem><para>better sanitizing of dangerous &html; elements with end tags (<sgmltag>script</sgmltag>, <sgmltag>frameset</sgmltag>)</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b11" renderas="sect3">Changes in version 3.0b11</bridgehead>
<para>&feedparser; 3.0b11 was released on February 2, 2004.</para>
<itemizedlist>
<listitem><para>added <sgmltag>rights</sgmltag> to list of elements that can contain dangerous markup</para></listitem>
<listitem><para>fiddled with <function>decodeEntities</function> (not right)</para></listitem>
<listitem><para>liberalized date parsing even further</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b10" renderas="sect3">Changes in version 3.0b10</bridgehead>
<para>&feedparser; 3.0b10 was released on January 31, 2004.</para>
<itemizedlist>
<listitem><para>incorporated ISO-8601 date parsing routines from <filename class='headerfile'>xml.util.iso8601</filename></para></listitem>
</itemizedlist>

<bridgehead id="changes.30b9" renderas="sect3">Changes in version 3.0b9</bridgehead>
<para>&feedparser; 3.0b9 was released on January 29, 2004.</para>
<itemizedlist>
<listitem><para>fixed check for presence of <function>dict</function> function</para></listitem>
<listitem><para>added support for <sgmltag>summary</sgmltag></para></listitem>
</itemizedlist>

<bridgehead id="changes.30b8" renderas="sect3">Changes in version 3.0b8</bridgehead>
<para>&feedparser; 3.0b8 was released on January 28, 2004.</para>
<itemizedlist>
<listitem><para>added support for <sgmltag>contributor</sgmltag></para></listitem>
</itemizedlist>

<bridgehead id="changes.30b7" renderas="sect3">Changes in version 3.0b7</bridgehead>
<para>&feedparser; 3.0b7 was released on January 28, 2004.</para>
<itemizedlist>
<listitem><para>support &atom;-style <sgmltag>author</sgmltag> element in <varname>author_detail</varname> (dictionary of <varname>name</varname>, <varname>url</varname>, <varname>email</varname>)</para></listitem>
<listitem><para>map <varname>author</varname> to <varname>author_detail</varname> if <varname>author</varname> contains name + email address</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b6" renderas="sect3">Changes in version 3.0b6</bridgehead>
<para>&feedparser; 3.0b6 was released on January 27, 2004.</para>
<itemizedlist>
<listitem><para>added feed type and version detection, <varname>result['version']</varname> will be one of <constant>SUPPORTED_VERSIONS.keys()</constant> or empty string if unrecognized</para></listitem>
<listitem><para>added support for <sgmltag>creativeCommons:license</sgmltag> and <sgmltag>cc:license</sgmltag></para></listitem>
<listitem><para>added support for full &atom; content model in <sgmltag>title</sgmltag>, <sgmltag>tagline</sgmltag>, <sgmltag>info</sgmltag>, <sgmltag>copyright</sgmltag>, <sgmltag>summary</sgmltag></para></listitem>
<listitem><para>fixed bug with gzip encoding (not always telling server we support it when we do)</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b5" renderas="sect3">Changes in version 3.0b5</bridgehead>
<para>&feedparser; 3.0b5 was released on January 26, 2004.</para>
<itemizedlist>
<listitem><para>fixed bug parsing multiple links at feed level</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b4" renderas="sect3">Changes in version 3.0b4</bridgehead>
<para>&feedparser; 3.0b4 was released on January 26, 2004.</para>
<itemizedlist>
<listitem><para>fixed <sgmltag>xml:lang</sgmltag> inheritance</para></listitem>
<listitem><para>fixed multiple bugs tracking <sgmltag>xml:base</sgmltag> &uri;, one for documents that don't define one explicitly and one for documents that define an outer and an inner <sgmltag>xml:base</sgmltag> that goes out of scope before the end of the document</para></listitem>
</itemizedlist>

<bridgehead id="changes.30b3" renderas="sect3">Changes in version 3.0b3</bridgehead>
<para>&feedparser; 3.0b3 was released on January 23, 2004.</para>
<itemizedlist>
<listitem><para>parse entire feed with real &xml; parser (if available)</para></listitem>
<listitem><para>added several new supported namespaces</para></listitem>
<listitem><para>fixed bug tracking naked markup in <sgmltag>description</sgmltag></para></listitem>
<listitem><para>added support for <sgmltag>enclosure</sgmltag></para></listitem>
<listitem><para>added support for <sgmltag>source</sgmltag></para></listitem>
<listitem><para>re-added support for <sgmltag>cloud</sgmltag> which got dropped somehow</para></listitem>
<listitem><para>added support for <sgmltag>expirationDate</sgmltag></para></listitem>
</itemizedlist>

<bridgehead id="changes.30b2" renderas="sect3">Changes in version 3.0b2 and 3.0b1</bridgehead>
<para>&feedparser; 3.0b2 and 3.0b1 have been lost in the mists of time.</para>

</section>

<section id="changes.27x">
<?dbhtml filename="changes-27.html"?>
<title>Changes in version 2.7.x</title>
<abstract>
<title/>
<para>The 2.7 series was a brief but necessary transition towards some of the core ideas in version 3.0.</para>
</abstract>

<bridgehead id="changes.276" renderas="sect3">Changes in version 2.7.6</bridgehead>
<para>&ultraliberalfeedparser; 2.7.6 was released on January 16, 2004.</para>
<itemizedlist>
<listitem><para>fixed bug with <filename class='headerfile'>StringIO</filename> importing</para></listitem>
</itemizedlist>

<bridgehead id="changes.275" renderas="sect3">Changes in version 2.7.5</bridgehead>
<para>&ultraliberalfeedparser; 2.7.5 was released on January 15, 2004.</para>
<itemizedlist>
<listitem><para>added workaround for malformed DOCTYPE (seen on many <systemitem class="domainname">blogspot.com</systemitem> sites)</para></listitem>
<listitem><para>added <varname>_debug</varname> variable</para></listitem>
</itemizedlist>

<bridgehead id="changes.274" renderas="sect3">Changes in version 2.7.4</bridgehead>
<para>&ultraliberalfeedparser; 2.7.4 was released on January 14, 2004.</para>
<itemizedlist>
<listitem><para>added workaround for improperly formed <sgmltag>&lt;br/></sgmltag> tags in encoded &html; (skadz)</para></listitem>
<listitem><para>fixed unicode handling in <methodname>normalize_attrs</methodname> (ChrisL)</para></listitem>
<listitem><para>fixed relative &uri; processing for <sgmltag>guid</sgmltag> (skadz)</para></listitem>
<listitem><para>added ICBM support</para></listitem>
<listitem><para>added <filename class='headerfile'>base64</filename> support</para></listitem>
</itemizedlist>

<bridgehead id="changes.273" renderas="sect3">Changes in version 2.7.3</bridgehead>
<para>&ultraliberalfeedparser; 2.7.3 was released on January 14, 2004.</para>
<itemizedlist>
<listitem><para>reverted all changes made in 2.7.2</para></listitem>
</itemizedlist>

<bridgehead id="changes.272" renderas="sect3">Changes in version 2.7.2</bridgehead>
<para>&ultraliberalfeedparser; 2.7.2 was released on January 13, 2004.</para>
<itemizedlist>
<listitem><para>"Version 2.7.2 of my feed parser, released today, will by default refuse to parse <ulink url="http://intertwingly.net/stories/2004/01/12/broken.rss">this feed</ulink>.  It does a first-pass check for wellformedness, and when that fails it sets the 'bozo' bit in the result to &one; and immediately terminates.  You can revert to the previous behavior by passing <varname>disableWellFormedCheck=1</varname>, but it will print arrogant warning messages to stderr to the effect that anyone who can't create a well-formed &xml; feed is a bozo and an incompetent fool." <ulink url="http://intertwingly.net/blog/2004/01/12/Scientific-Method#c1074047818">source</ulink></para></listitem>
</itemizedlist>

<bridgehead id="changes.271" renderas="sect3">Changes in version 2.7.1</bridgehead>
<para>&ultraliberalfeedparser; 2.7.1 was released on January 9, 2004.</para>
<itemizedlist>
<listitem><para>fixed bug handling <literal>&amp;quot;</literal> and <literal>&amp;apos;</literal></para></listitem>
<listitem><para>fixed memory leak not closing url opener (JohnD)</para></listitem>
<listitem><para>added <sgmltag>dc:publisher</sgmltag> support (MarekK)</para></listitem>
<listitem><para>added <sgmltag>admin:errorReportsTo</sgmltag> support (MarekK)</para></listitem>
<listitem><para>&python; 2.1 <function>dict</function> support (MarekK)</para></listitem>
</itemizedlist>

<bridgehead id="changes.27" renderas="sect3">Changes in version 2.7</bridgehead>
<para>&ultraliberalfeedparser; 2.7 was released on January 5, 2004.</para>
<itemizedlist>
<listitem><para>really added support for trackback and pingback namespaces, as opposed to 2.6 when I said I did but didn't really</para></listitem>
<listitem><para>sanitize &html; markup within some elements</para></listitem>
<listitem><para>added <filename class='headerfile'>mxTidy</filename> support (if installed) to tidy &html; markup within some elements</para></listitem>
<listitem><para>fixed indentation bug in <function>_parse_date</function> (FazalM)</para></listitem>
<listitem><para>use <function>socket.setdefaulttimeout</function> if available (FazalM)</para></listitem>
<listitem><para>universal date parsing and normalization (FazalM): <varname>created</varname>, <varname>modified</varname>, <varname>issued</varname> are parsed into 9-tuple date format and stored in <varname>created_parsed</varname>, <varname>modified_parsed</varname>, and <varname>issued_parsed</varname></para></listitem>
<listitem><para><varname>date</varname> is duplicated in <varname>modified</varname> and vice-versa</para></listitem>
<listitem><para><varname>date_parsed</varname> is duplicated in <varname>modified_parsed</varname> and vice-versa</para></listitem>
</itemizedlist>

</section>

<section id="changes.26">
<?dbhtml filename="changes-26.html"?>
<title>Changes in version 2.6</title>
<abstract>
<title/>
<para>&ultraliberalfeedparser; 2.6 was released on January 1, 2004.</para>
</abstract>
<itemizedlist>
<listitem><para><sgmltag>dc:author</sgmltag> support (MarekK)</para></listitem>
<listitem><para>fixed bug tracking nested <sgmltag>div</sgmltag>s within content (JohnD)</para></listitem>
<listitem><para>fixed missing <filename class='headerfile'>sys</filename> import (JohanS)</para></listitem>
<listitem><para>fixed regular expression to capture &xml; character encoding (Andrei)</para></listitem>
<listitem><para>added support for &atom; 0.3-style links</para></listitem>
<listitem><para>fixed bug with <sgmltag>textInput</sgmltag> tracking</para></listitem>
<listitem><para>added support for <sgmltag>cloud</sgmltag> (MartijnP)</para></listitem>
<listitem><para>added support for multiple <sgmltag>category</sgmltag>/<sgmltag>dc:subject</sgmltag> (MartijnP)</para></listitem>
<listitem><para>normalize content model: <varname>description</varname> gets description (which can come from <sgmltag>&lt;description></sgmltag>, <sgmltag>&lt;summary></sgmltag>, or full content if no <sgmltag>&lt;description></sgmltag>), <varname>content</varname> gets dict of <varname>base</varname>/<varname>language</varname>/<varname>type</varname>/<varname>value</varname> (which can come from <sgmltag>&lt;content:encoded></sgmltag>, <sgmltag>&lt;xhtml:body</sgmltag>, <sgmltag>&lt;content</sgmltag>, or <sgmltag>&lt;fullitem></sgmltag>)</para></listitem>
<listitem><para>fixed bug matching arbitrary Userland namespaces</para></listitem>
<listitem><para>added <sgmltag>xml:base</sgmltag> and <sgmltag>xml:lang</sgmltag> tracking</para></listitem>
<listitem><para>fixed bug tracking unknown tags</para></listitem>
<listitem><para>fixed bug tracking content when <sgmltag>&lt;content></sgmltag> element is not in default namespace (like Pocketsoap feed)</para></listitem>
<listitem><para>resolve relative URLs in <sgmltag>&lt;link></sgmltag>, <sgmltag>&lt;guid></sgmltag>, <sgmltag>&lt;docs></sgmltag>, <sgmltag>&lt;url></sgmltag>, <sgmltag>&lt;comments></sgmltag>, <sgmltag>&lt;wfw:comment></sgmltag>, <sgmltag>&lt;wfw:commentRSS></sgmltag></para></listitem>
<listitem><para>resolve relative &uri;s within embedded &html; markup in <sgmltag>&lt;description></sgmltag>, <sgmltag>&lt;xhtml:body></sgmltag>, <sgmltag>&lt;content></sgmltag>, <sgmltag>&lt;content:encoded></sgmltag>, <sgmltag>&lt;title></sgmltag>, <sgmltag>&lt;subtitle></sgmltag>, <sgmltag>&lt;summary></sgmltag>, <sgmltag>&lt;info></sgmltag>, <sgmltag>&lt;tagline></sgmltag>, and <sgmltag>&lt;copyright></sgmltag></para></listitem>
<listitem><para>added support for pingback and trackback namespaces</para></listitem>
</itemizedlist>
</section>

<section id="changes.early">
<?dbhtml filename="changes-early.html"?>
<title>Changes in earlier versions</title>
<abstract>
<title/>
<para>&feedparser; began as an "ultra-liberal RSS parser" named <filename>rssparser.py</filename>.  It was written as a weapon for battles that no one remembers, to work around problems that no longer exist.</para>
</abstract>

<bridgehead id="changes.253" renderas="sect3">Changes in version 2.5.3</bridgehead>
<para>&ultraliberalfeedparser; 2.5.3 was released on August 3, 2003.</para>
<itemizedlist>
<listitem><para>track whether we're inside an <sgmltag>image</sgmltag> or <sgmltag>textInput</sgmltag> (TvdV)</para></listitem>
<listitem><para>return the character encoding, if specified</para></listitem>
</itemizedlist>

<bridgehead id="changes.252" renderas="sect3">Changes in version 2.5.2</bridgehead>
<para>&ultraliberalfeedparser; 2.5.2 was released on July 28, 2003.</para>
<itemizedlist>
<listitem><para>entity-decode inline &xml; properly</para></listitem>
<listitem><para>added support for inline <sgmltag>&lt;xhtml:body></sgmltag> and <sgmltag>&lt;xhtml:div></sgmltag> as used in some &rss; 2.0 feeds</para></listitem>
</itemizedlist>

<bridgehead id="changes.251" renderas="sect3">Changes in version 2.5.1</bridgehead>
<para>&ultraliberalfeedparser; 2.5.1 was released on July 26, 2003.</para>
<itemizedlist>
<listitem><para>clear <varname>opener.addheaders</varname> so we only send our custom <constant>User-Agent</constant> (otherwise <filename class='headerfile'>urllib2</filename> sends two, which confuses some servers) (RMK)</para></listitem>
</itemizedlist>

<bridgehead id="changes.25" renderas="sect3">Changes in version 2.5</bridgehead>
<para>&ultraliberalfeedparser; 2.5 was released on July 25, 2003.</para>
<itemizedlist>
<listitem><para>changed to &python; license (all contributors agree)</para></listitem>
<listitem><para>removed unnecessary <filename class='headerfile'>>urllib</filename> code -- <filename class='headerfile'>urllib2</filename> should always be available anyway</para></listitem>
<listitem><para>return actual <varname>url</varname>, <varname>status</varname>, and full &http; headers (as <varname>result['url']</varname>, <varname>result['status']</varname>, and <varname>result['headers']</varname>) if parsing a remote feed over &http;.  This should pass all the <ulink url="http://diveintomark.org/tests/client/http/">Aggregator client &http; tests</ulink>.</para></listitem>
<listitem><para>added the latest namespace-of-the-week for &rss; 2.0</para></listitem>
</itemizedlist>

<bridgehead id="changes.24" renderas="sect3">Changes in version 2.4</bridgehead>
<para>&ultraliberalfeedparser; 2.4 was released on July 9, 2003.</para>
<itemizedlist>
<listitem><para>added preliminary Pie/Atom/Echo support based on <ulink url="http://www.intertwingly.net/blog/1506.html">Sam Ruby's snapshot of July 1</ulink></para></listitem>
<listitem><para>changed project name</para></listitem>
</itemizedlist>

<bridgehead id="changes.231" renderas="sect3">Changes in version 2.3.1</bridgehead>
<para>&ultraliberalrssparser; 2.3.1 was released on June 12, 2003.</para>
<itemizedlist>
<listitem><para>if item has both <sgmltag>link</sgmltag> and <sgmltag>guid</sgmltag>, return both as-is</para></listitem>
</itemizedlist>

<bridgehead id="changes.23" renderas="sect3">Changes in version 2.3</bridgehead>
<para>&ultraliberalrssparser; 2.3 was released on June 11, 2003.</para>
<itemizedlist>
<listitem><para>added <constant>USER_AGENT</constant> for default (if caller doesn't specify)</para></listitem>
<listitem><para>make sure we send the <constant>User-Agent</constant> even if <filename class='headerfile'>urllib2</filename> isn't available</para></listitem>
<listitem><para>Match any variation of <constant>backend.userland.com/rss</constant> namespace</para></listitem>
</itemizedlist>

<bridgehead id="changes.22" renderas="sect3">Changes in version 2.2</bridgehead>
<para>&ultraliberalrssparser; 2.2 was released on January 27, 2003.</para>
<itemizedlist>
<listitem><para>added attribute support and <sgmltag class='attribute'>admin:generatorAgent</sgmltag>.  <methodname>start_admingeneratoragent</methodname> is an example of how to handle elements with only attributes, no content.</para></listitem>
</itemizedlist>

<bridgehead id="changes.21" renderas="sect3">Changes in version 2.1</bridgehead>
<para>&ultraliberalrssparser; 2.1 was released on November 14, 2002.</para>
<itemizedlist>
<listitem><para>added gzip support</para></listitem>
</itemizedlist>

<bridgehead id="changes.202" renderas="sect3">Changes in version 2.0.2</bridgehead>
<para>&ultraliberalrssparser; 2.0.2 was released on October 21, 2002.</para>
<itemizedlist>
<listitem><para>added the <varname>inchannel</varname> to the <literal>if</literal> statement, otherwise it's useless.  Fixes the problem JD was addressing by adding it. (JB)</para></listitem>
</itemizedlist>

<bridgehead id="changes.201" renderas="sect3">Changes in version 2.0.1</bridgehead>
<para>&ultraliberalrssparser; 2.0.1 was released on October 21, 2002.</para>
<itemizedlist>
<listitem><para>changed <function>parse()</function> so that if we don't get anything because of <varname>etag</varname>/<varname>modified</varname>, return the old <varname>etag</varname>/<varname>modified</varname> to the caller to indicate why nothing is being returned</para></listitem>
</itemizedlist>

<bridgehead id="changes.20" renderas="sect3">Changes in version 2.0</bridgehead>
<para>&ultraliberalrssparser; 2.0 was released on October 19, 2002.</para>
<itemizedlist>
<listitem><para>use <varname>inchannel</varname> to watch out for <sgmltag>image</sgmltag> and <sgmltag>textinput</sgmltag> elements which can also contain <sgmltag>title</sgmltag>, <sgmltag>link</sgmltag>, and <sgmltag>description</sgmltag> elements (JD)</para></listitem>
<listitem><para>check for <sgmltag class='attribute'>isPermaLink='false'</sgmltag> attribute on <sgmltag>guid</sgmltag> elements (JD)</para></listitem>
<listitem><para>replaced <function>openAnything</function> with <function>open_resource</function> supporting <constant>ETag</constant> and <constant>If-Modified-Since</constant> request headers (JD)</para></listitem>
<listitem><para><function>parse</function> now accepts <varname>etag</varname>, <varname>modified</varname>, <varname>agent</varname>, and <varname>referrer</varname> optional arguments (JD)</para></listitem>
<listitem><para>modified <function>parse</function> to return a dictionary instead of a tuple so that any <varname>etag</varname> or <varname>modified</varname> information can be returned and cached by the caller</para></listitem>
</itemizedlist>

<bridgehead id="changes.11" renderas="sect3">Changes in version 1.1</bridgehead>
<para>&ultraliberalrssparser; 1.1 was released on September 27, 2002.</para>
<itemizedlist>
<listitem><para>fixed infinite loop on incomplete CDATA sections</para></listitem>
</itemizedlist>

<bridgehead id="changes.10" renderas="sect3">Changes in version 1.0</bridgehead>
<para>&ultraliberalrssparser; 1.0 was released on September 27, 2002.</para>
<itemizedlist>
<listitem><para>fixed namespace processing on prefixed &rss; 2.0 elements</para></listitem>
<listitem><para>added Simon Fell's namespace test suite</para></listitem>
</itemizedlist>

<bridgehead id="changes.first" renderas="sect3">Initial release</bridgehead>
<para>&ultraliberalrssparser; (unversioned) was released on August 13, 2002.</para>
<para><ulink url="http://diveintomark.org/archives/2002/08/13/ultraliberal_rss_parser">Announcement</ulink>:</para>
<blockquote>
<para>Aaron Swartz has been looking for an ultra-liberal &rss; parser. Now that I'm experimenting with a homegrown &rss;-to-email news aggregator, so am I. You see, most &rss; feeds suck. Invalid characters, unescaped ampersands (Blogger feeds), invalid entities (Radio feeds), unescaped and invalid HTML (The Register's feed most days). Or just a bastardized mix of &rss; 0.9x elements with &rss; 1.0 elements (Movable Type feeds).</para>
<para>Then there are feeds, like Aaron's feed, which are too bleeding edge. He puts an excerpt in the description element but puts the full text in the <sgmltag>content:encoded</sgmltag> element (as CDATA). This is valid &rss; 1.0, but nobody actually uses it (except Aaron), few news aggregators support it, and many parsers choke on it. Other parsers are confused by the new elements (<sgmltag>guid</sgmltag>) in &rss; 0.94 (see Dave Winer's feed for an example). And then there's Jon Udell's feed, with the <sgmltag>fullitem</sgmltag> element that he just sort of made up.</para>
<para><filename>rssparser.py</filename>. GPL-licensed. Tested on 5000 active feeds.</para>
</blockquote>
</section>

</chapter>

<chapter id="reference">
<?dbhtml filename="reference.html"?>
<title>Reference</title>
<section id="reference.feed">
<?dbhtml filename="reference-feed.html"?>
<title>feed</title>
<abstract>
<title/>
<para>A dictionary of data about the feed.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed</literal></para></listitem>
<listitem><para><literal>/atom03:feed</literal></para></listitem>
<listitem><para><literal>/rss/channel</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel</literal></para></listitem>
</itemizedlist>
<tip>
<title/>
<para>This element always exists, although it may be an empty dictionary.</para>
</tip>
</section>

<section id="reference.feed.title">
<?dbhtml filename="reference-feed-title.html"?>
<title>feed.title</title>
<abstract>
<title/>
<para>The title of the feed.</para>
</abstract>
&sanitized;
&containsrelativelinks;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:title</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:title</literal></para></listitem>
<listitem><para><literal>/rss/channel/title</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:title</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/rdf:title</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:title</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.title_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.title_detail">
<?dbhtml filename="reference-feed-title_detail.html"?>
<title>feed.title_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the feed title.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:title</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:title</literal></para></listitem>
<listitem><para><literal>/rss/channel/title</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:title</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/rdf:title</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:title</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.title"/></para></listitem>
</itemizedlist>
<section id="reference.feed.title_detail.value">
<title>feed.title_detail.value</title>
<para>Same as <xref linkend="reference.feed.title"/>.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.feed.title_detail.type">
<title>feed.title_detail.type</title>
<para>The content type of the feed title.</para>
&type_details;
</section>
<section id="reference.feed.title_detail.language">
<title>feed.title_detail.language</title>
<para>The language of the feed title.</para>
&language_details;
</section>
<section id="reference.feed.title_detail.base">
<title>feed.title_detail.base</title>
<para>The original base &uri; for links within the feed title.</para>
&base_details;
</section>
</section>

<section id="reference.feed.link">
<?dbhtml filename="reference-feed-link.html"?>
<title>feed.link</title>
<abstract>
<title/>
<para>The &url; of the &html; page associated with this feed.</para>
</abstract>
<para>For site feeds, this is probably the home page of the site.  For category feeds, this is probably the category's archive page.  For search feeds, this is probably the web page that displays the search results for the given search parameters.</para>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:link[@rel="alternate"]/@href</literal></para></listitem>
<listitem><para><literal>/atom10:feed/atom10:link[not(@rel)]/@href</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:link[@rel="alternate"]/@href</literal></para></listitem>
<listitem><para><literal>/rss/channel/link</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/rdf:link</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.links"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.links">
<?dbhtml filename="reference-feed-links.html"?>
<title>feed.links</title>
<abstract>
<title/>
<para>A list of dictionaries with details on the links associated with the feed.  Each link has a <sgmltag class="attribute">rel</sgmltag> (relationship), <sgmltag class="attribute">type</sgmltag> (content type), and <sgmltag class="attribute">href</sgmltag> (the &url; that the link points to).  Some links may also have a <sgmltag class="attribute">title</sgmltag>.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:link</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:link</literal></para></listitem>
<listitem><para><literal>/rss/channel/link</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/rdf:link</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.link"/></para></listitem>
</itemizedlist>
<section id="reference.feed.links.rel">
<title>feed.links[i].rel</title>
<para>The relationship of this feed link.</para>
&listofrelvalues;
</section>
<section id="reference.feed.links.type">
<title>feed.links[i].type</title>
<para>The content type of the page that this feed link points to.</para>
</section>
<section id="reference.feed.links.href">
<title>feed.links[i].href</title>
<para>The &url; of the page that this feed link points to.</para>
&isrelativelink;
</section>
<section id="reference.feed.links.title">
<title>feed.links[i].title</title>
<para>The title of this feed link.</para>
</section>
</section>

<section id="reference.feed.subtitle">
<?dbhtml filename="reference-feed-subtitle.html"?>
<title>feed.subtitle</title>
<abstract>
<title/>
<para>A subtitle, tagline, slogan, or other short description of the feed.</para>
</abstract>
&sanitized;
&containsrelativelinks;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:subtitle</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:tagline</literal></para></listitem>
<listitem><para><literal>/rss/channel/description</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:description</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:subtitle</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/rdf:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:description</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.subtitle_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.subtitle_detail">
<?dbhtml filename="reference-feed-subtitle_detail.html"?>
<title>feed.subtitle_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the feed subtitle.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:subtitle</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:tagline</literal></para></listitem>
<listitem><para><literal>/rss/channel/description</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:description</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:subtitle</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/rdf:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:description</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.subtitle"/></para></listitem>
</itemizedlist>
<section id="reference.feed.subtitle_detail.value">
<title>feed.subtitle_detail.value</title>
<para>Same as <xref linkend="reference.feed.subtitle"/>.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.feed.subtitle_detail.type">
<title>feed.subtitle_detail.type</title>
<para>The content type of the feed subtitle.</para>
&type_details;
</section>
<section id="reference.feed.subtitle_detail.language">
<title>feed.subtitle_detail.language</title>
<para>The language of the feed subtitle.</para>
&language_details;
</section>
<section id="reference.feed.subtitle_detail.base">
<title>feed.subtitle_detail.base</title>
<para>The original base &uri; for links within the feed subtitle.</para>
&base_details;
</section>
</section>

<section id="reference.feed.rights">
<?dbhtml filename="reference-feed-rights.html"?>
<title>feed.rights</title>
<abstract>
<title/>
<para>A human-readable copyright statement for the feed.</para>
</abstract>
&sanitized;
&containsrelativelinks;
<note>
<title/>
<para>For machine-readable copyright information, see <xref linkend="reference.feed.license"/>.</para>
</note>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:rights</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:copyright</literal></para></listitem>
<listitem><para><literal>/rss/channel/copyright</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:rights</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:rights</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.rights_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.rights_detail">
<?dbhtml filename="reference-feed-rights_detail.html"?>
<title>feed.rights_detail</title>
<abstract>
<title/>
<para>A dictionary with details on the feed copyright.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:rights</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:copyright</literal></para></listitem>
<listitem><para><literal>/rss/channel/copyright</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:rights</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:rights</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.rights"/></para></listitem>
</itemizedlist>
<section id="reference.feed.rights_detail.value">
<title>feed.rights_detail.value</title>
<para>Same as <xref linkend="reference.feed.rights"/>.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.feed.rights_detail.type">
<title>feed.rights_detail.type</title>
<para>The content type of the feed copyright.</para>
&type_details;
</section>
<section id="reference.feed.rights_detail.language">
<title>feed.rights_detail.language</title>
<para>The language of the feed copyright.</para>
&language_details;
</section>
<section id="reference.feed.rights_detail.base">
<title>feed.rights_detail.base</title>
<para>The original base &uri; for links within the feed copyright.</para>
&base_details;
</section>
</section>

<section id="reference.feed.generator">
<?dbhtml filename="reference-feed-generator.html"?>
<title>feed.generator</title>
<abstract>
<title/>
<para>A human-readable name of the application used to generate the feed.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:generator</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:generator</literal></para></listitem>
<listitem><para><literal>/rss/channel/generator</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/admin:generatorAgent/@rdf:resource</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.generator_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.generator_detail">
<?dbhtml filename="reference-feed-generator_detail.html"?>
<title>feed.generator_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the feed generator.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:generator</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:generator</literal></para></listitem>
<listitem><para><literal>/rss/channel/generator</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/admin:generatorAgent/@rdf:resource</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.generator"/></para></listitem>
</itemizedlist>
<section id="reference.feed.generator_detail.name">
<title>feed.generator_detail.name</title>
<para>Same as <xref linkend="reference.feed.generator"/>.</para>
</section>
<section id="reference.feed.generator_detail.href">
<title>feed.generator_detail.href</title>
<para>The &url; of the application used to generate the feed.</para>
&isrelativelink;
</section>
<section id="reference.feed.generator_detail.version">
<title>feed.generator_detail.version</title>
<para>The version number of the application used to generate the feed.  There is no required format for this, but most applications use a <literal>MAJOR.MINOR</literal> version number.</para>
</section>
</section>

<section id="reference.feed.info">
<?dbhtml filename="reference-feed-info.html"?>
<title>feed.info</title>
<abstract>
<title/>
<para>Free-form human-readable description of the feed format itself.  Intended for people who view the feed in a browser, to explain what they just clicked on.  This element is generally ignored by feed readers.</para>
</abstract>
&sanitized;
&containsrelativelinks;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom03:feed/atom03:info</literal></para></listitem>
<listitem><para><literal>/rss/channel/feedburner:browserFriendly</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.info_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.info_detail">
<?dbhtml filename="reference-feed-info-detail.html"?>
<title>feed.info_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the feed info.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom03:feed/atom03:info</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.info"/></para></listitem>
</itemizedlist>
<section id="reference.feed.info_detail.value">
<title>feed.info_detail.value</title>
<para>Same as <xref linkend="reference.feed.info"/>.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.feed.info_detail.type">
<title>feed.info_detail.type</title>
<para>The content type of the feed info.</para>
&type_details;
</section>
<section id="reference.feed.info_detail.language">
<title>feed.info_detail.language</title>
<para>The language of the feed info.</para>
&language_details;
</section>
<section id="reference.feed.info_detail.base">
<title>feed.info_detail.base</title>
<para>The original base &uri; for links within the feed copyright.</para>
&base_details;
</section>
</section>

<section id="reference.feed.updated">
<?dbhtml filename="reference-feed-updated.html"?>
<title>feed.updated</title>
<abstract>
<title/>
<para>The date the feed was last updated, as a string in the same format as it was published in the original feed.</para>
</abstract>
<para>This element is &parsedasadate; and stored in <xref linkend="reference.feed.updated_parsed"/>.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:updated</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:modified</literal></para></listitem>
<listitem><para><literal>/rss/channel/pubDate</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:date</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:date</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dcterms:modified</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.updated_parsed"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.updated_parsed">
<?dbhtml filename="reference-feed-updated_parsed.html"?>
<title>feed.updated_parsed</title>
<abstract>
<title/>
<para>The date the feed was last updated, as a standard &python; 9-tuple.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:updated</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:modified</literal></para></listitem>
<listitem><para><literal>/rss/channel/pubDate</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:date</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:date</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dcterms:modified</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.updated"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.id">
<?dbhtml filename="reference-feed-id.html"?>
<title>feed.id</title>
<abstract>
<title/>
<para>A globally unique identifier for this feed.</para>
</abstract>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:id</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:id</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.author">
<?dbhtml filename="reference-feed-author.html"?>
<title>feed.author</title>
<abstract>
<title/>
<para>The author of this feed.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:author</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:author</literal></para></listitem>
<listitem><para><literal>/rss/channel/managingEditor</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:creator</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:author</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:author</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:creator</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:author</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.author_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.author_detail">
<?dbhtml filename="reference-feed-author_detail.html"?>
<title>feed.author_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the feed author.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:author</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:author</literal></para></listitem>
<listitem><para><literal>/rss/channel/managingEditor</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:creator</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:author</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:author</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:creator</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:author</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.author"/></para></listitem>
</itemizedlist>
<section id="reference.feed.author_detail.name">
<title>feed.author_detail.name</title>
<para>The name of the feed author.</para>
</section>
<section id="reference.feed.author_detail.href">
<title>feed.author_detail.href</title>
<para>The &url; of the feed author.  This can be the author's home page, or a contact page with a webmail form.</para>
&isrelativelink;
</section>
<section id="reference.feed.author_detail.email">
<title>feed.author_detail.email</title>
<para>The email address of the feed author.</para>
</section>
</section>

<section id="reference.feed.contributors">
<?dbhtml filename="reference-feed-contributors.html"?>
<title>feed.contributors</title>
<abstract>
<title/>
<para>A list of contributors (secondary authors) to this feed.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:contributor</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:contributor</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:contributor</literal></para></listitem>
</itemizedlist>
<section id="reference.feed.contributors.name">
<title>feed.contributors[i].name</title>
<para>The name of this contributor.</para>
</section>
<section id="reference.feed.contributors.href">
<title>feed.contributors[i].href</title>
<para>The &url; of this contributor.  This can be the contributor's home page, or a contact page with a webmail form.</para>
&isrelativelink;
</section>
<section id="reference.feed.contributors.email">
<title>feed.contributors[i].email</title>
<para>The email address of this contributor.</para>
</section>
</section>

<section id="reference.feed.image">
<?dbhtml filename="reference-feed-image.html"?>
<title>feed.image</title>
<abstract>
<title/>
<para>A dictionary with details about the feed image.  A feed image can be a logo, banner, or a picture of the author.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/image</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:image</literal></para></listitem>
</itemizedlist>
<section id="reference.feed.image.title">
<title>feed.image.title</title>
<para>The alternate text of the feed image, which would go in the <sgmltag class="attribute">alt</sgmltag> attribute if you rendered the feed image as an &html; <sgmltag>img</sgmltag> element.</para>
</section>
<section id="reference.feed.image.href">
<title>feed.image.href</title>
<para>The &url; of the feed image itself, which would go in the <sgmltag class="attribute">src</sgmltag> attribute if you rendered the feed image as an &html; <sgmltag>img</sgmltag> element.</para>
&isrelativelink;
</section>
<section id="reference.feed.image.link">
<title>feed.image.link</title>
<para>The &url; which the feed image would point to.  If you rendered the feed image as an &html; <sgmltag>img</sgmltag> element, you would wrap it in an <sgmltag>a</sgmltag> element and put this in the <sgmltag class="attribute">href</sgmltag> attribute.</para>
&isrelativelink;
</section>
<section id="reference.feed.image.width">
<title>feed.image.width</title>
<para>The width of the feed image, which would go in the <sgmltag class="attribute">width</sgmltag> attribute if you rendered the feed image as an &html; <sgmltag>img</sgmltag> element.</para>
</section>
<section id="reference.feed.image.height">
<title>feed.image.height</title>
<para>The height of the feed image, which would go in the <sgmltag class="attribute">height</sgmltag> attribute if you rendered the feed image as an &html; <sgmltag>img</sgmltag> element.</para>
</section>
<section id="reference.feed.image.description">
<title>feed.image.description</title>
<para>A short description of the feed image, which would go in the <sgmltag class="attribute">title</sgmltag> attribute if you rendered the feed image as an &html; <sgmltag>img</sgmltag> element.  This element is rare; it was available in Netscape &rss; 0.91 but was dropped from Userland &rss; 0.91.</para>
</section>
<section id="reference.feed.image.example">
<title>Annotated example</title>
<para>This is a feed image:</para>
<informalexample><programlisting>&lt;image>
  &lt;title>Feed logo&lt;/title>
  &lt;url>http://example.org/logo.png&lt;/url>
  &lt;link>http://example.org/&lt;/link>
  &lt;width>80&lt;/width>
  &lt;height>15&lt;/height>
  &lt;description>Visit my home page&lt;/description>
&lt;/image></programlisting></informalexample>
<para>This feed image could be rendered in &html; as this:</para>
<informalexample><programlisting>&lt;a href="http://example.org/">
  &lt;img src="http://example.org/logo.png"
       width="80"
       height="15"
       alt="Feed logo"
       title="Visit my home page">
&lt;/a></programlisting></informalexample>
</section>

</section>

<section id="reference.feed.icon">
<?dbhtml filename="reference-feed-icon.html"?>
<title>feed.icon</title>
<abstract>
<title/>
<para>A URL to a small icon representing the feed.</para>
</abstract>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:icon</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.logo">
<?dbhtml filename="reference-feed-logo.html"?>
<title>feed.icon</title>
<abstract>
<title/>
<para>A URL to a graphic representing a logo for the feed.</para>
</abstract>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:logo</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.textinput">
<?dbhtml filename="reference-feed-textinput.html"?>
<title>feed.textinput</title>
<abstract>
<title/>
<para>A text input form.  No one actually uses this.  Why are you?</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/textInput</literal></para></listitem>
<listitem><para><literal>/rss/channel/textinput</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:textinput</literal></para></listitem>
</itemizedlist>
<section id="reference.feed.textinput.title">
<title>feed.textinput.title</title>
<para>The title of the text input form, which would go in the <sgmltag class="attribute">value</sgmltag> attribute of the form's submit button.</para>
</section>
<section id="reference.feed.textinput.link">
<title>feed.textinput.link</title>
<para>The link of the script which processes the text input form, which would go in the <sgmltag class="attribute">action</sgmltag> attirbute of the form.</para>
&isrelativelink;
</section>
<section id="reference.feed.textinput.name">
<title>feed.textinput.name</title>
<para>The name of the text input box in the form, which would go in the <sgmltag class="attribute">name</sgmltag> attribute of the form's input box.</para>
</section>
<section id="reference.feed.textinput.description">
<title>feed.textinput.description</title>
<para>A short description of the text input form, which would go in the <sgmltag>label</sgmltag> element of the form.</para>
</section>
<section>
<title>Annotated example</title>
<para>This is a text input in a feed:</para>
<informalexample><programlisting>&lt;textInput>
  &lt;title>Go!&lt;/title>
  &lt;link>http://example.org/search&lt;/link>
  &lt;name>keyword&lt;/name>
  &lt;description>Search this site:&lt;/description>
&lt;/textInput></programlisting></informalexample>
<para>This is how it could be rendered in &html;:</para>
<informalexample><programlisting>&lt;form method="get" action="http://example.org/search">
  &lt;label for="keyword">Search this site:&lt;/label>
  &lt;input type="text" id="keyword" name="keyword" value="">
  &lt;input type="submit" value="Go!">
&lt;/form></programlisting></informalexample>
</section>
</section>

<section id="reference.feed.cloud">
<?dbhtml filename="reference-feed-cloud.html"?>
<title>feed.cloud</title>
<abstract>
<title/>
<para>No one really knows what a cloud is.  It is vaguely documented in <ulink url="&url_cloud;">&soap; meets &rss;</ulink>.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/cloud</literal></para></listitem>
</itemizedlist>
<section id="reference.feed.cloud.domain">
<title>feed.cloud.domain</title>
<para>The domain of the cloud.  Should be just the domain name, not including the <literal>http://</literal> protocol.  All clouds are presumed to operate over &http;.  The cloud specification does not support secure clouds over &https;, nor can clouds operate over other protocols.</para>
</section>
<section id="reference.feed.cloud.port">
<title>feed.cloud.port</title>
<para>The port of the cloud.  Should be an integer, but &feedparser; currently returns it as a string.</para>
</section>
<section id="reference.feed.cloud.path">
<title>feed.cloud.path</title>
<para>The &url; path of the cloud.</para>
</section>
<section id="reference.feed.cloud.registerProcedure">
<title>feed.cloud.registerProcedure</title>
<para>The name of the procedure to call on the cloud.</para>
</section>
<section id="reference.feed.cloud.protocol">
<title>feed.cloud.protocol</title>
<para>The protocol of the cloud.  Documentation differs on what the acceptable values are.  Acceptable values definitely include <literal>xml-rpc</literal> and <literal>soap</literal>, although only in lowercase, despite both being acronyms.</para>
<para>There is no way for a publisher to specify the version number of the protocol to use.  <literal>soap</literal> refers to &soap; 1.1; the cloud interface does not support &soap; 1.0 or 1.2.</para>
<para><literal>post</literal> or <literal>http-post</literal> might also be acceptable values; nobody really knows for sure.</para>
</section>
</section>

<section id="reference.feed.publisher">
<?dbhtml filename="reference-feed-publisher.html"?>
<title>feed.publisher</title>
<abstract>
<title/>
<para>The publisher of the feed.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/webMaster</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:publisher</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:owner</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:publisher</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.publisher_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.publisher_detail">
<?dbhtml filename="reference-feed-publisher_detail.html"?>
<title>feed.publisher_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the feed publisher.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/webMaster</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:publisher</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:owner</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:publisher</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.feed.publisher"/></para></listitem>
</itemizedlist>
<section id="reference.feed.publisher_detail.name">
<title>feed.publisher_detail.name</title>
<para>The name of this feed's publisher.</para>
</section>
<section id="reference.feed.publisher_detail.href">
<title>feed.publisher_detail.href</title>
<para>The &url; of this feed's publisher.  This can be the publisher's home page, or a contact page with a webmail form.</para>
&isrelativelink;
</section>
<section id="reference.feed.publisher_detail.email">
<title>feed.publisher_detail.email</title>
<para>The email address of this feed's publisher.</para>
</section>
</section>

<section id="reference.feed.tags">
<?dbhtml filename="reference-feed-tags.html"?>
<title>feed.tags</title>
<abstract>
<title/>
<para>A list of dictionaries that contain details of the categories for the feed.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/category</literal></para></listitem>
<listitem><para><literal>/atom03:feed/dc:subject</literal></para></listitem>
<listitem><para><literal>/rss/channel/category</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:subject</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:category</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:keywords</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:subject</literal></para></listitem>
</itemizedlist>
<note>
<title/>
&tagshistory;
</note>
<section id="reference.feed.tags.term">
<title>feed.tags[i].term</title>
<para>The category term (keyword).</para>
</section>
<section id="reference.feed.tags.scheme">
<title>feed.tags[i].scheme</title>
<para>The category scheme (domain).</para>
</section>
<section id="reference.feed.tags.label">
<title>feed.tags[i].label</title>
<para>A human-readable label for the category.</para>
</section>
</section>

<section id="reference.feed.docs">
<?dbhtml filename="reference-feed-docs.html"?>
<title>feed.docs</title>
<abstract>
<title/>
<para>A &url; pointing to the specification which this feed conforms to.</para>
</abstract>
<para>This element is rare.  The reasoning was that in 25 years, someone will stumble on an &rss; feed and not know what it is, so we should waste everyone's bandwidth with useless links until then.  Most publishers skip it, and all clients ignore it.</para>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/docs</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.ttl">
<?dbhtml filename="reference-feed-ttl.html"?>
<title>feed.ttl</title>
<abstract>
<title/>
<para>According to the &rss; specification, <quote><sgmltag>ttl</sgmltag> stands for time to live.  It's a number of minutes that indicates how long a channel can be cached before refreshing from the source. This makes it possible for &rss; sources to be managed by a file-sharing network such as Gnutella.</quote></para>
</abstract>
<para>No one is quite sure what this means, and no one publishes feeds via file-sharing networks.</para>
<para>Some clients have interpreted this element to be some sort of inline caching mechanism, albeit one that completely ignores the underlying &http; protocol, its robust caching mechanisms, and the huge amount of &http;-savvy network infrastructure that understands them.  Given the vague documentation, it is impossible to say that this interpretation is any more ridiculous than the element itself.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/ttl</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.language">
<?dbhtml filename="reference-feed-language.html"?>
<title>feed.language</title>
<abstract>
<title/>
<para>The primary language of the feed.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/@xml:lang</literal></para></listitem>
<listitem><para><literal>/atom03:feed/@xml:lang</literal></para></listitem>
<listitem><para><literal>/rss/channel/language</literal></para></listitem>
<listitem><para><literal>/rss/channel/dc:language</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/dc:language</literal></para></listitem>
</itemizedlist>
<!--
xxx
<note>
<title/>
<para>See <xref linkend="advanced.lang"/> for more details on language elements, attributes, and inheritance.</para>
</note>
-->
</section>

<section id="reference.feed.license">
<?dbhtml filename="reference-feed-license.html"?>
<title>feed.license</title>
<abstract>
<title/>
<para>A &url; of the license under which this feed is distributed.</para>
</abstract>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/creativeCommons:license</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/cc:license/@rdf:resource</literal></para></listitem>
<listitem><para><literal>/atom10:feed/atom10:link[@rel="license"]/@href</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.feed.errorreportsto">
<?dbhtml filename="reference-feed-errorreportsto.html"?>
<title>feed.errorreportsto</title>
<abstract>
<title/>
<para>An email address for reporting errors in the feed itself.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rdf:RDF/admin:errorReportsTo/@rdf:resource</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry">
<?dbhtml filename="reference-entry.html"?>
<title>entries</title>
<abstract>
<title/>
<para>A list of dictionaries.  Each dictionary contains data from a different entry.  Entries are listed in the order in which they appear in the original feed.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry</literal></para></listitem>
<listitem><para><literal>/rss/channel/item</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item</literal></para></listitem>
</itemizedlist>
<tip>
<title/>
<para>This element always exists, although it may be an empty list.</para>
</tip>
</section>

<section id="reference.entry.title">
<?dbhtml filename="reference-entry-title.html"?>
<title>entries[i].title</title>
<abstract>
<title/>
<para>The title of the entry.</para>
</abstract>
&sanitized;
&containsrelativelinks;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:title</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:title</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/title</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:title</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/rdf:title</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:title</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.title_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.title_detail">
<?dbhtml filename="reference-entry-title_detail.html"?>
<title>entries[i].title_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the entry title.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:title</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:title</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/title</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:title</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/rdf:title</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:title</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.title"/></para></listitem>
</itemizedlist>
<section id="reference.entry.title_detail.value">
<title>entries[i].title_detail.value</title>
<para>Same as <xref linkend="reference.entry.title"/>.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.entry.title_detail.type">
<title>entries[i].title_detail.type</title>
<para>The content type of the entry title.</para>
&type_details;
</section>
<section id="reference.entry.title_detail.language">
<title>entries[i].title_detail.language</title>
<para>The language of the entry title.</para>
&language_details;
</section>
<section id="reference.entry.title_detail.base">
<title>entries[i].title_detail.base</title>
<para>The original base &uri; for links within the entry title.</para>
&base_details;
</section>
</section>

<section id="reference.entry.link">
<?dbhtml filename="reference-entry-link.html"?>
<title>entries[i].link</title>
<abstract>
<title/>
<para>The primary link of this entry.  Most feeds use this as the permanent link to the entry in the site's archives.</para>
</abstract>
&isrelativelink;
<para>Some &rss; feeds use <sgmltag>guid</sgmltag> when they mean <sgmltag>link</sgmltag>.  <sgmltag>guid</sgmltag> can also be used as an opaque identifier that has nothing to do with links.  If an &rss; feed uses <sgmltag>guid</sgmltag> as the entry link and no <sgmltag>link</sgmltag> is present, &feedparser; detects this and makes the <sgmltag>guid</sgmltag> available in <varname>d.entries[i].link</varname>.</para>

<para>In other words, <emphasis>you can always use <varname>d.entries[i].link</varname> to get the entry link</emphasis>, regardless of how the feed is actually structured.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:link[@rel="alternate"]/@href</literal></para></listitem>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:link[not(@rel)]/@href</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:link[@rel="alternate"]/@href</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/link</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/rdf:link</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.links"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.links">
<?dbhtml filename="reference-entry-links.html"?>
<title>entries[i].links</title>
<abstract>
<title/>
<para>A list of dictionaries with details on the links associated with the feed.  Each link has a <sgmltag class="attribute">rel</sgmltag> (relationship), <sgmltag class="attribute">type</sgmltag> (content type), and <sgmltag class="attribute">href</sgmltag> (the &url; that the link points to).  Some links may also have a <sgmltag class="attribute">title</sgmltag>.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:link</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:link</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/link</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/rdf:link</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.link"/></para></listitem>
</itemizedlist>
<section id="reference.entry.links.rel">
<title>entries[i].links[j].rel</title>
<para>The relationship of this entry link.</para>
&listofrelvalues;
</section>
<section id="reference.entry.links.type">
<title>entries[i].links[j].type</title>
<para>The content type of the page that this entry link points to.</para>
</section>
<section id="reference.entry.links.href">
<title>entries[i].links[j].href</title>
<para>The &url; of the page that this entry link points to.</para>
&isrelativelink;
</section>
<section id="reference.entry.links.title">
<title>entries[i].links[j].title</title>
<para>The title of this entry link.</para>
</section>
</section>

<section id="reference.entry.summary">
<?dbhtml filename="reference-entry-summary.html"?>
<title>entries[i].summary</title>
<abstract>
<title/>
<para>A summary of the entry.</para>
</abstract>
&sanitized;
&containsrelativelinks;
<para>Some publishing systems auto-generate this value from the first few words or first paragraph of the entry.  Other publishing systems misuse it to include the full content.  In the latter cases, &feedparser; ought to detect it and put the value in <xref linkend="reference.entry.content"/> instead, but it doesn't.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:summary</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:summary</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/description</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/rdf:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:description</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.summary_detail"/></para></listitem>
</itemizedlist>
<note>
<title/>
<para>Some feeds include both a <literal>summary</literal> and <literal>description</literal> element for each entry.  In this case, the first element will be available in <varname>entry['summary']</varname> and the second will be available in <varname>entry['content'][0]</varname>.</para>
</note>
</section>

<section id="reference.entry.summary_detail">
<?dbhtml filename="reference-entry-summary_detail.html"?>
<title>entries[i].summary_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the entry summary.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:summary</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:summary</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/description</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/rdf:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:description</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.summary"/></para></listitem>
</itemizedlist>
<section id="reference.entry.summary_detail.value">
<title>entries[i].summary_detail.value</title>
<para>Same as <xref linkend="reference.entry.summary"/>.</para>
&sanitized;
&containsrelativelinks;
&parsedformicroformats;
</section>
<section id="reference.entry.summary_detail.type">
<title>entries[i].summary_detail.type</title>
<para>The content type of the entry summary.</para>
&type_details;
</section>
<section id="reference.entry.summary_detail.language">
<title>entries[i].summary_detail.language</title>
<para>The language of the entry summary.</para>
&language_details;
</section>
<section id="reference.entry.summary_detail.base">
<title>entries[i].summary_detail.base</title>
<para>The original base &uri; for links within the entry summary.</para>
&base_details;
</section>
</section>

<section id="reference.entry.content">
<?dbhtml filename="reference-entry-content.html"?>
<title>entries[i].content</title>
<abstract>
<title/>
<para>A list of dictionaries with details about the full content of the entry.</para>
</abstract>
<para>&atom; feeds may contain multiple <sgmltag>content</sgmltag> elements.  Clients should render as many of them as possible, based on the <sgmltag class="attribute">type</sgmltag> and the client's abilities.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:content</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:content</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/content:encoded</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/body</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/xhtml:body</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/fullitem</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/content:encoded</literal></para></listitem>
</itemizedlist>
<section id="reference.entry.content.value">
<title>entries[i].content[j].value</title>
<para>The value of this piece of content.</para>
&sanitized;
&containsrelativelinks;
&parsedformicroformats;
</section>
<section id="reference.entry.content.type">
<title>entries[i].content[j].type</title>
<para>The content type of this piece of content.</para>
&type_details;
</section>
<section id="reference.entry.content.language">
<title>entries[i].content[j].language</title>
<para>The language of this piece of content.</para>
&language_details;
</section>
<section id="reference.entry.content.base">
<title>entries[i].content[j].base</title>
<para>The original base &uri; for links within this piece of content.</para>
&base_details;
</section>
</section>

<section id="reference.entry.published">
<?dbhtml filename="reference-entry-published.html"?>
<title>entries[i].published</title>
<abstract>
<title/>
<para>The date this entry was first published, as a string in the same format as it was published in the original feed.</para>
</abstract>
<para>This element is &parsedasadate; and stored in <xref linkend="reference.entry.published_parsed"/>.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:published</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:issued</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dcterms:issued</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dcterms:issued</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.published_parsed"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.published_parsed">
<?dbhtml filename="reference-entry-published_parsed.html"?>
<title>entries[i].published_parsed</title>
<abstract>
<title/>
<para>The date this entry was first published, as a standard &python; 9-tuple.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:published</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:issued</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dcterms:issued</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dcterms:issued</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.published"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.updated">
<?dbhtml filename="reference-entry-updated.html"?>
<title>entries[i].updated</title>
<abstract>
<title/>
<para>The date this entry was last updated, as a string in the same format as it was published in the original feed).</para>
</abstract>
<para>This element is &parsedasadate; and stored in <xref linkend="reference.entry.updated_parsed"/>.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:updated</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:modified</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/pubDate</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:date</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dcterms:modified</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:date</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dcterms:modified</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.updated_parsed"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.updated_parsed">
<?dbhtml filename="reference-entry-updated_parsed.html"?>
<title>entries[i].updated_parsed</title>
<abstract>
<title/>
<para>The date this entry was last updated, as a standard &python; 9-tuple.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:updated</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:modified</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/pubDate</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:date</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dcterms:modified</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:date</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dcterms:modified</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.updated"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.created">
<?dbhtml filename="reference-entry-created.html"?>
<title>entries[i].created</title>
<abstract>
<title/>
<para>The date this entry was first created (drafted), as a string in the same format as it was published in the original feed).</para>
</abstract>
<para>This element is &parsedasadate; and stored in <xref linkend="reference.entry.created_parsed"/>.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:created</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dcterms:created</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dcterms:created</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.created_parsed"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.created_parsed">
<?dbhtml filename="reference-entry-created_parsed.html"?>
<title>entries[i].created_parsed</title>
<abstract>
<title/>
<para>The date this entry was first created (drafted), as a standard &python; 9-tuple.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:created</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dcterms:created</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dcterms:created</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.created"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.expired">
<?dbhtml filename="reference-entry-expired.html"?>
<title>entries[i].expired</title>
<abstract>
<title/>
<para>The date this entry is set to expire, as a string in the same format as it was published in the original feed).</para>
</abstract>
<para>This element is &parsedasadate; and stored in <xref linkend="reference.entry.expired_parsed"/>.</para>
<para>This element is rare.  It only existed in &rss; 0.93, and it was never widely implemented by publishers.  Most clients ignore it in favor of user-defined expiration algorithms.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/item/expirationDate</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.expired_parsed"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.expired_parsed">
<?dbhtml filename="reference-entry-expired_parsed.html"?>
<title>entries[i].expired_parsed</title>
<abstract>
<title/>
<para>The date this entry is set to expire, as a standard &python; 9-tuple.</para>
</abstract>
<para>This element is rare.  It only existed in &rss; 0.93, and it was never widely implemented by publishers.  Most clients ignore it in favor of user-defined expiration algorithms.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/item/expirationDate</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.expired"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.id">
<?dbhtml filename="reference-entry-id.html"?>
<title>entries[i].id</title>
<abstract>
<title/>
<para>A globally unique identifier for this entry.</para>
</abstract>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:id</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:id</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/guid</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/@rdf:about</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.author">
<?dbhtml filename="reference-entry-author.html"?>
<title>entries[i].author</title>
<abstract>
<title/>
<para>The author of this entry.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:author</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:author</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:creator</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:author</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:author</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:creator</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:author</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.author_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.author_detail">
<?dbhtml filename="reference-entry-author_detail.html"?>
<title>entries[i].author_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the author of this entry.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:author</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:author</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:creator</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:author</literal></para></listitem>
<listitem><para><literal>/rss/channel/itunes:author</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:creator</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:author</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.author"/></para></listitem>
</itemizedlist>
<section id="reference.entry.author_detail.name">
<title>entries[i].author_detail.name</title>
<para>The name of this entry's author.</para>
</section>
<section id="reference.entry.author_detail.href">
<title>entries[i].author_detail.href</title>
<para>The &url; of this entry's author.  This can be the author's home page, or a contact page with a webmail form.</para>
&isrelativelink;
</section>
<section id="reference.entry.author_detail.email">
<title>entries[i].author_detail.email</title>
<para>The email address of this entry's author.</para>
</section>
</section>

<section id="reference.entry.contributors">
<?dbhtml filename="reference-entry-contributors.html"?>
<title>entries[i].contributors</title>
<abstract>
<title/>
<para>A list of contributors (secondary authors) to this entry.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:contributor</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:contributor</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:contributor</literal></para></listitem>
</itemizedlist>
<section id="reference.entry.contributors.name">
<title>entries[i].contributors[j].name</title>
<para>The name of this contributor.</para>
</section>
<section id="reference.entry.contributors.href">
<title>entries[i].contributors[j].href</title>
<para>The &url; of this contributor.  This can be the contributor's home page, or a contact page with a webmail form.</para>
&isrelativelink;
</section>
<section id="reference.entry.contributors.email">
<title>entries[i].contributors[j].email</title>
<para>The email address of this contributor.</para>
</section>
</section>

<section id="reference.entry.enclosures">
<?dbhtml filename="reference-entry-enclosures.html"?>
<title>entries[i].enclosures</title>
<abstract>
<title/>
<para>A list of links to external files associated with this entry.</para>
</abstract>
<para>Some aggregators automatically download enclosures (although this technique has <ulink url="&url_enclosure_problems;">known problems</ulink>).  Some aggregators render each enclosure as a link.  Most aggregators ignore them.</para>
<para>The &rss; specification states that there can be at most one enclosure per item.  However, because some feeds break this rule, &feedparser; captures all of them and makes them available as a list.</para>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:link[@rel="enclosure"]</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/enclosure</literal></para></listitem>
<listitem><para><link linkend="advanced.microformats.relenclosure">Certain links within embedded markup</link></para></listitem>

</itemizedlist>
<section id="reference.entry.enclosures.href">
<title>entries[i].enclosures[j].href</title>
<para>The &url; of the linked file.</para>
&isrelativelink;
</section>
<section id="reference.entry.enclosures.length">
<title>entries[i].enclosures[j].length</title>
<para>The length of the linked file.</para>
</section>
<section id="reference.entry.enclosures.type">
<title>entries[i].enclosures[j].type</title>
<para>The content type of the linked file.</para>
</section>
</section>

<section id="reference.entry.publisher">
<?dbhtml filename="reference-entry-publisher.html"?>
<title>entries[i].publisher</title>
<abstract>
<title/>
<para>The publisher of the entry.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/item/dc:publisher</literal></para></listitem>
<listitem><para><literal>/rss/item/itunes:owner</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:publisher</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.publisher_detail"/></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.publisher_detail">
<?dbhtml filename="reference-entry-publisher_detail.html"?>
<title>entries[i].publisher_detail</title>
<abstract>
<title/>
<para>A dictionary with details about the entry publisher.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/item/dc:publisher</literal></para></listitem>
<listitem><para><literal>/rss/item/itunes:owner</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:publisher</literal></para></listitem>
</itemizedlist>
<itemizedlist role="seealso">
<title>See also</title>
<listitem><para><xref linkend="reference.entry.publisher"/></para></listitem>
</itemizedlist>
<section id="reference.entry.publisher_detail.name">
<title>entries[i].publisher_detail.name</title>
<para>The name of this entry's publisher.</para>
</section>
<section id="reference.entry.publisher_detail.href">
<title>entries[i].publisher_detail.href</title>
<para>The &url; of this entry's publisher.  This can be the publisher's home page, or a contact page with a webmail form.</para>
&isrelativelink;
</section>
<section id="reference.entry.publisher_detail.email">
<title>entries[i].publisher_detail.email</title>
<para>The email address of this entry's publisher.</para>
</section>
</section>

<section id="reference.entry.tags">
<?dbhtml filename="reference-entry-tags.html"?>
<title>entries[i].tags</title>
<abstract>
<title/>
<para>A list of dictionaries that contain details of the categories for the entry.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/category</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/dc:subject</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/category</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:subject</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/itunes:category</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/itunes:keywords</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:channel/rdf:item/dc:subject</literal></para></listitem>
</itemizedlist>
<note>
<title/>
&tagshistory;
</note>
<section id="reference.entry.tags.term">
<title>entries[i].tags[j].term</title>
<para>The category term (keyword).</para>
</section>
<section id="reference.entry.tags.scheme">
<title>entries[i].tags[j].scheme</title>
<para>The category scheme (domain).</para>
</section>
<section id="reference.entry.tags.label">
<title>entries[i].tags[j].label</title>
<para>A human-readable label for the category.</para>
</section>
</section>

<section id="reference.entry.source">
<?dbhtml filename="reference-entry-source.html"?>
<title>entries[i].source</title>
<abstract>
<title/>
<para>A dictionary with details about the source of the entry.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:source</literal></para></listitem>
</itemizedlist>
<section id="reference.entry.source.author">
<title>entries[i].source.author</title>
<para>The author of the source of this entry.</para>
</section>
<section id="reference.entry.source.author_detail">
<title>entries[i].source.author_detail</title>
<para>A dictionary containing details about the author of the source of this entry.</para>
<section id="reference.entry.source.author_detail.name">
<title>entries[i].source.author_detail.name</title>
<para>The name of the author of the source of this entry.</para>
</section>
<section id="reference.entry.source.author_detail.href">
<title>entries[i].source.author_detail.href</title>
<para>The &url; of the author of the source of this entry.  This can be the author's home page, or a contact page with a webmail form.</para>
&isrelativelink;
</section>
<section id="reference.entry.source.author_detail.email">
<title>entries[i].source.author_detail.email</title>
<para>The email address of the author of the source of this entry.</para>
</section>
</section>
<section id="reference.entry.source.contributors">
<title>entries[i].source.contributors</title>
<para>A list of contributors to the source of this entry.</para>
<section id="reference.entry.source.contributors.name">
<title>entries[i].source.contributors[j].name</title>
<para>The name of a contributor to the source of this entry.</para>
</section>
<section id="reference.entry.source.contributors.href">
<title>entries[i].source.contributors[j].href</title>
<para>The &url; of a contributor to the source of this entry.  This can be the contributor's home page, or a contact page with a webmail form.</para>
&isrelativelink;
</section>
<section id="reference.entry.source.contributors.email">
<title>entries[i].source.contributors[j].email</title>
<para>The email address of a contributor to the source of this entry.</para>
</section>
</section>
<section id="reference.entry.source.icon">
<title>entries[i].source.icon</title>
<para>The &url; of an icon representing the source of this entry.</para>
&isrelativelink;
</section>
<section id="reference.entry.source.id">
<title>entries[i].source.id</title>
<para>A globally unique identifier for the source of this entry.</para>
</section>
<section id="reference.entry.source.link">
<title>entries[i].source.link</title>
<para>The primary permanent link of the source of this entry</para>
</section>
<section id="reference.entry.source.links">
<title>entries[i].source.links</title>
<para>A list of all links defined by the source of this entry.</para>
<section id="reference.entry.source.links.rel">
<title>entries[i].source.links[j].rel</title>
<para>The relationship of a link defined by the source of this entry.</para>
&listofrelvalues;
</section>
<section id="reference.entry.source.links.type">
<title>entries[i].source.links[j].type</title>
<para>The content type of the page pointed to by a link defined by the source of this entry.</para>
</section>
<section id="reference.entry.source.links.href">
<title>entries[i].source.links[j].href</title>
<para>The &url; of the page pointed to by a link defined by the source of this entry.</para>
&isrelativelink;
</section>
<section id="reference.entry.source.links.title">
<title>entries[i].source.links[j].title</title>
<para>The title of a link defined by the source of this entry.</para>
</section>
</section>
<section id="reference.entry.source.logo">
<title>entries[i].source.logo</title>
<para>The &url; of a logo representing the source of this entry.</para>
&isrelativelink;
</section>
<section id="reference.entry.source.rights">
<title>entries[i].source.rights</title>
<para>A human-readable copyright statement for the source of this entry.</para>
</section>
<section id="reference.entry.source.rights_detail">
<title>entries[i].source.rights_detail</title>
<para>A dictionary containing details about the copyright statement for the source of this entry.</para>
<section id="reference.entry.source.rights_detail.value">
<title>entries[i].source.rights_detail.value</title>
<para>Same as <xref linkend="reference.entry.source.rights"/>.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.entry.source.rights_detail.type">
<title>entries[i].source.rights_detail.type</title>
<para>The content type of the copyright statement for the source of this entry.</para>
&type_details;
</section>
<section id="reference.entry.source.rights_detail.language">
<title>entries[i].source.rights_detail.language</title>
<para>The language of the copyright statement for the source of this entry.</para>
&language_details;
</section>
<section id="reference.entry.source.rights_detail.base">
<title>entries[i].source.rights_detail.base</title>
<para>The original base &uri; for links within the copyright statement for the source of this entry.</para>
&base_details;
</section>
</section>
<section id="reference.entry.source.subtitle">
<title>entries[i].source.subtitle</title>
<para>A subtitle, tagline, slogan, or other short description of the source of this entry.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.entry.source.subtitle_details">
<title>entries[i].source.subtitle_detail</title>
<para>A dictionary containing details about the subtitle for the source of this entry.</para>
<section id="reference.entry.source.subtitle_detail.value">
<title>entries[i].source.subtitle_detail.value</title>
<para>Same as <xref linkend="reference.entry.source.subtitle"/>.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.entry.source.subtitle_detail.type">
<title>entries[i].source.subtitle_detail.type</title>
<para>The content type of the subtitle of the source of this entry.</para>
&type_details;
</section>
<section id="reference.entry.source.subtitle_detail.language">
<title>entries[i].source.subtitle_detail.language</title>
<para>The language of the subtitle of the source of this entry.</para>
&language_details;
</section>
<section id="reference.entry.source.subtitle_detail.base">
<title>entries[i].source.subtitle_detail.base</title>
<para>The original base &uri; for links within the subtitle of the source of this entry.</para>
&base_details;
</section>
</section>
<section id="reference.entry.source.title">
<title>entries[i].source.title</title>
<para>The title of the source of this entry.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.entry.source.title_details">
<title>entries[i].source.title_detail</title>
<para>A dictionary containing details about the title for the source of this entry.</para>
<section id="reference.entry.source.title_detail.value">
<title>entries[i].source.title_detail.value</title>
<para>Same as <xref linkend="reference.entry.source.title"/>.</para>
&sanitized;
&containsrelativelinks;
</section>
<section id="reference.entry.source.title_detail.type">
<title>entries[i].source.title_detail.type</title>
<para>The content type of the title of the source of this entry.</para>
&type_details;
</section>
<section id="reference.entry.source.title_detail.language">
<title>entries[i].source.title_detail.language</title>
<para>The language of the title of the source of this entry.</para>
&language_details;
</section>
<section id="reference.entry.source.title_detail.base">
<title>entries[i].source.title_detail.base</title>
<para>The original base &uri; for links within the title of the source of this entry.</para>
&base_details;
</section>
</section>
<section id="reference.entry.source.updated">
<title>entries[i].source.updated</title>
<para>The date the source of this entry was last updated, as a string in the same format as it was published in the original feed.</para>
<para>This element is &parsedasadate; and stored in <xref linkend="reference.entry.source.updated_parsed"/>.</para>
</section>
<section id="reference.entry.source.updated_parsed">
<title>entries[i].source.updated_parsed</title>
<para>The date this entry was last updated, as a standard &python; 9-tuple.</para>
</section>
</section>

<section id="reference.entry.comments">
<?dbhtml filename="reference-entry-comments.html"?>
<title>entries[i].comments</title>
<abstract>
<title/>
<para>A &url; of the &html; comment submission page associated with this entry.</para>
</abstract>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/item/comments</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.license">
<?dbhtml filename="reference-entry-license.html"?>
<title>entries[i].license</title>
<abstract>
<title/>
<para>A &url; of the license under which this entry is distributed.</para>
</abstract>
&isrelativelink;
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/rss/channel/item/creativeCommons:license</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/cc:license/@rdf:resource</literal></para></listitem>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:link[@rel="license"]/@href</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.entry.xfn">
<?dbhtml filename="reference-entry-xfn.html"?>
<title>entries[i].xfn</title>
<abstract>
<title/>
<para>A list of <link linkend="advanced.microformats.xfn">&xfn; relationships</link> found in this entry's &html; content.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:summary</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:summary</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/description</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/rdf:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:description</literal></para></listitem>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:content</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:content</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/content:encoded</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/body</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/xhtml:body</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/fullitem</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/content:encoded</literal></para></listitem>
</itemizedlist>

<para><literal>entries[i].xfn</literal> is a list.  Each list item represents a single person and may contain the following values:</para>

<section id="reference.entry.xfn.relationships">
<title>entries[i].xfn[j].relationships</title>
<para>A list of relationships for this person.  Each list item is a string, either one of the constants defined in the <ulink url="&url_xfn_profile;">&xfn; 1.1 profile</ulink> or <link linkend="advanced.microformats.xfn">one of these variations</link>.</para>
</section>

<section id="reference.entry.xfn.href">
<title>entries[i].xfn[j].href</title>
<para>The &uri; for this person.</para>
&isrelativelink;
</section>

<section id="reference.entry.xfn.name">
<title>entries[i].xfn[j].name</title>
<para>The name of this person, a string.</para>
</section>
</section>

<section id="reference.entry.vcard">
<?dbhtml filename="reference-entry-vcard.html"?>
<title>entries[i].vcard</title>
<abstract>
<title/>
<para>An RFC 2426-compliant &vCard; derived from <link linkend="advanced.microformats.hcard">&hCard; information</link> found in this entry's &html; content.</para>
</abstract>
<itemizedlist role="reference-from">
<title>Comes from</title>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:summary</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:summary</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/description</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/dc:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/rdf:description</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/dc:description</literal></para></listitem>
<listitem><para><literal>/atom10:feed/atom10:entry/atom10:content</literal></para></listitem>
<listitem><para><literal>/atom03:feed/atom03:entry/atom03:content</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/content:encoded</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/body</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/xhtml:body</literal></para></listitem>
<listitem><para><literal>/rss/channel/item/fullitem</literal></para></listitem>
<listitem><para><literal>/rdf:RDF/rdf:item/content:encoded</literal></para></listitem>
</itemizedlist>
</section>

<section id="reference.version">
<?dbhtml filename="reference-version.html"?>
<sectioninfo>
<abstract>
<title/>
<para>The format and version of the feed.</para>
</abstract>
</sectioninfo>
<title>version</title>
&all_versions;
<tip>
<title/>
<para>This element always exists, although it may be an empty string if the version can not be determined.</para>
</tip>
</section>

<section id="reference.namespaces">
<?dbhtml filename="reference-namespaces.html"?>
<sectioninfo>
<abstract>
<title/>
<para>A dictionary of all &xml; namespaces defined in the feed, as <literal>{prefix: namespaceURI}</literal>.</para>
</abstract>
</sectioninfo>
<title>namespaces</title>
<note>
<title/>
<para>The prefixes listed in the <varname>namespaces</varname> dictionary may not match the prefixes defined in the original feed.  See <xref linkend="advanced.namespaces"/> for more details.</para>
</note>
<tip>
<title/>
<para>This element always exists, although it may be an empty dictionary if the feed does not define any namespaces (such as an &rss; 2.0 feed with no extensions).</para>
</tip>
</section>

<section id="reference.encoding">
<?dbhtml filename="reference-encoding.html"?>
<sectioninfo>
<abstract>
<title/>
<para>The character encoding that was used to parse the feed.</para>
</abstract>
</sectioninfo>
<title>encoding</title>
<note>
<title/>
<para>The process by which &feedparser; determines the character encoding of the feed is explained in <xref linkend="advanced.encoding"/>.</para>
</note>
<tip>
<title/>
<para>This element always exists, although it may be an empty string if the character encoding can not be determined.</para>
</tip>
</section>

<section id="reference.status">
<?dbhtml filename="reference-status.html"?>
<sectioninfo>
<abstract>
<title/>
<para>The &http; status code that was returned by the web server when the feed was fetched.</para>
</abstract>
</sectioninfo>
<title>status</title>
<para>If the feed was redirected from its original &url;, <varname>status</varname> will contain the redirect status code, not the final status code.</para>
<para>If <varname>status</varname> is <constant>301</constant>, the feed was permanently redirected to a new &url;.  Clients should update their address book to request the new &url; from now on.</para>
<para>If <varname>status</varname> is <constant>410</constant>, the feed is gone.  Clients should stop polling the feed.</para>
<tip>
<title/>
<para><varname>status</varname> will only be present if the feed was retrieved from a web server.  If the feed was parsed from a local file or from a string in memory, <varname>status</varname> will not be present.</para>
</tip>
</section>

<section id="reference.href">
<?dbhtml filename="reference-href.html"?>
<sectioninfo>
<abstract>
<title/>
<para>The final &url; of the feed that was parsed.</para>
</abstract>
</sectioninfo>
<title>href</title>
<para>If the feed was redirected from the original requested address, <varname>href</varname> will contain the final (redirected) address.</para>
<tip>
<title/>
<para><varname>href</varname> will only be present if the feed was retrieved from a web server.  If the feed was parsed from a local file or from a string in memory, <varname>href</varname> will not be present.</para>
</tip>
</section>

<section id="reference.etag">
<?dbhtml filename="reference-etag.html"?>
<sectioninfo>
<abstract>
<title/>
<para>The &etag; of the feed, as specified in the &http; headers.</para>
</abstract>
</sectioninfo>
<title>etag</title>
<para>The purpose of <varname>etag</varname> is explained more fully in <xref linkend="http.etag"/>.</para>
<tip>
<title/>
<para><varname>etag</varname> will only be present if the feed was retrieved from a web server, and only if the web server provided an &etag; &http; header for the feed.  If the feed was parsed from a local file or from a string in memory, <varname>etag</varname> will not be present.</para>
</tip>
</section>

<section id="reference.modified">
<?dbhtml filename="reference-modified.html"?>
<sectioninfo>
<abstract>
<title/>
<para>The last-modified date of the feed, as specified in the &http; headers.</para>
</abstract>
</sectioninfo>
<title>modified</title>
<para>The purpose of <varname>modified</varname> is explained more fully in <xref linkend="http.etag"/>.</para>
<tip>
<title/>
<para><varname>modified</varname> will only be present if the feed was retrieved from a web server, and only if the web server provided a &lastmodified; &http; header for the feed.  If the feed was parsed from a local file or from a string in memory, <varname>modified</varname> will not be present.</para>
</tip>
</section>

<section id="reference.headers">
<?dbhtml filename="reference-headers.html"?>
<sectioninfo>
<abstract>
<title/>
<para>A dictionary of all the &http; headers received from the web server when retrieving the feed.</para>
</abstract>
</sectioninfo>
<title>headers</title>
<tip>
<title/>
<para><varname>headers</varname> will only be present if the feed was retrieved from a web server.  If the feed was parsed from a local file or from a string in memory, <varname>headers</varname> will not be present.</para>
</tip>
</section>

<section id="reference.bozo">
<?dbhtml filename="reference-bozo.html"?>
<sectioninfo>
<abstract>
<title/>
<para>An integer, either &one; or &zero;.  Set to &one; if the feed is not well-formed &xml;, and &zero; otherwise.</para>
</abstract>
</sectioninfo>
<title>bozo</title>
<para>See <xref linkend="advanced.bozo"/> for more details on the <varname>bozo</varname> bit.</para>
<tip>
<title/>
<para><varname>bozo</varname> may not be present.  Some platforms, such as Mac OS X 10.2 and some versions of FreeBSD, do not include an &xml; parser in their &python; distributions.  &feedparser; will still work on these platforms, but it will not be able to detect whether a feed is well-formed.  However, it <emphasis>can</emphasis> detect whether a feed's character encoding is incorrectly declared.  (This is done in &python;, not by the &xml; parser.)  See <xref linkend="advanced.encoding"/> for details.</para>
</tip>
</section>

<section id="reference.bozo_exception">
<?dbhtml filename="reference-bozo_exception.html"?>
<sectioninfo>
<abstract>
<title/>
<para>The exception raised when attempting to parse a non-well-formed feed.</para>
</abstract>
</sectioninfo>
<title>bozo_exception</title>
<para>See <xref linkend="advanced.bozo"/> for more details.</para>
<tip>
<title/>
<para><varname>bozo_exception</varname> will only be present if <varname>bozo</varname> is &one;.</para>
</tip>
</section>
</chapter>
&license;
</book>

<!--
TODO:
- language handling
-->
